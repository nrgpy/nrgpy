# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/requests_toolbelt/adapters/source.py
+++ b/..//venv/lib/python3.8/site-packages/requests_toolbelt/adapters/source.py
@@ -12,35 +12,41 @@
 
 
 class SourceAddressAdapter(HTTPAdapter):
-    """
-    A Source Address Adapter for Python Requests that enables you to choose the
+    """A Source Address Adapter for Python Requests that enables you to choose the
     local address to bind to. This allows you to send your HTTP requests from a
     specific interface and IP address.
-
+    
     Two address formats are accepted. The first is a string: this will set the
     local IP address to the address given in the string, and will also choose a
     semi-random high port for the local port number.
-
+    
     The second is a two-tuple of the form (ip address, port): for example,
     ``('10.10.10.10', 8999)``. This will set the local IP address to the first
     element, and the local port to the second element. If ``0`` is used as the
     port number, a semi-random high port will be selected.
-
+    
     .. warning:: Setting an explicit local port can have negative interactions
                  with connection-pooling in Requests: in particular, it risks
                  the possibility of getting "Address in use" errors. The
                  string-only argument is generally preferred to the tuple-form.
-
+    
     Example usage:
-
+    
     .. code-block:: python
-
+    
         import requests
         from requests_toolbelt.adapters.source import SourceAddressAdapter
-
+    
         s = requests.Session()
         s.mount('http://', SourceAddressAdapter('10.10.10.10'))
         s.mount('https://', SourceAddressAdapter(('10.10.10.10', 8999)))
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
     def __init__(self, source_address, **kwargs):
         if isinstance(source_address, basestring):
@@ -55,6 +61,21 @@
         super(SourceAddressAdapter, self).__init__(**kwargs)
 
     def init_poolmanager(self, connections, maxsize, block=False):
+        """
+
+        Parameters
+        ----------
+        connections :
+            
+        maxsize :
+            
+        block :
+             (Default value = False)
+
+        Returns
+        -------
+
+        """
         self.poolmanager = poolmanager.PoolManager(
             num_pools=connections,
             maxsize=maxsize,
@@ -62,6 +83,19 @@
             source_address=self.source_address)
 
     def proxy_manager_for(self, *args, **kwargs):
+        """
+
+        Parameters
+        ----------
+        *args :
+            
+        **kwargs :
+            
+
+        Returns
+        -------
+
+        """
         kwargs['source_address'] = self.source_address
         return super(SourceAddressAdapter, self).proxy_manager_for(
             *args, **kwargs)
