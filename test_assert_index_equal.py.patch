# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/util/test_assert_index_equal.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/util/test_assert_index_equal.py
@@ -6,15 +6,21 @@
 
 
 def test_index_equal_levels_mismatch():
-    msg = """Index are different
-
-Index levels are different
-\\[left\\]:  1, Int64Index\\(\\[1, 2, 3\\], dtype='int64'\\)
-\\[right\\]: 2, MultiIndex\\(\\[\\('A', 1\\),
+    """msg = """Index are different
+    
+    Index levels are different
+    \\[left\\]:  1, Int64Index\\(\\[1, 2, 3\\], dtype='int64'\\)
+    \\[right\\]: 2, MultiIndex\\(\\[\\('A', 1\\),
             \\('A', 2\\),
             \\('B', 3\\),
             \\('B', 4\\)\\],
-           \\)"""
+           \\)
+
+    Parameters
+    ----------
+
+    Returns
+    -------
 
     idx1 = Index([1, 2, 3])
     idx2 = MultiIndex.from_tuples([("A", 1), ("A", 2), ("B", 3), ("B", 4)])
@@ -24,11 +30,19 @@
 
 
 def test_index_equal_values_mismatch(check_exact):
-    msg = """MultiIndex level \\[1\\] are different
-
-MultiIndex level \\[1\\] values are different \\(25\\.0 %\\)
-\\[left\\]:  Int64Index\\(\\[2, 2, 3, 4\\], dtype='int64'\\)
-\\[right\\]: Int64Index\\(\\[1, 2, 3, 4\\], dtype='int64'\\)"""
+    """msg = """MultiIndex level \\[1\\] are different
+    
+    MultiIndex level \\[1\\] values are different \\(25\\.0 %\\)
+    \\[left\\]:  Int64Index\\(\\[2, 2, 3, 4\\], dtype='int64'\\)
+    \\[right\\]: Int64Index\\(\\[1, 2, 3, 4\\], dtype='int64'\\)
+
+    Parameters
+    ----------
+    check_exact :
+        
+
+    Returns
+    -------
 
     idx1 = MultiIndex.from_tuples([("A", 2), ("A", 2), ("B", 3), ("B", 4)])
     idx2 = MultiIndex.from_tuples([("A", 1), ("A", 2), ("B", 3), ("B", 4)])
@@ -38,11 +52,19 @@
 
 
 def test_index_equal_length_mismatch(check_exact):
-    msg = """Index are different
-
-Index length are different
-\\[left\\]:  3, Int64Index\\(\\[1, 2, 3\\], dtype='int64'\\)
-\\[right\\]: 4, Int64Index\\(\\[1, 2, 3, 4\\], dtype='int64'\\)"""
+    """msg = """Index are different
+    
+    Index length are different
+    \\[left\\]:  3, Int64Index\\(\\[1, 2, 3\\], dtype='int64'\\)
+    \\[right\\]: 4, Int64Index\\(\\[1, 2, 3, 4\\], dtype='int64'\\)
+
+    Parameters
+    ----------
+    check_exact :
+        
+
+    Returns
+    -------
 
     idx1 = Index([1, 2, 3])
     idx2 = Index([1, 2, 3, 4])
@@ -52,11 +74,19 @@
 
 
 def test_index_equal_class_mismatch(check_exact):
-    msg = """Index are different
-
-Index classes are different
-\\[left\\]:  Int64Index\\(\\[1, 2, 3\\], dtype='int64'\\)
-\\[right\\]: Float64Index\\(\\[1\\.0, 2\\.0, 3\\.0\\], dtype='float64'\\)"""
+    """msg = """Index are different
+    
+    Index classes are different
+    \\[left\\]:  Int64Index\\(\\[1, 2, 3\\], dtype='int64'\\)
+    \\[right\\]: Float64Index\\(\\[1\\.0, 2\\.0, 3\\.0\\], dtype='float64'\\)
+
+    Parameters
+    ----------
+    check_exact :
+        
+
+    Returns
+    -------
 
     idx1 = Index([1, 2, 3])
     idx2 = Index([1, 2, 3.0])
@@ -66,6 +96,17 @@
 
 
 def test_index_equal_values_close(check_exact):
+    """
+
+    Parameters
+    ----------
+    check_exact :
+        
+
+    Returns
+    -------
+
+    """
     idx1 = Index([1, 2, 3.0])
     idx2 = Index([1, 2, 3.0000000001])
 
@@ -83,6 +124,19 @@
 
 
 def test_index_equal_values_less_close(check_exact, rtol):
+    """
+
+    Parameters
+    ----------
+    check_exact :
+        
+    rtol :
+        
+
+    Returns
+    -------
+
+    """
     idx1 = Index([1, 2, 3.0])
     idx2 = Index([1, 2, 3.0001])
     kwargs = dict(check_exact=check_exact, rtol=rtol)
@@ -101,6 +155,19 @@
 
 
 def test_index_equal_values_too_far(check_exact, rtol):
+    """
+
+    Parameters
+    ----------
+    check_exact :
+        
+    rtol :
+        
+
+    Returns
+    -------
+
+    """
     idx1 = Index([1, 2, 3])
     idx2 = Index([1, 2, 4])
     kwargs = dict(check_exact=check_exact, rtol=rtol)
@@ -116,6 +183,19 @@
 
 
 def test_index_equal_level_values_mismatch(check_exact, rtol):
+    """
+
+    Parameters
+    ----------
+    check_exact :
+        
+    rtol :
+        
+
+    Returns
+    -------
+
+    """
     idx1 = MultiIndex.from_tuples([("A", 2), ("A", 2), ("B", 3), ("B", 4)])
     idx2 = MultiIndex.from_tuples([("A", 1), ("A", 2), ("B", 3), ("B", 4)])
     kwargs = dict(check_exact=check_exact, rtol=rtol)
@@ -135,6 +215,19 @@
     [(None, "x"), ("x", "x"), (np.nan, np.nan), (NaT, NaT), (np.nan, NaT)],
 )
 def test_index_equal_names(name1, name2):
+    """
+
+    Parameters
+    ----------
+    name1 :
+        
+    name2 :
+        
+
+    Returns
+    -------
+
+    """
 
     idx1 = Index([1, 2, 3], name=name1)
     idx2 = Index([1, 2, 3], name=name2)
@@ -155,12 +248,20 @@
 
 
 def test_index_equal_category_mismatch(check_categorical):
-    msg = """Index are different
-
-Attribute "dtype" are different
-\\[left\\]:  CategoricalDtype\\(categories=\\['a', 'b'\\], ordered=False\\)
-\\[right\\]: CategoricalDtype\\(categories=\\['a', 'b', 'c'\\], \
-ordered=False\\)"""
+    """msg = """Index are different
+    
+    Attribute "dtype" are different
+    \\[left\\]:  CategoricalDtype\\(categories=\\['a', 'b'\\], ordered=False\\)
+    \\[right\\]: CategoricalDtype\\(categories=\\['a', 'b', 'c'\\], \
+    ordered=False\\)
+
+    Parameters
+    ----------
+    check_categorical :
+        
+
+    Returns
+    -------
 
     idx1 = Index(Categorical(["a", "b"]))
     idx2 = Index(Categorical(["a", "b"], categories=["a", "b", "c"]))
