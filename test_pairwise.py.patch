# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/window/test_pairwise.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/window/test_pairwise.py
@@ -9,6 +9,7 @@
 
 
 class TestPairwise:
+    """ """
 
     # GH 7738
     df1s = [
@@ -30,6 +31,19 @@
     s = Series([1, 1, 3, 8])
 
     def compare(self, result, expected):
+        """
+
+        Parameters
+        ----------
+        result :
+            
+        expected :
+            
+
+        Returns
+        -------
+
+        """
 
         # since we have sorted the results
         # we can only compare non-nans
@@ -40,6 +54,17 @@
 
     @pytest.mark.parametrize("f", [lambda x: x.cov(), lambda x: x.corr()])
     def test_no_flex(self, f):
+        """
+
+        Parameters
+        ----------
+        f :
+            
+
+        Returns
+        -------
+
+        """
 
         # DataFrame methods (which do not call _flex_binary_moment())
 
@@ -63,6 +88,17 @@
         ],
     )
     def test_pairwise_with_self(self, f):
+        """
+
+        Parameters
+        ----------
+        f :
+            
+
+        Returns
+        -------
+
+        """
 
         # DataFrame with itself, pairwise=True
         # note that we may construct the 1st level of the MI
@@ -93,6 +129,17 @@
         ],
     )
     def test_no_pairwise_with_self(self, f):
+        """
+
+        Parameters
+        ----------
+        f :
+            
+
+        Returns
+        -------
+
+        """
 
         # DataFrame with itself, pairwise=False
         results = [f(df) for df in self.df1s]
@@ -115,6 +162,17 @@
         ],
     )
     def test_pairwise_with_other(self, f):
+        """
+
+        Parameters
+        ----------
+        f :
+            
+
+        Returns
+        -------
+
+        """
 
         # DataFrame with another DataFrame, pairwise=True
         results = [f(df, self.df2) for df in self.df1s]
@@ -139,6 +197,17 @@
         ],
     )
     def test_no_pairwise_with_other(self, f):
+        """
+
+        Parameters
+        ----------
+        f :
+            
+
+        Returns
+        -------
+
+        """
 
         # DataFrame with another DataFrame, pairwise=False
         results = [
@@ -171,6 +240,17 @@
         ],
     )
     def test_pairwise_with_series(self, f):
+        """
+
+        Parameters
+        ----------
+        f :
+            
+
+        Returns
+        -------
+
+        """
 
         # DataFrame with a Series
         results = [f(df, self.s) for df in self.df1s] + [
@@ -184,6 +264,7 @@
                 self.compare(result, results[0])
 
     def test_corr_freq_memory_error(self):
+        """ """
         # GH 31789
         s = Series(range(5), index=date_range("2020", periods=5))
         result = s.rolling("12H").corr(s)
@@ -191,6 +272,7 @@
         tm.assert_series_equal(result, expected)
 
     def test_cov_mulittindex(self):
+        """ """
         # GH 34440
 
         columns = MultiIndex.from_product([list("ab"), list("xy"), list("AB")])
