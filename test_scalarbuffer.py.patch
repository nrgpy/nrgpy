# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/numpy/core/tests/test_scalarbuffer.py
+++ b/..//venv/lib/python3.8/site-packages/numpy/core/tests/test_scalarbuffer.py
@@ -31,9 +31,21 @@
 
 
 class TestScalarPEP3118:
+    """ """
 
     @pytest.mark.parametrize('scalar', scalars_only, ids=codes_only)
     def test_scalar_match_array(self, scalar):
+        """
+
+        Parameters
+        ----------
+        scalar :
+            
+
+        Returns
+        -------
+
+        """
         x = scalar()
         a = np.array([], dtype=np.dtype(scalar))
         mv_x = memoryview(x)
@@ -42,6 +54,17 @@
 
     @pytest.mark.parametrize('scalar', scalars_only, ids=codes_only)
     def test_scalar_dim(self, scalar):
+        """
+
+        Parameters
+        ----------
+        scalar :
+            
+
+        Returns
+        -------
+
+        """
         x = scalar()
         mv_x = memoryview(x)
         assert_equal(mv_x.itemsize, np.dtype(scalar).itemsize)
@@ -52,11 +75,25 @@
 
     @pytest.mark.parametrize('scalar, code', scalars_and_codes, ids=codes_only)
     def test_scalar_known_code(self, scalar, code):
+        """
+
+        Parameters
+        ----------
+        scalar :
+            
+        code :
+            
+
+        Returns
+        -------
+
+        """
         x = scalar()
         mv_x = memoryview(x)
         assert_equal(mv_x.format, code)
 
     def test_void_scalar_structured_data(self):
+        """ """
         dt = np.dtype([('name', np.unicode_, 16), ('grades', np.float64, (2,))])
         x = np.array(('ndarray_scalar', (1.2, 3.0)), dtype=dt)[()]
         assert_(isinstance(x, np.void))
@@ -77,10 +114,22 @@
         assert_equal(mv_x.format, mv_a.format)
 
     def _as_dict(self, m):
+        """
+
+        Parameters
+        ----------
+        m :
+            
+
+        Returns
+        -------
+
+        """
         return dict(strides=m.strides, shape=m.shape, itemsize=m.itemsize,
                     ndim=m.ndim, format=m.format)
 
     def test_datetime_memoryview(self):
+        """ """
         # gh-11656
         # Values verified with v1.13.3, shape is not () as in test_scalar_dim
 
@@ -105,6 +154,17 @@
         pytest.param("\U0001f4bb\U0001f4bb", id="non-BMP"),
     ])
     def test_str_ucs4(self, s):
+        """
+
+        Parameters
+        ----------
+        s :
+            
+
+        Returns
+        -------
+
+        """
         s = np.str_(s)  # only our subclass implements the buffer protocol
 
         # all the same, characters always encode as ucs4
