# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/io/pickle.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/io/pickle.py
@@ -15,8 +15,7 @@
     compression: Optional[str] = "infer",
     protocol: int = pickle.HIGHEST_PROTOCOL,
 ):
-    """
-    Pickle (serialize) object to file.
+    """Pickle (serialize) object to file.
 
     Parameters
     ----------
@@ -24,10 +23,8 @@
         Any python object.
     filepath_or_buffer : str, path object or file-like object
         File path, URL, or buffer where the pickled object will be stored.
-
         .. versionchanged:: 1.0.0
-           Accept URL. URL has to be of S3 or GCS.
-
+        Accept URL. URL has to be of S3 or GCS.
     compression : {'infer', 'gzip', 'bz2', 'zip', 'xz', None}, default 'infer'
         If 'infer' and 'path_or_url' is path-like, then detect compression from
         the following extensions: '.gz', '.bz2', '.zip', or '.xz' (otherwise no
@@ -41,8 +38,18 @@
         For Python >= 3.4, 4 is a valid value. A negative value for the
         protocol parameter is equivalent to setting its value to
         HIGHEST_PROTOCOL.
-
         .. [1] https://docs.python.org/3/library/pickle.html
+    obj: Any :
+        
+    filepath_or_buffer: FilePathOrBuffer :
+        
+    compression: Optional[str] :
+         (Default value = "infer")
+    protocol: int :
+         (Default value = pickle.HIGHEST_PROTOCOL)
+
+    Returns
+    -------
 
     See Also
     --------
@@ -50,7 +57,6 @@
     DataFrame.to_hdf : Write DataFrame to an HDF5 file.
     DataFrame.to_sql : Write DataFrame to a SQL database.
     DataFrame.to_parquet : Write a DataFrame to the binary parquet format.
-
     Examples
     --------
     >>> original_df = pd.DataFrame({"foo": range(5), "bar": range(5, 10)})
@@ -62,7 +68,7 @@
     3    3    8
     4    4    9
     >>> pd.to_pickle(original_df, "./dummy.pkl")
-
+    
     >>> unpickled_df = pd.read_pickle("./dummy.pkl")
     >>> unpickled_df
        foo  bar
@@ -71,7 +77,7 @@
     2    2    7
     3    3    8
     4    4    9
-
+    
     >>> import os
     >>> os.remove("./dummy.pkl")
     """
@@ -99,11 +105,10 @@
 def read_pickle(
     filepath_or_buffer: FilePathOrBuffer, compression: Optional[str] = "infer"
 ):
-    """
-    Load pickled pandas object (or any object) from file.
-
+    """Load pickled pandas object (or any object) from file.
+    
     .. warning::
-
+    
        Loading pickled data received from untrusted sources can be
        unsafe. See `here <https://docs.python.org/3/library/pickle.html>`__.
 
@@ -111,19 +116,22 @@
     ----------
     filepath_or_buffer : str, path object or file-like object
         File path, URL, or buffer where the pickled object will be loaded from.
-
         .. versionchanged:: 1.0.0
-           Accept URL. URL is not limited to S3 and GCS.
-
+        Accept URL. URL is not limited to S3 and GCS.
     compression : {'infer', 'gzip', 'bz2', 'zip', 'xz', None}, default 'infer'
         If 'infer' and 'path_or_url' is path-like, then detect compression from
         the following extensions: '.gz', '.bz2', '.zip', or '.xz' (otherwise no
         compression) If 'infer' and 'path_or_url' is not path-like, then use
         None (= no decompression).
+    filepath_or_buffer: FilePathOrBuffer :
+        
+    compression: Optional[str] :
+         (Default value = "infer")
 
     Returns
     -------
     unpickled : same type as object stored in file
+        
 
     See Also
     --------
@@ -132,11 +140,9 @@
     read_hdf : Read HDF5 file into a DataFrame.
     read_sql : Read SQL query or database table into a DataFrame.
     read_parquet : Load a parquet object, returning a DataFrame.
-
     Notes
     -----
     read_pickle is only guaranteed to be backwards compatible to pandas 0.20.3.
-
     Examples
     --------
     >>> original_df = pd.DataFrame({"foo": range(5), "bar": range(5, 10)})
@@ -148,7 +154,7 @@
     3    3    8
     4    4    9
     >>> pd.to_pickle(original_df, "./dummy.pkl")
-
+    
     >>> unpickled_df = pd.read_pickle("./dummy.pkl")
     >>> unpickled_df
        foo  bar
@@ -157,7 +163,7 @@
     2    2    7
     3    3    8
     4    4    9
-
+    
     >>> import os
     >>> os.remove("./dummy.pkl")
     """
