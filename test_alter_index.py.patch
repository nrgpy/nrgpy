# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/series/indexing/test_alter_index.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/series/indexing/test_alter_index.py
@@ -7,6 +7,19 @@
 
 
 def test_reindex(datetime_series, string_series):
+    """
+
+    Parameters
+    ----------
+    datetime_series :
+        
+    string_series :
+        
+
+    Returns
+    -------
+
+    """
     identity = string_series.reindex(string_series.index)
 
     # __array_interface__ is not defined for older numpies
@@ -46,6 +59,7 @@
 
 
 def test_reindex_nan():
+    """ """
     ts = Series([2, 3, 5, 7], index=[1, 4, np.nan, 8])
 
     i, j = [np.nan, 1, np.nan, 8, 4, np.nan], [2, 0, 2, 3, 1, 2]
@@ -58,6 +72,7 @@
 
 
 def test_reindex_series_add_nat():
+    """ """
     rng = date_range("1/1/2000 00:00:00", periods=10, freq="10s")
     series = Series(rng)
 
@@ -70,6 +85,7 @@
 
 
 def test_reindex_with_datetimes():
+    """ """
     rng = date_range("1/1/2000", periods=20)
     ts = Series(np.random.randn(20), index=rng)
 
@@ -83,6 +99,17 @@
 
 
 def test_reindex_corner(datetime_series):
+    """
+
+    Parameters
+    ----------
+    datetime_series :
+        
+
+    Returns
+    -------
+
+    """
     # (don't forget to fix this) I think it's fixed
     empty = Series(dtype=object)
     empty.reindex(datetime_series.index, method="pad")  # it works
@@ -106,6 +133,7 @@
 
 
 def test_reindex_pad():
+    """ """
     s = Series(np.arange(10), dtype="int64")
     s2 = s[::2]
 
@@ -147,6 +175,7 @@
 
 
 def test_reindex_nearest():
+    """ """
     s = Series(np.arange(10, dtype="int64"))
     target = [0.1, 0.9, 1.5, 2.0]
     result = s.reindex(target, method="nearest")
@@ -163,10 +192,22 @@
 
 
 def test_reindex_backfill():
+    """ """
     pass
 
 
 def test_reindex_int(datetime_series):
+    """
+
+    Parameters
+    ----------
+    datetime_series :
+        
+
+    Returns
+    -------
+
+    """
     ts = datetime_series[::2]
     int_ts = Series(np.zeros(len(ts), dtype=int), index=ts.index)
 
@@ -182,6 +223,17 @@
 
 
 def test_reindex_bool(datetime_series):
+    """
+
+    Parameters
+    ----------
+    datetime_series :
+        
+
+    Returns
+    -------
+
+    """
     # A series other than float, int, string, or object
     ts = datetime_series[::2]
     bool_ts = Series(np.zeros(len(ts), dtype=bool), index=ts.index)
@@ -198,6 +250,17 @@
 
 
 def test_reindex_bool_pad(datetime_series):
+    """
+
+    Parameters
+    ----------
+    datetime_series :
+        
+
+    Returns
+    -------
+
+    """
     # fail
     ts = datetime_series[5:]
     bool_ts = Series(np.zeros(len(ts), dtype=bool), index=ts.index)
@@ -206,6 +269,7 @@
 
 
 def test_reindex_categorical():
+    """ """
     index = date_range("20000101", periods=3)
 
     # reindexing to an invalid Categorical
@@ -230,6 +294,7 @@
 
 
 def test_reindex_fill_value():
+    """ """
     # -----------------------------------------------------------
     # floats
     floats = Series([1.0, 2.0, 3.0])
@@ -281,6 +346,7 @@
 
 
 def test_reindex_datetimeindexes_tz_naive_and_aware():
+    """ """
     # GH 8306
     idx = date_range("20131101", tz="America/Chicago", periods=7)
     newidx = date_range("20131103", periods=10, freq="H")
@@ -291,6 +357,7 @@
 
 
 def test_reindex_empty_series_tz_dtype():
+    """ """
     # GH 20869
     result = Series(dtype="datetime64[ns, UTC]").reindex([0, 1])
     expected = Series([pd.NaT] * 2, dtype="datetime64[ns, UTC]")
