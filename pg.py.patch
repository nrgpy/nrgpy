# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/numpy/distutils/fcompiler/pg.py
+++ b/..//venv/lib/python3.8/site-packages/numpy/distutils/fcompiler/pg.py
@@ -9,6 +9,7 @@
 
 
 class PGroupFCompiler(FCompiler):
+    """ """
 
     compiler_type = 'pg'
     description = 'Portland Group Fortran Compiler'
@@ -41,30 +42,47 @@
     module_include_switch = '-I'
 
     def get_flags(self):
+        """ """
         opt = ['-Minform=inform', '-Mnosecond_underscore']
         return self.pic_flags + opt
 
     def get_flags_opt(self):
+        """ """
         return ['-fast']
 
     def get_flags_debug(self):
+        """ """
         return ['-g']
 
     if platform == 'darwin':
         def get_flags_linker_so(self):
+            """ """
             return ["-dynamic", '-undefined', 'dynamic_lookup']
 
     else:
         def get_flags_linker_so(self):
+            """ """
             return ["-shared", '-fpic']
 
     def runtime_library_dir_option(self, dir):
+        """
+
+        Parameters
+        ----------
+        dir :
+            
+
+        Returns
+        -------
+
+        """
         return '-R%s' % dir
 
 
 import functools
 
 class PGroupFlangCompiler(FCompiler):
+    """ """
     compiler_type = 'flang'
     description = 'Portland Group Fortran LLVM Compiler'
     version_pattern = r'\s*(flang|clang) version (?P<version>[\d.-]+).*'
@@ -86,6 +104,7 @@
     module_dir_switch = '-module '  # Don't remove ending space!
 
     def get_libraries(self):
+        """ """
         opt = FCompiler.get_libraries(self)
         opt.extend(['flang', 'flangrti', 'ompstub'])
         return opt
@@ -100,21 +119,37 @@
         return opt
 
     def get_flags(self):
+        """ """
         return []
 
     def get_flags_free(self):
+        """ """
         return []
 
     def get_flags_debug(self):
+        """ """
         return ['-g']
 
     def get_flags_opt(self):
+        """ """
         return ['-O3']
 
     def get_flags_arch(self):
+        """ """
         return []
 
     def runtime_library_dir_option(self, dir):
+        """
+
+        Parameters
+        ----------
+        dir :
+            
+
+        Returns
+        -------
+
+        """
         raise NotImplementedError
 
 
