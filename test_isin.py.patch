# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/indexes/multi/test_isin.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/indexes/multi/test_isin.py
@@ -9,6 +9,7 @@
 
 @pytest.mark.skipif(not PYPY, reason="tuples cmp recursively on PyPy")
 def test_isin_nan_pypy():
+    """ """
     idx = MultiIndex.from_arrays([["foo", "bar"], [1.0, np.nan]])
     tm.assert_numpy_array_equal(idx.isin([("bar", np.nan)]), np.array([False, True]))
     tm.assert_numpy_array_equal(
@@ -17,6 +18,7 @@
 
 
 def test_isin():
+    """ """
     values = [("foo", 2), ("bar", 3), ("quux", 4)]
 
     idx = MultiIndex.from_arrays([["qux", "baz", "foo", "bar"], np.arange(4)])
@@ -33,6 +35,7 @@
 
 @pytest.mark.skipif(PYPY, reason="tuples cmp recursively on PyPy")
 def test_isin_nan_not_pypy():
+    """ """
     idx = MultiIndex.from_arrays([["foo", "bar"], [1.0, np.nan]])
     tm.assert_numpy_array_equal(idx.isin([("bar", np.nan)]), np.array([False, False]))
     tm.assert_numpy_array_equal(
@@ -41,6 +44,7 @@
 
 
 def test_isin_level_kwarg():
+    """ """
     idx = MultiIndex.from_arrays([["qux", "baz", "foo", "bar"], np.arange(4)])
 
     vals_0 = ["foo", "bar", "quux"]
@@ -84,6 +88,21 @@
     ],
 )
 def test_isin_multi_index_with_missing_value(labels, expected, level):
+    """
+
+    Parameters
+    ----------
+    labels :
+        
+    expected :
+        
+    level :
+        
+
+    Returns
+    -------
+
+    """
     # GH 19132
     midx = MultiIndex.from_arrays([[np.nan, "a", "b"], ["c", "d", np.nan]])
     tm.assert_numpy_array_equal(midx.isin(labels, level=level), expected)
