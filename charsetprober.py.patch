# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/chardet/charsetprober.py
+++ b/..//venv/lib/python3.8/site-packages/chardet/charsetprober.py
@@ -33,6 +33,7 @@
 
 
 class CharSetProber(object):
+    """ """
 
     SHORTCUT_THRESHOLD = 0.95
 
@@ -42,41 +43,75 @@
         self.logger = logging.getLogger(__name__)
 
     def reset(self):
+        """ """
         self._state = ProbingState.DETECTING
 
     @property
     def charset_name(self):
+        """ """
         return None
 
     def feed(self, buf):
+        """
+
+        Parameters
+        ----------
+        buf :
+            
+
+        Returns
+        -------
+
+        """
         pass
 
     @property
     def state(self):
+        """ """
         return self._state
 
     def get_confidence(self):
+        """ """
         return 0.0
 
     @staticmethod
     def filter_high_byte_only(buf):
+        """
+
+        Parameters
+        ----------
+        buf :
+            
+
+        Returns
+        -------
+
+        """
         buf = re.sub(b'([\x00-\x7F])+', b' ', buf)
         return buf
 
     @staticmethod
     def filter_international_words(buf):
-        """
-        We define three types of bytes:
+        """We define three types of bytes:
         alphabet: english alphabets [a-zA-Z]
         international: international characters [\x80-\xFF]
         marker: everything else [^a-zA-Z\x80-\xFF]
-
+        
         The input buffer can be thought to contain a series of words delimited
         by markers. This function works to filter all words that contain at
         least one international character. All contiguous sequences of markers
         are replaced by a single space ascii character.
+        
+        This filter applies to all scripts which do not use English characters.
 
-        This filter applies to all scripts which do not use English characters.
+        Parameters
+        ----------
+        buf :
+            
+
+        Returns
+        -------
+
         """
         filtered = bytearray()
 
@@ -102,15 +137,23 @@
 
     @staticmethod
     def filter_with_english_letters(buf):
-        """
-        Returns a copy of ``buf`` that retains only the sequences of English
+        """Returns a copy of ``buf`` that retains only the sequences of English
         alphabet and high byte characters that are not between <> characters.
         Also retains English alphabet and high byte characters immediately
         before occurrences of >.
-
+        
         This filter can be applied to all scripts which contain both English
         characters and extended ASCII characters, but is currently only used by
         ``Latin1Prober``.
+
+        Parameters
+        ----------
+        buf :
+            
+
+        Returns
+        -------
+
         """
         filtered = bytearray()
         in_tag = False
