# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/numpy/_globals.py
+++ b/..//venv/lib/python3.8/site-packages/numpy/_globals.py
@@ -7,6 +7,17 @@
 will still work correctly after numpy is reloaded::
 
     def foo(arg=np._NoValue):
+        """
+
+        Parameters
+        ----------
+        arg :
+             (Default value = np._NoValue)
+
+        Returns
+        -------
+
+        """
         if arg is np._NoValue:
             ...
 
@@ -29,11 +40,17 @@
 
 class ModuleDeprecationWarning(DeprecationWarning):
     """Module deprecation warning.
-
+    
     The nose tester turns ordinary Deprecation warnings into test failures.
     That makes it hard to deprecate whole modules, because they get
     imported by default. So this is a special Deprecation warning that the
     nose tester will let pass without making tests fail.
+
+    Parameters
+    ----------
+
+    Returns
+    -------
 
     """
 
@@ -43,10 +60,16 @@
 
 class VisibleDeprecationWarning(UserWarning):
     """Visible deprecation warning.
-
+    
     By default, python will not show deprecation warnings, so this class
     can be used when a very visible warning is helpful, for example because
     the usage is most likely a user bug.
+
+    Parameters
+    ----------
+
+    Returns
+    -------
 
     """
 
@@ -56,10 +79,17 @@
 
 class _NoValueType:
     """Special keyword value.
-
+    
     The instance of this class may be used as the default value assigned to a
     deprecated keyword in order to check if it has been given a user defined
     value.
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
     __instance = None
     def __new__(cls):
