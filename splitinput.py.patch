# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/IPython/core/splitinput.py
+++ b/..//venv/lib/python3.8/site-packages/IPython/core/splitinput.py
@@ -53,6 +53,17 @@
 def split_user_input(line, pattern=None):
     """Split user input into initial whitespace, escape character, function part
     and the rest.
+
+    Parameters
+    ----------
+    line :
+        
+    pattern :
+         (Default value = None)
+
+    Returns
+    -------
+
     """
     # We need to ensure that the rest of this routine deals only with unicode
     encoding = get_stream_enc(sys.stdin, 'utf-8')
@@ -80,32 +91,39 @@
 
 class LineInfo(object):
     """A single line of input and associated info.
-
+    
     Includes the following as properties:
-
+    
     line
       The original, raw line
-
+    
     continue_prompt
       Is this line a continuation in a sequence of multiline input?
-
+    
     pre
       Any leading whitespace.
-
+    
     esc
       The escape character(s) in pre or the empty string if there isn't one.
       Note that '!!' and '??' are possible values for esc. Otherwise it will
       always be a single character.
-
+    
     ifun
       The 'function part', which is basically the maximal initial sequence
       of valid python identifiers and the '.' character. This is what is
       checked for alias and magic transformations, used for auto-calling,
       etc. In contrast to Python identifiers, it may start with "%" and contain
       "*".
-
+    
     the_rest
       Everything else on the line.
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
     def __init__(self, line, continue_prompt=False):
         self.line            = line
@@ -122,14 +140,21 @@
         """Do a full, attribute-walking lookup of the ifun in the various
         namespaces for the given IPython InteractiveShell instance.
 
-        Return a dict with keys: {found, obj, ospace, ismagic}
+        Parameters
+        ----------
+        ip :
+            
 
-        Note: can cause state changes because of calling getattr, but should
-        only be run if autocall is on and if the line hasn't matched any
-        other, less dangerous handlers.
+        Returns
+        -------
+        type
+            Note: can cause state changes because of calling getattr, but should
+            only be run if autocall is on and if the line hasn't matched any
+            other, less dangerous handlers.
+            
+            Does cache the results of the call, so can be called multiple times
+            without worrying about *further* damaging state.
 
-        Does cache the results of the call, so can be called multiple times
-        without worrying about *further* damaging state.
         """
         return ip._ofind(self.ifun)
 
