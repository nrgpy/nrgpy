# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/testpath/asserts.py
+++ b/..//venv/lib/python3.8/site-packages/testpath/asserts.py
@@ -26,6 +26,17 @@
     _strpath = os.fspath
 else:
     def _strpath(p):
+        """
+
+        Parameters
+        ----------
+        p :
+            
+
+        Returns
+        -------
+
+        """
         if hasattr(p, '__fspath__'):
             return p.__fspath__()
         elif isinstance(p, Path):
@@ -33,6 +44,21 @@
         return p
 
 def _stat_for_assert(path, follow_symlinks=True, msg=None):
+    """
+
+    Parameters
+    ----------
+    path :
+        
+    follow_symlinks :
+         (Default value = True)
+    msg :
+         (Default value = None)
+
+    Returns
+    -------
+
+    """
     stat = os.stat if follow_symlinks else os.lstat
     try:
         return stat(path)
@@ -43,11 +69,33 @@
 
 def assert_path_exists(path, msg=None):
     """Assert that something exists at the given path.
+
+    Parameters
+    ----------
+    path :
+        
+    msg :
+         (Default value = None)
+
+    Returns
+    -------
+
     """
     _stat_for_assert(_strpath(path), True, msg)
 
 def assert_not_path_exists(path, msg=None):
     """Assert that nothing exists at the given path.
+
+    Parameters
+    ----------
+    path :
+        
+    msg :
+         (Default value = None)
+
+    Returns
+    -------
+
     """
     path = _strpath(path)
     if os.path.exists(path):
@@ -60,6 +108,19 @@
     
     With follow_symlinks=True, the default, this will pass if path is a symlink
     to a regular file. With follow_symlinks=False, it will fail in that case.
+
+    Parameters
+    ----------
+    path :
+        
+    follow_symlinks :
+         (Default value = True)
+    msg :
+         (Default value = None)
+
+    Returns
+    -------
+
     """
     path = _strpath(path)
     st = _stat_for_assert(path, follow_symlinks, msg)
@@ -73,6 +134,19 @@
     
     With follow_symlinks=True, the default, this will fail if path is a symlink
     to a regular file. With follow_symlinks=False, it will pass in that case.
+
+    Parameters
+    ----------
+    path :
+        
+    follow_symlinks :
+         (Default value = True)
+    msg :
+         (Default value = None)
+
+    Returns
+    -------
+
     """
     path = _strpath(path)
     st = _stat_for_assert(path, follow_symlinks, msg)
@@ -86,6 +160,19 @@
     
     With follow_symlinks=True, the default, this will pass if path is a symlink
     to a directory. With follow_symlinks=False, it will fail in that case.
+
+    Parameters
+    ----------
+    path :
+        
+    follow_symlinks :
+         (Default value = True)
+    msg :
+         (Default value = None)
+
+    Returns
+    -------
+
     """
     path = _strpath(path)
     st = _stat_for_assert(path, follow_symlinks, msg)
@@ -99,6 +186,19 @@
     
     With follow_symlinks=True, the default, this will fail if path is a symlink
     to a directory. With follow_symlinks=False, it will pass in that case.
+
+    Parameters
+    ----------
+    path :
+        
+    follow_symlinks :
+         (Default value = True)
+    msg :
+         (Default value = None)
+
+    Returns
+    -------
+
     """
     path = _strpath(path)
     st = _stat_for_assert(path, follow_symlinks, msg)
@@ -119,6 +219,19 @@
     """Assert that path exists and is a symlink.
     
     If to is specified, also check that it is the target of the symlink.
+
+    Parameters
+    ----------
+    path :
+        
+    to :
+         (Default value = None)
+    msg :
+         (Default value = None)
+
+    Returns
+    -------
+
     """
     path = _strpath(path)
     st = _stat_for_assert(path, False, msg)
@@ -138,6 +251,17 @@
 
 def assert_not_islink(path, msg=None):
     """Assert that path exists but is not a symlink.
+
+    Parameters
+    ----------
+    path :
+        
+    msg :
+         (Default value = None)
+
+    Returns
+    -------
+
     """
     path = _strpath(path)
     st = _stat_for_assert(path, False, msg)
@@ -148,9 +272,22 @@
 
 def assert_ispipe(path, follow_symlinks=True, msg=None):
     """Assert that path exists and is a named pipe (FIFO).
-
+    
     With follow_symlinks=True, the default, this will pass if path is a symlink
     to a named pipe. With follow_symlinks=False, it will fail in that case.
+
+    Parameters
+    ----------
+    path :
+        
+    follow_symlinks :
+         (Default value = True)
+    msg :
+         (Default value = None)
+
+    Returns
+    -------
+
     """
     path = _strpath(path)
     st = _stat_for_assert(path, follow_symlinks, msg)
@@ -161,9 +298,22 @@
 
 def assert_not_ispipe(path, follow_symlinks=True, msg=None):
     """Assert that path exists but is not a named pipe (FIFO).
-
+    
     With follow_symlinks=True, the default, this will fail if path is a symlink
     to a named pipe. With follow_symlinks=False, it will pass in that case.
+
+    Parameters
+    ----------
+    path :
+        
+    follow_symlinks :
+         (Default value = True)
+    msg :
+         (Default value = None)
+
+    Returns
+    -------
+
     """
     path = _strpath(path)
     st = _stat_for_assert(path, follow_symlinks, msg)
@@ -174,9 +324,22 @@
 
 def assert_issocket(path, follow_symlinks=True, msg=None):
     """Assert that path exists and is a Unix domain socket.
-
+    
     With follow_symlinks=True, the default, this will pass if path is a symlink
     to a Unix domain socket. With follow_symlinks=False, it will fail in that case.
+
+    Parameters
+    ----------
+    path :
+        
+    follow_symlinks :
+         (Default value = True)
+    msg :
+         (Default value = None)
+
+    Returns
+    -------
+
     """
     path = _strpath(path)
     st = _stat_for_assert(path, follow_symlinks, msg)
@@ -187,9 +350,22 @@
 
 def assert_not_issocket(path, follow_symlinks=True, msg=None):
     """Assert that path exists but is not a Unix domain socket.
-
+    
     With follow_symlinks=True, the default, this will fail if path is a symlink
     to a Unix domain socket. With follow_symlinks=False, it will pass in that case.
+
+    Parameters
+    ----------
+    path :
+        
+    follow_symlinks :
+         (Default value = True)
+    msg :
+         (Default value = None)
+
+    Returns
+    -------
+
     """
     path = _strpath(path)
     st = _stat_for_assert(path, follow_symlinks, msg)
