# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/generic/methods/test_first_valid_index.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/generic/methods/test_first_valid_index.py
@@ -9,8 +9,20 @@
 
 
 class TestFirstValidIndex:
+    """ """
     @pytest.mark.parametrize("klass", [Series, DataFrame])
     def test_first_valid_index_single_nan(self, klass):
+        """
+
+        Parameters
+        ----------
+        klass :
+            
+
+        Returns
+        -------
+
+        """
         # GH#9752 Series/DataFrame should both return None, not raise
         obj = klass([np.nan])
 
@@ -21,6 +33,17 @@
         "empty", [DataFrame(), Series(dtype=object), Series([], index=[], dtype=object)]
     )
     def test_first_valid_index_empty(self, empty):
+        """
+
+        Parameters
+        ----------
+        empty :
+            
+
+        Returns
+        -------
+
+        """
         # GH#12800
         assert empty.last_valid_index() is None
         assert empty.first_valid_index() is None
@@ -37,6 +60,23 @@
         ],
     )
     def test_first_last_valid_frame(self, data, idx, expected_first, expected_last):
+        """
+
+        Parameters
+        ----------
+        data :
+            
+        idx :
+            
+        expected_first :
+            
+        expected_last :
+            
+
+        Returns
+        -------
+
+        """
         # GH#21441
         df = DataFrame(data, index=idx)
         assert expected_first == df.first_valid_index()
@@ -44,6 +84,17 @@
 
     @pytest.mark.parametrize("index_func", [tm.makeStringIndex, tm.makeDateIndex])
     def test_first_last_valid(self, index_func):
+        """
+
+        Parameters
+        ----------
+        index_func :
+            
+
+        Returns
+        -------
+
+        """
         N = 30
         index = index_func(N)
         mat = np.random.randn(N)
@@ -60,6 +111,17 @@
 
     @pytest.mark.parametrize("index_func", [tm.makeStringIndex, tm.makeDateIndex])
     def test_first_last_valid_all_nan(self, index_func):
+        """
+
+        Parameters
+        ----------
+        index_func :
+            
+
+        Returns
+        -------
+
+        """
         # GH#17400: no valid entries
         index = index_func(30)
         frame = DataFrame(np.nan, columns=["foo"], index=index)
@@ -72,6 +134,7 @@
         assert ser.last_valid_index() is None
 
     def test_first_last_valid_preserves_freq(self):
+        """ """
         # GH#20499: its preserves freq with holes
         index = date_range("20110101", periods=30, freq="B")
         frame = DataFrame(np.nan, columns=["foo"], index=index)
