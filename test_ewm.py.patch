# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/window/test_ewm.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/window/test_ewm.py
@@ -9,6 +9,7 @@
 
 
 def test_doc_string():
+    """ """
 
     df = DataFrame({"B": [0, 1, 2, np.nan, 4]})
     df
@@ -16,6 +17,17 @@
 
 
 def test_constructor(which):
+    """
+
+    Parameters
+    ----------
+    which :
+        
+
+    Returns
+    -------
+
+    """
 
     c = which.ewm
 
@@ -61,6 +73,17 @@
 
 @pytest.mark.parametrize("method", ["std", "mean", "var"])
 def test_numpy_compat(method):
+    """
+
+    Parameters
+    ----------
+    method :
+        
+
+    Returns
+    -------
+
+    """
     # see gh-12811
     e = ExponentialMovingWindow(Series([2, 4, 6]), alpha=0.5)
 
@@ -73,24 +96,38 @@
 
 
 def test_ewma_times_not_datetime_type():
+    """ """
     msg = r"times must be datetime64\[ns\] dtype."
     with pytest.raises(ValueError, match=msg):
         Series(range(5)).ewm(times=np.arange(5))
 
 
 def test_ewma_times_not_same_length():
+    """ """
     msg = "times must be the same length as the object."
     with pytest.raises(ValueError, match=msg):
         Series(range(5)).ewm(times=np.arange(4).astype("datetime64[ns]"))
 
 
 def test_ewma_halflife_not_correct_type():
+    """ """
     msg = "halflife must be a string or datetime.timedelta object"
     with pytest.raises(ValueError, match=msg):
         Series(range(5)).ewm(halflife=1, times=np.arange(5).astype("datetime64[ns]"))
 
 
 def test_ewma_halflife_without_times(halflife_with_times):
+    """
+
+    Parameters
+    ----------
+    halflife_with_times :
+        
+
+    Returns
+    -------
+
+    """
     msg = "halflife can only be a timedelta convertible argument if times is not None."
     with pytest.raises(ValueError, match=msg):
         Series(range(5)).ewm(halflife=halflife_with_times)
@@ -107,6 +144,21 @@
 )
 @pytest.mark.parametrize("min_periods", [0, 2])
 def test_ewma_with_times_equal_spacing(halflife_with_times, times, min_periods):
+    """
+
+    Parameters
+    ----------
+    halflife_with_times :
+        
+    times :
+        
+    min_periods :
+        
+
+    Returns
+    -------
+
+    """
     halflife = halflife_with_times
     data = np.arange(10.0)
     data[::2] = np.nan
@@ -117,6 +169,17 @@
 
 
 def test_ewma_with_times_variable_spacing(tz_aware_fixture):
+    """
+
+    Parameters
+    ----------
+    tz_aware_fixture :
+        
+
+    Returns
+    -------
+
+    """
     tz = tz_aware_fixture
     halflife = "23 days"
     times = DatetimeIndex(
