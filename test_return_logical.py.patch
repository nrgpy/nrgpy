# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/numpy/f2py/tests/test_return_logical.py
+++ b/..//venv/lib/python3.8/site-packages/numpy/f2py/tests/test_return_logical.py
@@ -6,8 +6,20 @@
 
 
 class TestReturnLogical(util.F2PyTest):
+    """ """
 
     def check_function(self, t):
+        """
+
+        Parameters
+        ----------
+        t :
+            
+
+        Returns
+        -------
+
+        """
         assert_(t(True) == 1, repr(t(True)))
         assert_(t(False) == 0, repr(t(False)))
         assert_(t(0) == 0)
@@ -49,7 +61,7 @@
 
 
 class TestF77ReturnLogical(TestReturnLogical):
-    code = """
+    """code = """
        function t0(value)
          logical value
          logical t0
@@ -70,51 +82,68 @@
          logical*4 t4
          t4 = value
        end
-c       function t8(value)
-c         logical*8 value
-c         logical*8 t8
-c         t8 = value
-c       end
-
+    c   function t8(value)
+    c     logical*8 value
+    c     logical*8 t8
+    c     t8 = value
+    c   end
+    
        subroutine s0(t0,value)
          logical value
          logical t0
-cf2py    intent(out) t0
+    cf2pyintent(out) t0
          t0 = value
        end
        subroutine s1(t1,value)
          logical*1 value
          logical*1 t1
-cf2py    intent(out) t1
+    cf2pyintent(out) t1
          t1 = value
        end
        subroutine s2(t2,value)
          logical*2 value
          logical*2 t2
-cf2py    intent(out) t2
+    cf2pyintent(out) t2
          t2 = value
        end
        subroutine s4(t4,value)
          logical*4 value
          logical*4 t4
-cf2py    intent(out) t4
-         t4 = value
-       end
-c       subroutine s8(t8,value)
-c         logical*8 value
-c         logical*8 t8
-cf2py    intent(out) t8
-c         t8 = value
-c       end
-    """
+    cf2pyintent(out) t4
+         t4 = value
+       end
+    c   subroutine s8(t8,value)
+    c     logical*8 value
+    c     logical*8 t8
+    cf2pyintent(out) t8
+    c     t8 = value
+    c   end
+
+    Parameters
+    ----------
+
+    Returns
+    -------
 
     @pytest.mark.slow
     @pytest.mark.parametrize('name', 't0,t1,t2,t4,s0,s1,s2,s4'.split(','))
     def test_all(self, name):
+        """
+
+        Parameters
+        ----------
+        name :
+            
+
+        Returns
+        -------
+
+        """
         self.check_function(getattr(self.module, name))
 
 
 class TestF90ReturnLogical(TestReturnLogical):
+    """ """
     suffix = ".f90"
     code = """
 module f90_return_logical
@@ -182,4 +211,15 @@
     @pytest.mark.parametrize('name',
                              't0,t1,t2,t4,t8,s0,s1,s2,s4,s8'.split(','))
     def test_all(self, name):
+        """
+
+        Parameters
+        ----------
+        name :
+            
+
+        Returns
+        -------
+
+        """
         self.check_function(getattr(self.module.f90_return_logical, name))
