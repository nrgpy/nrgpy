# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/numpy/f2py/tests/test_return_character.py
+++ b/..//venv/lib/python3.8/site-packages/numpy/f2py/tests/test_return_character.py
@@ -8,8 +8,22 @@
 
 
 class TestReturnCharacter(util.F2PyTest):
+    """ """
 
     def check_function(self, t, tname):
+        """
+
+        Parameters
+        ----------
+        t :
+            
+        tname :
+            
+
+        Returns
+        -------
+
+        """
         if tname in ['t0', 't1', 's0', 's1']:
             assert_(t(23) == b'2')
             r = t('ab')
@@ -32,7 +46,7 @@
 
 
 class TestF77ReturnCharacter(TestReturnCharacter):
-    code = """
+    """code = """
        function t0(value)
          character value
          character t0
@@ -53,40 +67,57 @@
          character*(*) ts
          ts = value
        end
-
+    
        subroutine s0(t0,value)
          character value
          character t0
-cf2py    intent(out) t0
+    cf2pyintent(out) t0
          t0 = value
        end
        subroutine s1(t1,value)
          character*1 value
          character*1 t1
-cf2py    intent(out) t1
+    cf2pyintent(out) t1
          t1 = value
        end
        subroutine s5(t5,value)
          character*5 value
          character*5 t5
-cf2py    intent(out) t5
+    cf2pyintent(out) t5
          t5 = value
        end
        subroutine ss(ts,value)
          character*(*) value
          character*10 ts
-cf2py    intent(out) ts
+    cf2pyintent(out) ts
          ts = value
        end
-    """
+
+    Parameters
+    ----------
+
+    Returns
+    -------
 
     @pytest.mark.xfail(IS_S390X, reason="calback returns ' '")
     @pytest.mark.parametrize('name', 't0,t1,t5,s0,s1,s5,ss'.split(','))
     def test_all(self, name):
+        """
+
+        Parameters
+        ----------
+        name :
+            
+
+        Returns
+        -------
+
+        """
         self.check_function(getattr(self.module, name), name)
 
 
 class TestF90ReturnCharacter(TestReturnCharacter):
+    """ """
     suffix = ".f90"
     code = """
 module f90_return_char
@@ -142,4 +173,15 @@
     @pytest.mark.xfail(IS_S390X, reason="calback returns ' '")
     @pytest.mark.parametrize('name', 't0,t1,t5,ts,s0,s1,s5,ss'.split(','))
     def test_all(self, name):
+        """
+
+        Parameters
+        ----------
+        name :
+            
+
+        Returns
+        -------
+
+        """
         self.check_function(getattr(self.module.f90_return_char, name), name)
