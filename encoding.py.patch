# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/IPython/utils/encoding.py
+++ b/..//venv/lib/python3.8/site-packages/IPython/utils/encoding.py
@@ -19,12 +19,23 @@
 
 # to deal with the possibility of sys.std* not being a stream at all
 def get_stream_enc(stream, default=None):
-    """Return the given stream's encoding or a default.
+    """
 
-    There are cases where ``sys.std*`` might not actually be a stream, so
-    check for the encoding attribute prior to returning it, and return
-    a default if it doesn't exist or evaluates as False. ``default``
-    is None if not provided.
+    Parameters
+    ----------
+    stream :
+        
+    default :
+         (Default value = None)
+
+    Returns
+    -------
+    type
+        There are cases where ``sys.std*`` might not actually be a stream, so
+        check for the encoding attribute prior to returning it, and return
+        a default if it doesn't exist or evaluates as False. ``default``
+        is None if not provided.
+
     """
     if not hasattr(stream, 'encoding') or not stream.encoding:
         return default
@@ -36,15 +47,24 @@
 # Defined here as central function, so if we find better choices, we
 # won't need to make changes all over IPython.
 def getdefaultencoding(prefer_stream=True):
-    """Return IPython's guess for the default encoding for bytes as text.
-    
-    If prefer_stream is True (default), asks for stdin.encoding first,
-    to match the calling Terminal, but that is often None for subprocesses.
-    
-    Then fall back on locale.getpreferredencoding(),
-    which should be a sensible platform default (that respects LANG environment),
-    and finally to sys.getdefaultencoding() which is the most conservative option,
-    and usually UTF8 as of Python 3.
+    """
+
+    Parameters
+    ----------
+    prefer_stream :
+         (Default value = True)
+
+    Returns
+    -------
+    type
+        If prefer_stream is True (default), asks for stdin.encoding first,
+        to match the calling Terminal, but that is often None for subprocesses.
+        
+        Then fall back on locale.getpreferredencoding(),
+        which should be a sensible platform default (that respects LANG environment),
+        and finally to sys.getdefaultencoding() which is the most conservative option,
+        and usually UTF8 as of Python 3.
+
     """
     enc = None
     if prefer_stream:
