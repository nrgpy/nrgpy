# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/tqdm/_monitor.py
+++ b/..//venv/lib/python3.8/site-packages/tqdm/_monitor.py
@@ -7,22 +7,30 @@
 
 class TqdmSynchronisationWarning(RuntimeWarning):
     """tqdm multi-thread/-process errors which may cause incorrect nesting
-    but otherwise no adverse effects"""
+    but otherwise no adverse effects
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
+    """
     pass
 
 
 class TMonitor(Thread):
-    """
-    Monitoring thread for tqdm bars.
+    """Monitoring thread for tqdm bars.
     Monitors if tqdm bars are taking too much time to display
     and readjusts miniters automatically if necessary.
 
     Parameters
     ----------
-    tqdm_cls  : class
-        tqdm class to use (can be core tqdm or a submodule).
-    sleep_interval  : fload
-        Time to sleep between monitoring checks.
+
+    Returns
+    -------
+
+    
     """
     _test = {}  # internal vars for unit testing
 
@@ -38,18 +46,21 @@
         self.start()
 
     def exit(self):
+        """ """
         self.was_killed.set()
         if self is not current_thread():
             self.join()
         return self.report()
 
     def get_instances(self):
+        """ """
         # returns a copy of started `tqdm_cls` instances
         return [i for i in self.tqdm_cls._instances.copy()
                 # Avoid race by checking that the instance started
                 if hasattr(i, 'start_t')]
 
     def run(self):
+        """ """
         cur_t = self._time()
         while True:
             # After processing and before sleeping, notify that we woke
@@ -90,4 +101,5 @@
                 del instances
 
     def report(self):
+        """ """
         return not self.was_killed.is_set()
