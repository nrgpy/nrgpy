# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pygments/lexers/_lua_builtins.py
+++ b/..//venv/lib/python3.8/site-packages/pygments/lexers/_lua_builtins.py
@@ -191,31 +191,120 @@
     # have only its name. Because of this, here are some callback functions
     # that recognize if a gioven function belongs to a specific module
     def module_callbacks():
+        """ """
         def is_in_coroutine_module(name):
+            """
+
+            Parameters
+            ----------
+            name :
+                
+
+            Returns
+            -------
+
+            """
             return name.startswith('coroutine.')
 
         def is_in_modules_module(name):
+            """
+
+            Parameters
+            ----------
+            name :
+                
+
+            Returns
+            -------
+
+            """
             if name in ['require', 'module'] or name.startswith('package'):
                 return True
             else:
                 return False
 
         def is_in_string_module(name):
+            """
+
+            Parameters
+            ----------
+            name :
+                
+
+            Returns
+            -------
+
+            """
             return name.startswith('string.')
 
         def is_in_table_module(name):
+            """
+
+            Parameters
+            ----------
+            name :
+                
+
+            Returns
+            -------
+
+            """
             return name.startswith('table.')
 
         def is_in_math_module(name):
+            """
+
+            Parameters
+            ----------
+            name :
+                
+
+            Returns
+            -------
+
+            """
             return name.startswith('math')
 
         def is_in_io_module(name):
+            """
+
+            Parameters
+            ----------
+            name :
+                
+
+            Returns
+            -------
+
+            """
             return name.startswith('io.')
 
         def is_in_os_module(name):
+            """
+
+            Parameters
+            ----------
+            name :
+                
+
+            Returns
+            -------
+
+            """
             return name.startswith('os.')
 
         def is_in_debug_module(name):
+            """
+
+            Parameters
+            ----------
+            name :
+                
+
+            Returns
+            -------
+
+            """
             return name.startswith('debug.')
 
         return {'coroutine': is_in_coroutine_module,
@@ -230,6 +319,7 @@
 
 
     def get_newest_version():
+        """ """
         f = urlopen('http://www.lua.org/manual/')
         r = re.compile(r'^<A HREF="(\d\.\d)/">(Lua )?\1</A>')
         for line in f:
@@ -238,6 +328,17 @@
                 return m.groups()[0]
 
     def get_lua_functions(version):
+        """
+
+        Parameters
+        ----------
+        version :
+            
+
+        Returns
+        -------
+
+        """
         f = urlopen('http://www.lua.org/manual/%s/' % version)
         r = re.compile(r'^<A HREF="manual.html#pdf-(?!lua|LUA)([^:]+)">\1</A>')
         functions = []
@@ -248,6 +349,17 @@
         return functions
 
     def get_function_module(name):
+        """
+
+        Parameters
+        ----------
+        name :
+            
+
+        Returns
+        -------
+
+        """
         for mod, cb in module_callbacks().items():
             if cb(name):
                 return mod
@@ -257,6 +369,19 @@
             return 'basic'
 
     def regenerate(filename, modules):
+        """
+
+        Parameters
+        ----------
+        filename :
+            
+        modules :
+            
+
+        Returns
+        -------
+
+        """
         with open(filename) as fp:
             content = fp.read()
 
@@ -270,6 +395,7 @@
             fp.write(footer)
 
     def run():
+        """ """
         version = get_newest_version()
         functions = set()
         for v in ('5.2', version):
