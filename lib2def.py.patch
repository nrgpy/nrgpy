# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/numpy/distutils/lib2def.py
+++ b/..//venv/lib/python3.8/site-packages/numpy/distutils/lib2def.py
@@ -37,8 +37,16 @@
 
 def parse_cmd():
     """Parses the command-line arguments.
+    
+    libfile, deffile = parse_cmd()
 
-libfile, deffile = parse_cmd()"""
+    Parameters
+    ----------
+
+    Returns
+    -------
+
+    """
     if len(sys.argv) == 3:
         if sys.argv[1][-4:] == '.lib' and sys.argv[2][-4:] == '.def':
             libfile, deffile = sys.argv[1:]
@@ -61,8 +69,24 @@
 
 def getnm(nm_cmd=['nm', '-Cs', 'python%s.lib' % py_ver], shell=True):
     """Returns the output of nm_cmd via a pipe.
+    
+    nm_output = getnm(nm_cmd = 'nm -Cs py_lib')
 
-nm_output = getnm(nm_cmd = 'nm -Cs py_lib')"""
+    Parameters
+    ----------
+    nm_cmd :
+         (Default value = ['nm')
+    '-Cs' :
+        
+    'python%s.lib' % py_ver] :
+        
+    shell :
+         (Default value = True)
+
+    Returns
+    -------
+
+    """
     p = subprocess.Popen(nm_cmd, shell=shell, stdout=subprocess.PIPE,
                          stderr=subprocess.PIPE, universal_newlines=True)
     nm_output, nm_err = p.communicate()
@@ -73,9 +97,19 @@
 
 def parse_nm(nm_output):
     """Returns a tuple of lists: dlist for the list of data
-symbols and flist for the list of function symbols.
+    symbols and flist for the list of function symbols.
+    
+    dlist, flist = parse_nm(nm_output)
 
-dlist, flist = parse_nm(nm_output)"""
+    Parameters
+    ----------
+    nm_output :
+        
+
+    Returns
+    -------
+
+    """
     data = DATA_RE.findall(nm_output)
     func = FUNC_RE.findall(nm_output)
 
@@ -95,8 +129,24 @@
 
 def output_def(dlist, flist, header, file = sys.stdout):
     """Outputs the final DEF file to a file defaulting to stdout.
+    
+    output_def(dlist, flist, header, file = sys.stdout)
 
-output_def(dlist, flist, header, file = sys.stdout)"""
+    Parameters
+    ----------
+    dlist :
+        
+    flist :
+        
+    header :
+        
+    file :
+         (Default value = sys.stdout)
+
+    Returns
+    -------
+
+    """
     for data_sym in dlist:
         header = header + '\t%s DATA\n' % data_sym
     header = header + '\n' # blank line
