# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/numpy/core/tests/_locales.py
+++ b/..//venv/lib/python3.8/site-packages/numpy/core/tests/_locales.py
@@ -11,17 +11,17 @@
 
 def find_comma_decimal_point_locale():
     """See if platform has a decimal point as comma locale.
-
+    
     Find a locale that uses a comma instead of a period as the
     decimal point.
 
+    Parameters
+    ----------
+
     Returns
     -------
-    old_locale: str
-        Locale when the function was called.
-    new_locale: {str, None)
-        First French locale found, None if none found.
 
+    
     """
     if sys.platform == 'win32':
         locales = ['FRENCH']
@@ -45,24 +45,32 @@
 
 class CommaDecimalPointLocale:
     """Sets LC_NUMERIC to a locale with comma as decimal point.
-
+    
     Classes derived from this class have setup and teardown methods that run
     tests with locale.LC_NUMERIC set to a locale where commas (',') are used as
     the decimal point instead of periods ('.'). On exit the locale is restored
     to the initial locale. It also serves as context manager with the same
     effect. If no such locale is available, the test is skipped.
+    
+    .. versionadded:: 1.15.0
 
-    .. versionadded:: 1.15.0
+    Parameters
+    ----------
+
+    Returns
+    -------
 
     """
     (cur_locale, tst_locale) = find_comma_decimal_point_locale()
 
     def setup(self):
+        """ """
         if self.tst_locale is None:
             pytest.skip("No French locale available")
         locale.setlocale(locale.LC_NUMERIC, locale=self.tst_locale)
 
     def teardown(self):
+        """ """
         locale.setlocale(locale.LC_NUMERIC, locale=self.cur_locale)
 
     def __enter__(self):
