# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/test_aggregation.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/test_aggregation.py
@@ -5,6 +5,7 @@
 
 
 def test_maybe_mangle_lambdas_passthrough():
+    """ """
     assert maybe_mangle_lambdas("mean") == "mean"
     assert maybe_mangle_lambdas(lambda x: x).__name__ == "<lambda>"
     # don't mangel single lambda.
@@ -12,6 +13,7 @@
 
 
 def test_maybe_mangle_lambdas_listlike():
+    """ """
     aggfuncs = [lambda x: 1, lambda x: 2]
     result = maybe_mangle_lambdas(aggfuncs)
     assert result[0].__name__ == "<lambda_0>"
@@ -21,6 +23,7 @@
 
 
 def test_maybe_mangle_lambdas():
+    """ """
     func = {"A": [lambda x: 0, lambda x: 1]}
     result = maybe_mangle_lambdas(func)
     assert result["A"][0].__name__ == "<lambda_0>"
@@ -28,6 +31,7 @@
 
 
 def test_maybe_mangle_lambdas_args():
+    """ """
     func = {"A": [lambda x, a, b=1: (0, a, b), lambda x: 1]}
     result = maybe_mangle_lambdas(func)
     assert result["A"][0].__name__ == "<lambda_0>"
@@ -39,6 +43,7 @@
 
 
 def test_maybe_mangle_lambdas_named():
+    """ """
     func = {"C": np.mean, "D": {"foo": np.mean, "bar": np.mean}}
     result = maybe_mangle_lambdas(func)
     assert result == func
@@ -84,6 +89,19 @@
     ],
 )
 def test_make_unique(order, expected_reorder):
+    """
+
+    Parameters
+    ----------
+    order :
+        
+    expected_reorder :
+        
+
+    Returns
+    -------
+
+    """
     # GH 27519, test if make_unique function reorders correctly
     result = _make_unique_kwarg_list(order)
 
