# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/numpy/core/tests/test_abc.py
+++ b/..//venv/lib/python3.8/site-packages/numpy/core/tests/test_abc.py
@@ -6,7 +6,9 @@
 from numpy.core.numerictypes import sctypes
 
 class TestABC:
+    """ """
     def test_abstract(self):
+        """ """
         assert_(issubclass(np.number, numbers.Number))
 
         assert_(issubclass(np.inexact, numbers.Complex))
@@ -18,6 +20,7 @@
         assert_(issubclass(np.unsignedinteger, numbers.Integral))
 
     def test_floats(self):
+        """ """
         for t in sctypes['float']:
             assert_(isinstance(t(), numbers.Real),
                     "{0} is not instance of Real".format(t.__name__))
@@ -29,6 +32,7 @@
                     "{0} is subclass of Rational".format(t.__name__))
 
     def test_complex(self):
+        """ """
         for t in sctypes['complex']:
             assert_(isinstance(t(), numbers.Complex),
                     "{0} is not instance of Complex".format(t.__name__))
@@ -40,6 +44,7 @@
                     "{0} is subclass of Real".format(t.__name__))
 
     def test_int(self):
+        """ """
         for t in sctypes['int']:
             assert_(isinstance(t(), numbers.Integral),
                     "{0} is not instance of Integral".format(t.__name__))
@@ -47,6 +52,7 @@
                     "{0} is not subclass of Integral".format(t.__name__))
 
     def test_uint(self):
+        """ """
         for t in sctypes['uint']:
             assert_(isinstance(t(), numbers.Integral),
                     "{0} is not instance of Integral".format(t.__name__))
