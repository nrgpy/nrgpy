# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/io/excel/_pyxlsb.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/io/excel/_pyxlsb.py
@@ -8,14 +8,7 @@
 
 class _PyxlsbReader(_BaseExcelReader):
     def __init__(self, filepath_or_buffer: FilePathOrBuffer):
-        """
-        Reader using pyxlsb engine.
-
-        Parameters
-        ----------
-        filepath_or_buffer: str, path object, or Workbook
-            Object to be parsed.
-        """
+    """Reader using pyxlsb engine."""
         import_optional_dependency("pyxlsb")
         # This will call load_workbook on the filepath or buffer
         # And set the result to the book-attribute
@@ -23,11 +16,23 @@
 
     @property
     def _workbook_class(self):
+        """ """
         from pyxlsb import Workbook
 
         return Workbook
 
     def load_workbook(self, filepath_or_buffer: FilePathOrBuffer):
+        """
+
+        Parameters
+        ----------
+        filepath_or_buffer: FilePathOrBuffer :
+            
+
+        Returns
+        -------
+
+        """
         from pyxlsb import open_workbook
 
         # TODO: hack in buffer capability
@@ -38,17 +43,53 @@
 
     @property
     def sheet_names(self) -> List[str]:
+        """ """
         return self.book.sheets
 
     def get_sheet_by_name(self, name: str):
+        """
+
+        Parameters
+        ----------
+        name: str :
+            
+
+        Returns
+        -------
+
+        """
         return self.book.get_sheet(name)
 
     def get_sheet_by_index(self, index: int):
+        """
+
+        Parameters
+        ----------
+        index: int :
+            
+
+        Returns
+        -------
+
+        """
         # pyxlsb sheets are indexed from 1 onwards
         # There's a fix for this in the source, but the pypi package doesn't have it
         return self.book.get_sheet(index + 1)
 
     def _convert_cell(self, cell, convert_float: bool) -> Scalar:
+        """
+
+        Parameters
+        ----------
+        cell :
+            
+        convert_float: bool :
+            
+
+        Returns
+        -------
+
+        """
         # TODO: there is no way to distinguish between floats and datetimes in pyxlsb
         # This means that there is no way to read datetime types from an xlsb file yet
         if cell.v is None:
@@ -63,6 +104,19 @@
         return cell.v
 
     def get_sheet_data(self, sheet, convert_float: bool) -> List[List[Scalar]]:
+        """
+
+        Parameters
+        ----------
+        sheet :
+            
+        convert_float: bool :
+            
+
+        Returns
+        -------
+
+        """
         return [
             [self._convert_cell(c, convert_float) for c in r]
             for r in sheet.rows(sparse=False)
