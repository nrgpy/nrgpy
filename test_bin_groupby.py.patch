# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/groupby/test_bin_groupby.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/groupby/test_bin_groupby.py
@@ -11,6 +11,7 @@
 
 
 def test_series_grouper():
+    """ """
     obj = Series(np.random.randn(10))
     dummy = obj.iloc[:0]
 
@@ -27,6 +28,7 @@
 
 
 def test_series_grouper_requires_nonempty_raises():
+    """ """
     # GH#29500
     obj = Series(np.random.randn(10))
     dummy = obj.iloc[:0]
@@ -37,6 +39,7 @@
 
 
 def test_series_bin_grouper():
+    """ """
     obj = Series(np.random.randn(10))
     dummy = obj[:0]
 
@@ -53,17 +56,50 @@
 
 
 def assert_block_lengths(x):
+    """
+
+    Parameters
+    ----------
+    x :
+        
+
+    Returns
+    -------
+
+    """
     assert len(x) == len(x._mgr.blocks[0].mgr_locs)
     return 0
 
 
 def cumsum_max(x):
+    """
+
+    Parameters
+    ----------
+    x :
+        
+
+    Returns
+    -------
+
+    """
     x.cumsum().max()
     return 0
 
 
 @pytest.mark.parametrize("func", [cumsum_max, assert_block_lengths])
 def test_mgr_locs_updated(func):
+    """
+
+    Parameters
+    ----------
+    func :
+        
+
+    Returns
+    -------
+
+    """
     # https://github.com/pandas-dev/pandas/issues/31802
     # Some operations may require creating new blocks, which requires
     # valid mgr_locs
@@ -98,13 +134,40 @@
     ],
 )
 def test_generate_bins(binner, closed, expected):
+    """
+
+    Parameters
+    ----------
+    binner :
+        
+    closed :
+        
+    expected :
+        
+
+    Returns
+    -------
+
+    """
     values = np.array([1, 2, 3, 4, 5, 6], dtype=np.int64)
     result = lib.generate_bins_dt64(values, binner, closed=closed)
     tm.assert_numpy_array_equal(result, expected)
 
 
 def test_group_ohlc():
+    """ """
     def _check(dtype):
+        """
+
+        Parameters
+        ----------
+        dtype :
+            
+
+        Returns
+        -------
+
+        """
         obj = np.array(np.random.randn(20), dtype=dtype)
 
         bins = np.array([6, 12, 20])
@@ -116,6 +179,17 @@
         func(out, counts, obj[:, None], labels)
 
         def _ohlc(group):
+            """
+
+            Parameters
+            ----------
+            group :
+                
+
+            Returns
+            -------
+
+            """
             if isna(group).all():
                 return np.repeat(np.nan, 4)
             return [group[0], group.max(), group.min(), group[-1]]
@@ -135,4 +209,5 @@
 
 
 class TestMoments:
+    """ """
     pass
