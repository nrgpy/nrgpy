# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/tslibs/test_to_offset.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/tslibs/test_to_offset.py
@@ -29,6 +29,19 @@
     ],
 )
 def test_to_offset(freq_input, expected):
+    """
+
+    Parameters
+    ----------
+    freq_input :
+        
+    expected :
+        
+
+    Returns
+    -------
+
+    """
     result = to_offset(freq_input)
     assert result == expected
 
@@ -37,6 +50,19 @@
     "freqstr,expected", [("-1S", -1), ("-2SM", -2), ("-1SMS", -1), ("-5min10s", -310)]
 )
 def test_to_offset_negative(freqstr, expected):
+    """
+
+    Parameters
+    ----------
+    freqstr :
+        
+    expected :
+        
+
+    Returns
+    -------
+
+    """
     result = to_offset(freqstr)
     assert result.n == expected
 
@@ -78,6 +104,17 @@
     ],
 )
 def test_to_offset_invalid(freqstr):
+    """
+
+    Parameters
+    ----------
+    freqstr :
+        
+
+    Returns
+    -------
+
+    """
     # see gh-13930
 
     # We escape string because some of our
@@ -88,12 +125,14 @@
 
 
 def test_to_offset_no_evaluate():
+    """ """
     msg = str(("", ""))
     with pytest.raises(TypeError, match=msg):
         to_offset(("", ""))
 
 
 def test_to_offset_tuple_unsupported():
+    """ """
     with pytest.raises(TypeError, match="pass as a string instead"):
         to_offset((5, "T"))
 
@@ -110,6 +149,19 @@
     ],
 )
 def test_to_offset_whitespace(freqstr, expected):
+    """
+
+    Parameters
+    ----------
+    freqstr :
+        
+    expected :
+        
+
+    Returns
+    -------
+
+    """
     result = to_offset(freqstr)
     assert result == expected
 
@@ -118,12 +170,38 @@
     "freqstr,expected", [("00H 00T 01S", 1), ("-00H 03T 14S", -194)]
 )
 def test_to_offset_leading_zero(freqstr, expected):
+    """
+
+    Parameters
+    ----------
+    freqstr :
+        
+    expected :
+        
+
+    Returns
+    -------
+
+    """
     result = to_offset(freqstr)
     assert result.n == expected
 
 
 @pytest.mark.parametrize("freqstr,expected", [("+1d", 1), ("+2h30min", 150)])
 def test_to_offset_leading_plus(freqstr, expected):
+    """
+
+    Parameters
+    ----------
+    freqstr :
+        
+    expected :
+        
+
+    Returns
+    -------
+
+    """
     result = to_offset(freqstr)
     assert result.n == expected
 
@@ -143,6 +221,19 @@
     ],
 )
 def test_to_offset_pd_timedelta(kwargs, expected):
+    """
+
+    Parameters
+    ----------
+    kwargs :
+        
+    expected :
+        
+
+    Returns
+    -------
+
+    """
     # see gh-9064
     td = Timedelta(**kwargs)
     result = to_offset(td)
@@ -166,5 +257,18 @@
     ],
 )
 def test_anchored_shortcuts(shortcut, expected):
+    """
+
+    Parameters
+    ----------
+    shortcut :
+        
+    expected :
+        
+
+    Returns
+    -------
+
+    """
     result = to_offset(shortcut)
     assert result == expected
