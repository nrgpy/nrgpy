# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/jedi/inference/star_args.py
+++ b/..//venv/lib/python3.8/site-packages/jedi/inference/star_args.py
@@ -6,6 +6,21 @@
     def foo(a, b, c): ...
 
     def bar(*args):
+        """
+
+        Parameters
+        ----------
+        a :
+            
+        b :
+            
+        c): ...bar(*args :
+            
+
+        Returns
+        -------
+
+        """
         return foo(1, *args)
 
 The signature here for bar should be `bar(b, c)` instead of bar(*args).
@@ -18,6 +33,17 @@
 
 
 def _iter_nodes_for_param(param_name):
+    """
+
+    Parameters
+    ----------
+    param_name :
+        
+
+    Returns
+    -------
+
+    """
     from parso.python.tree import search_ancestor
     from jedi.inference.arguments import TreeArguments
 
@@ -51,6 +77,21 @@
 
 
 def _goes_to_param_name(param_name, context, potential_name):
+    """
+
+    Parameters
+    ----------
+    param_name :
+        
+    context :
+        
+    potential_name :
+        
+
+    Returns
+    -------
+
+    """
     if potential_name.type != 'name':
         return False
     from jedi.inference.names import TreeNameDefinition
@@ -61,6 +102,19 @@
 
 
 def _to_callables(context, trailer):
+    """
+
+    Parameters
+    ----------
+    context :
+        
+    trailer :
+        
+
+    Returns
+    -------
+
+    """
     from jedi.inference.syntax_tree import infer_trailer
 
     atom_expr = trailer.parent
@@ -75,6 +129,19 @@
 
 
 def _remove_given_params(arguments, param_names):
+    """
+
+    Parameters
+    ----------
+    arguments :
+        
+    param_names :
+        
+
+    Returns
+    -------
+
+    """
     count = 0
     used_keys = set()
     for key, _ in arguments.unpack():
@@ -94,6 +161,19 @@
 
 @to_list
 def process_params(param_names, star_count=3):  # default means both * and **
+    """
+
+    Parameters
+    ----------
+    param_names :
+        
+    star_count :
+         (Default value = 3)
+
+    Returns
+    -------
+
+    """
     if param_names:
         if is_big_annoying_library(param_names[0].parent_context):
             # At first this feature can look innocent, but it does a lot of
@@ -209,9 +289,11 @@
 
 
 class ParamNameFixedKind(ParamNameWrapper):
+    """ """
     def __init__(self, param_name, new_kind):
         super(ParamNameFixedKind, self).__init__(param_name)
         self._new_kind = new_kind
 
     def get_kind(self):
+        """ """
         return self._new_kind
