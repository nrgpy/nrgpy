# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pygments/lexers/ml.py
+++ b/..//venv/lib/python3.8/site-packages/pygments/lexers/ml.py
@@ -19,10 +19,16 @@
 
 
 class SMLLexer(RegexLexer):
-    """
-    For the Standard ML language.
-
+    """For the Standard ML language.
+    
     .. versionadded:: 1.5
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
 
     name = 'Standard ML'
@@ -59,6 +65,17 @@
     # on the argument), even if the String.Char is an erronous
     # multiple-character string.
     def stringy(whatkind):
+        """
+
+        Parameters
+        ----------
+        whatkind :
+            
+
+        Returns
+        -------
+
+        """
         return [
             (r'[^"\\]', whatkind),
             (r'\\[\\"abtnvfr]', String.Escape),
@@ -74,6 +91,17 @@
 
     # Callbacks for distinguishing tokens and reserved words
     def long_id_callback(self, match):
+        """
+
+        Parameters
+        ----------
+        match :
+            
+
+        Returns
+        -------
+
+        """
         if match.group(1) in self.alphanumid_reserved:
             token = Error
         else:
@@ -82,6 +110,17 @@
         yield match.start(2), Punctuation, match.group(2)
 
     def end_id_callback(self, match):
+        """
+
+        Parameters
+        ----------
+        match :
+            
+
+        Returns
+        -------
+
+        """
         if match.group(1) in self.alphanumid_reserved:
             token = Error
         elif match.group(1) in self.symbolicid_reserved:
@@ -91,6 +130,17 @@
         yield match.start(1), token, match.group(1)
 
     def id_callback(self, match):
+        """
+
+        Parameters
+        ----------
+        match :
+            
+
+        Returns
+        -------
+
+        """
         str = match.group(1)
         if str in self.alphanumid_reserved:
             token = Keyword.Reserved
@@ -355,10 +405,16 @@
 
 
 class OcamlLexer(RegexLexer):
-    """
-    For the OCaml language.
-
+    """For the OCaml language.
+    
     .. versionadded:: 0.7
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
 
     name = 'OCaml'
@@ -446,10 +502,16 @@
     }
 
 class OpaLexer(RegexLexer):
-    """
-    Lexer for the Opa language (http://opalang.org).
-
+    """Lexer for the Opa language (http://opalang.org).
+    
     .. versionadded:: 1.5
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
 
     name = 'Opa'
@@ -769,10 +831,16 @@
 
 
 class ReasonLexer(RegexLexer):
-    """
-    For the ReasonML language (https://reasonml.github.io/).
-
+    """For the ReasonML language (https://reasonml.github.io/).
+    
     .. versionadded:: 2.6
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
 
     name = 'ReasonML'
@@ -861,9 +929,15 @@
 
 
 class FStarLexer(RegexLexer):
-    """
-    For the F* language (https://www.fstar-lang.org/).
+    """For the F* language (https://www.fstar-lang.org/).
     .. versionadded:: 2.7
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
 
     name = 'FStar'
