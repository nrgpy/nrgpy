# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/numpy/f2py/f90mod_rules.py
+++ b/..//venv/lib/python3.8/site-packages/numpy/f2py/f90mod_rules.py
@@ -32,6 +32,17 @@
 
 
 def findf90modules(m):
+    """
+
+    Parameters
+    ----------
+    m :
+        
+
+    Returns
+    -------
+
+    """
     if ismodule(m):
         return [m]
     if not hasbody(m):
@@ -85,6 +96,17 @@
 
 
 def buildhooks(pymod):
+    """
+
+    Parameters
+    ----------
+    pymod :
+        
+
+    Returns
+    -------
+
+    """
     from . import rules
     ret = {'f90modhooks': [], 'initf90modhooks': [], 'body': [],
            'need': ['F_FUNC', 'arrayobject.h'],
@@ -94,10 +116,36 @@
     fhooks = ['']
 
     def fadd(line, s=fhooks):
+        """
+
+        Parameters
+        ----------
+        line :
+            
+        s :
+             (Default value = fhooks)
+
+        Returns
+        -------
+
+        """
         s[0] = '%s\n      %s' % (s[0], line)
     doc = ['']
 
     def dadd(line, s=doc):
+        """
+
+        Parameters
+        ----------
+        line :
+            
+        s :
+             (Default value = doc)
+
+        Returns
+        -------
+
+        """
         s[0] = '%s\n%s' % (s[0], line)
     for m in findf90modules(pymod):
         sargs, fargs, efargs, modobjs, notvars, onlyvars = [], [], [], [], [
@@ -120,10 +168,36 @@
         chooks = ['']
 
         def cadd(line, s=chooks):
+            """
+
+            Parameters
+            ----------
+            line :
+                
+            s :
+                 (Default value = chooks)
+
+            Returns
+            -------
+
+            """
             s[0] = '%s\n%s' % (s[0], line)
         ihooks = ['']
 
         def iadd(line, s=ihooks):
+            """
+
+            Parameters
+            ----------
+            line :
+                
+            s :
+                 (Default value = ihooks)
+
+            Returns
+            -------
+
+            """
             s[0] = '%s\n%s' % (s[0], line)
 
         vrd = capi_maps.modsign2map(m)
