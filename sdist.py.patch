# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pkginfo/sdist.py
+++ b/..//venv/lib/python3.8/site-packages/pkginfo/sdist.py
@@ -6,6 +6,7 @@
 from .distribution import Distribution
 
 class SDist(Distribution):
+    """ """
 
     def __init__(self, filename, metadata_version=None):
         self.filename = filename
@@ -14,6 +15,17 @@
 
     @classmethod
     def _get_archive(cls, fqn):
+        """
+
+        Parameters
+        ----------
+        fqn :
+            
+
+        Returns
+        -------
+
+        """
         if not os.path.exists(fqn):
             raise ValueError('No such file: %s' % fqn)
 
@@ -21,11 +33,33 @@
             archive = zipfile.ZipFile(fqn)
             names = archive.namelist()
             def read_file(name):
+                """
+
+                Parameters
+                ----------
+                name :
+                    
+
+                Returns
+                -------
+
+                """
                 return archive.read(name)
         elif fqn.endswith('gz') or fqn.endswith('bz2'):
             archive = tarfile.TarFile.open(fqn)
             names = archive.getnames()
             def read_file(name):
+                """
+
+                Parameters
+                ----------
+                name :
+                    
+
+                Returns
+                -------
+
+                """
                 return archive.extractfile(name).read()
         else:
             raise ValueError('Not a known archive format: %s' % fqn)
@@ -34,6 +68,7 @@
 
 
     def read(self):
+        """ """
         fqn = os.path.abspath(
                 os.path.normpath(self.filename))
 
@@ -54,6 +89,7 @@
 
 
 class UnpackedSDist(SDist):
+    """ """
     def __init__(self, filename, metadata_version=None):
         if os.path.isdir(filename):
             pass
@@ -66,6 +102,7 @@
                 filename, metadata_version=metadata_version)
 
     def read(self):
+        """ """
         try:
             pkg_info = os.path.join(self.filename, 'PKG-INFO')
             with io.open(pkg_info, errors='ignore') as f:
