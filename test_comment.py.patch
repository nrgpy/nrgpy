# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/io/parser/test_comment.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/io/parser/test_comment.py
@@ -13,6 +13,19 @@
 
 @pytest.mark.parametrize("na_values", [None, ["NaN"]])
 def test_comment(all_parsers, na_values):
+    """
+
+    Parameters
+    ----------
+    all_parsers :
+        
+    na_values :
+        
+
+    Returns
+    -------
+
+    """
     parser = all_parsers
     data = """A,B,C
 1,2.,4.#hello world
@@ -29,6 +42,19 @@
     "read_kwargs", [dict(), dict(lineterminator="*"), dict(delim_whitespace=True)]
 )
 def test_line_comment(all_parsers, read_kwargs):
+    """
+
+    Parameters
+    ----------
+    all_parsers :
+        
+    read_kwargs :
+        
+
+    Returns
+    -------
+
+    """
     parser = all_parsers
     data = """# empty
 A,B,C
@@ -54,6 +80,17 @@
 
 
 def test_comment_skiprows(all_parsers):
+    """
+
+    Parameters
+    ----------
+    all_parsers :
+        
+
+    Returns
+    -------
+
+    """
     parser = all_parsers
     data = """# empty
 random line
@@ -72,6 +109,17 @@
 
 
 def test_comment_header(all_parsers):
+    """
+
+    Parameters
+    ----------
+    all_parsers :
+        
+
+    Returns
+    -------
+
+    """
     parser = all_parsers
     data = """# empty
 # second empty line
@@ -89,6 +137,17 @@
 
 
 def test_comment_skiprows_header(all_parsers):
+    """
+
+    Parameters
+    ----------
+    all_parsers :
+        
+
+    Returns
+    -------
+
+    """
     parser = all_parsers
     data = """# empty
 # second empty line
@@ -111,6 +170,19 @@
 
 @pytest.mark.parametrize("comment_char", ["#", "~", "&", "^", "*", "@"])
 def test_custom_comment_char(all_parsers, comment_char):
+    """
+
+    Parameters
+    ----------
+    all_parsers :
+        
+    comment_char :
+        
+
+    Returns
+    -------
+
+    """
     parser = all_parsers
     data = "a,b,c\n1,2,3#ignore this!\n4,5,6#ignorethistoo"
     result = parser.read_csv(
@@ -123,6 +195,19 @@
 
 @pytest.mark.parametrize("header", ["infer", None])
 def test_comment_first_line(all_parsers, header):
+    """
+
+    Parameters
+    ----------
+    all_parsers :
+        
+    header :
+        
+
+    Returns
+    -------
+
+    """
     # see gh-4623
     parser = all_parsers
     data = "# notes\na,b,c\n# more notes\n1,2,3"
