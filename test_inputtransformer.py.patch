# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/IPython/core/tests/test_inputtransformer.py
+++ b/..//venv/lib/python3.8/site-packages/IPython/core/tests/test_inputtransformer.py
@@ -8,8 +8,30 @@
 from IPython.core import inputtransformer as ipt
 
 def transform_and_reset(transformer):
+    """
+
+    Parameters
+    ----------
+    transformer :
+        
+
+    Returns
+    -------
+
+    """
     transformer = transformer()
     def transform(inp):
+        """
+
+        Parameters
+        ----------
+        inp :
+            
+
+        Returns
+        -------
+
+        """
         try:
             return transformer.push(inp)
         finally:
@@ -19,7 +41,21 @@
 
 # Transformer tests
 def transform_checker(tests, transformer, **kwargs):
-    """Utility to loop over test inputs"""
+    """Utility to loop over test inputs
+
+    Parameters
+    ----------
+    tests :
+        
+    transformer :
+        
+    **kwargs :
+        
+
+    Returns
+    -------
+
+    """
     transformer = transformer(**kwargs)
     try:
         for inp, tr in tests:
@@ -328,12 +364,15 @@
 
 
 def test_assign_system():
+    """ """
     tt.check_pairs(transform_and_reset(ipt.assign_from_system), syntax['assign_system'])
 
 def test_assign_magic():
+    """ """
     tt.check_pairs(transform_and_reset(ipt.assign_from_magic), syntax['assign_magic'])
 
 def test_classic_prompt():
+    """ """
     tt.check_pairs(transform_and_reset(ipt.classic_prompt), syntax['classic_prompt'])
     for example in syntax_ml['classic_prompt']:
         transform_checker(example, ipt.classic_prompt)
@@ -349,6 +388,7 @@
 
 
 def test_ipy_prompt():
+    """ """
     tt.check_pairs(transform_and_reset(ipt.ipy_prompt), syntax['ipy_prompt'])
     for example in syntax_ml['ipy_prompt']:
         transform_checker(example, ipt.ipy_prompt)
@@ -360,6 +400,7 @@
     ], ipt.ipy_prompt)
 
 def test_assemble_logical_lines():
+    """ """
     tests = \
     [ [(u"a = \\", None),
        (u"123", u"a = 123"),
@@ -375,6 +416,7 @@
         transform_checker(example, ipt.assemble_logical_lines)
 
 def test_assemble_python_lines():
+    """ """
     tests = \
     [ [(u"a = '''", None),
        (u"abc'''", u"a = '''\nabc'''"),
@@ -401,37 +443,46 @@
 
 
 def test_help_end():
+    """ """
     tt.check_pairs(transform_and_reset(ipt.help_end), syntax['end_help'])
 
 def test_escaped_noesc():
+    """ """
     tt.check_pairs(transform_and_reset(ipt.escaped_commands), syntax['escaped_noesc'])
 
 
 def test_escaped_shell():
+    """ """
     tt.check_pairs(transform_and_reset(ipt.escaped_commands), syntax['escaped_shell'])
 
 
 def test_escaped_help():
+    """ """
     tt.check_pairs(transform_and_reset(ipt.escaped_commands), syntax['escaped_help'])
 
 
 def test_escaped_magic():
+    """ """
     tt.check_pairs(transform_and_reset(ipt.escaped_commands), syntax['escaped_magic'])
 
 
 def test_escaped_quote():
+    """ """
     tt.check_pairs(transform_and_reset(ipt.escaped_commands), syntax['escaped_quote'])
 
 
 def test_escaped_quote2():
+    """ """
     tt.check_pairs(transform_and_reset(ipt.escaped_commands), syntax['escaped_quote2'])
 
 
 def test_escaped_paren():
+    """ """
     tt.check_pairs(transform_and_reset(ipt.escaped_commands), syntax['escaped_paren'])
 
 
 def test_cellmagic():
+    """ """
     for example in syntax_ml['cellmagic']:
         transform_checker(example, ipt.cellmagic)
     
@@ -442,6 +493,7 @@
     transform_checker(line_example, ipt.cellmagic, end_on_blank_line=True)
 
 def test_has_comment():
+    """ """
     tests = [('text', False),
              ('text #comment', True),
              ('text #comment\n', True),
@@ -456,8 +508,17 @@
 @ipt.TokenInputTransformer.wrap
 def decistmt(tokens):
     """Substitute Decimals for floats in a string of statements.
-
+    
     Based on an example from the tokenize module docs.
+
+    Parameters
+    ----------
+    tokens :
+        
+
+    Returns
+    -------
+
     """
     result = []
     for toknum, tokval, _, _, _  in tokens:
@@ -475,6 +536,7 @@
 
 
 def test_token_input_transformer():
+    """ """
     tests = [(u'1.2', u_fmt(u"Decimal ('1.2')")),
              (u'"1.2"', u'"1.2"'),
              ]
