# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/requests_toolbelt/utils/dump.py
+++ b/..//venv/lib/python3.8/site-packages/requests_toolbelt/utils/dump.py
@@ -17,6 +17,7 @@
 
 
 class PrefixSettings(_PrefixSettings):
+    """ """
     def __new__(cls, request, response):
         request = _coerce_to_bytes(request)
         response = _coerce_to_bytes(response)
@@ -24,6 +25,17 @@
 
 
 def _get_proxy_information(response):
+    """
+
+    Parameters
+    ----------
+    response :
+        
+
+    Returns
+    -------
+
+    """
     if getattr(response.connection, 'proxy_manager', False):
         proxy_info = {}
         request_url = response.request.url
@@ -36,11 +48,37 @@
 
 
 def _format_header(name, value):
+    """
+
+    Parameters
+    ----------
+    name :
+        
+    value :
+        
+
+    Returns
+    -------
+
+    """
     return (_coerce_to_bytes(name) + b': ' + _coerce_to_bytes(value) +
             b'\r\n')
 
 
 def _build_request_path(url, proxy_info):
+    """
+
+    Parameters
+    ----------
+    url :
+        
+    proxy_info :
+        
+
+    Returns
+    -------
+
+    """
     uri = compat.urlparse(url)
     proxy_url = proxy_info.get('request_path')
     if proxy_url is not None:
@@ -55,6 +93,23 @@
 
 
 def _dump_request_data(request, prefixes, bytearr, proxy_info=None):
+    """
+
+    Parameters
+    ----------
+    request :
+        
+    prefixes :
+        
+    bytearr :
+        
+    proxy_info :
+         (Default value = None)
+
+    Returns
+    -------
+
+    """
     if proxy_info is None:
         proxy_info = {}
 
@@ -85,6 +140,21 @@
 
 
 def _dump_response_data(response, prefixes, bytearr):
+    """
+
+    Parameters
+    ----------
+    response :
+        
+    prefixes :
+        
+    bytearr :
+        
+
+    Returns
+    -------
+
+    """
     prefix = prefixes.response
     # Let's interact almost entirely with urllib3's response
     raw = response.raw
@@ -108,6 +178,17 @@
 
 
 def _coerce_to_bytes(data):
+    """
+
+    Parameters
+    ----------
+    data :
+        
+
+    Returns
+    -------
+
+    """
     if not isinstance(data, bytes) and hasattr(data, 'encode'):
         data = data.encode('utf-8')
     # Don't bail out with an exception if data is None
@@ -117,33 +198,38 @@
 def dump_response(response, request_prefix=b'< ', response_prefix=b'> ',
                   data_array=None):
     """Dump a single request-response cycle's information.
-
+    
     This will take a response object and dump only the data that requests can
     see for that single request-response cycle.
-
+    
     Example::
-
+    
         import requests
         from requests_toolbelt.utils import dump
-
+    
         resp = requests.get('https://api.github.com/users/sigmavirus24')
         data = dump.dump_response(resp)
         print(data.decode('utf-8'))
 
-    :param response:
+    Parameters
+    ----------
+    response : class:`requests.Response`
         The response to format
-    :type response: :class:`requests.Response`
-    :param request_prefix: (*optional*)
-        Bytes to prefix each line of the request data
-    :type request_prefix: :class:`bytes`
-    :param response_prefix: (*optional*)
-        Bytes to prefix each line of the response data
-    :type response_prefix: :class:`bytes`
-    :param data_array: (*optional*)
-        Bytearray to which we append the request-response cycle data
-    :type data_array: :class:`bytearray`
-    :returns: Formatted bytes of request and response information.
-    :rtype: :class:`bytearray`
+    request_prefix : class:`bytes`
+        optional*)
+        Bytes to prefix each line of the request data (Default value = b'< ')
+    response_prefix : class:`bytes`
+        optional*)
+        Bytes to prefix each line of the response data (Default value = b'> ')
+    data_array : class:`bytearray`
+        optional*)
+        Bytearray to which we append the request-response cycle data (Default value = None)
+
+    Returns
+    -------
+    class:`bytearray`
+        Formatted bytes of request and response information.
+
     """
     data = data_array if data_array is not None else bytearray()
     prefixes = PrefixSettings(request_prefix, response_prefix)
@@ -160,31 +246,36 @@
 
 def dump_all(response, request_prefix=b'< ', response_prefix=b'> '):
     """Dump all requests and responses including redirects.
-
+    
     This takes the response returned by requests and will dump all
     request-response pairs in the redirect history in order followed by the
     final request-response.
-
+    
     Example::
-
+    
         import requests
         from requests_toolbelt.utils import dump
-
+    
         resp = requests.get('https://httpbin.org/redirect/5')
         data = dump.dump_all(resp)
         print(data.decode('utf-8'))
 
-    :param response:
+    Parameters
+    ----------
+    response : class:`requests.Response`
         The response to format
-    :type response: :class:`requests.Response`
-    :param request_prefix: (*optional*)
-        Bytes to prefix each line of the request data
-    :type request_prefix: :class:`bytes`
-    :param response_prefix: (*optional*)
-        Bytes to prefix each line of the response data
-    :type response_prefix: :class:`bytes`
-    :returns: Formatted bytes of request and response information.
-    :rtype: :class:`bytearray`
+    request_prefix : class:`bytes`
+        optional*)
+        Bytes to prefix each line of the request data (Default value = b'< ')
+    response_prefix : class:`bytes`
+        optional*)
+        Bytes to prefix each line of the response data (Default value = b'> ')
+
+    Returns
+    -------
+    class:`bytearray`
+        Formatted bytes of request and response information.
+
     """
     data = bytearray()
 
