# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/tseries/holiday/test_holiday.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/tseries/holiday/test_holiday.py
@@ -27,19 +27,23 @@
 
 
 def _check_holiday_results(holiday, start, end, expected):
-    """
-    Check that the dates for a given holiday match in date and timezone.
-
-    Parameters
-    ----------
-    holiday : Holiday
-        The holiday to check.
-    start : datetime-like
-        The start date of range in which to collect dates for a given holiday.
-    end : datetime-like
-        The end date of range in which to collect dates for a given holiday.
-    expected : list
-        The list of dates we expect to get.
+    """Check that the dates for a given holiday match in date and timezone.
+
+    Parameters
+    ----------
+    holiday :
+        
+    start :
+        
+    end :
+        
+    expected :
+        
+
+    Returns
+    -------
+
+    
     """
     assert list(holiday.dates(start, end)) == expected
 
@@ -141,6 +145,23 @@
     ],
 )
 def test_holiday_dates(holiday, start_date, end_date, expected):
+    """
+
+    Parameters
+    ----------
+    holiday :
+        
+    start_date :
+        
+    end_date :
+        
+    expected :
+        
+
+    Returns
+    -------
+
+    """
     _check_holiday_results(holiday, start_date, end_date, expected)
 
 
@@ -180,6 +201,21 @@
     ],
 )
 def test_holidays_within_dates(holiday, start, expected):
+    """
+
+    Parameters
+    ----------
+    holiday :
+        
+    start :
+        
+    expected :
+        
+
+    Returns
+    -------
+
+    """
     # see gh-11477
     #
     # Fix holiday behavior where holiday.dates returned dates outside
@@ -199,6 +235,17 @@
     "transform", [lambda x: x.strftime("%Y-%m-%d"), lambda x: Timestamp(x)]
 )
 def test_argument_types(transform):
+    """
+
+    Parameters
+    ----------
+    transform :
+        
+
+    Returns
+    -------
+
+    """
     start_date = datetime(2011, 1, 1)
     end_date = datetime(2020, 12, 31)
 
@@ -224,6 +271,19 @@
     ],
 )
 def test_special_holidays(name, kwargs):
+    """
+
+    Parameters
+    ----------
+    name :
+        
+    kwargs :
+        
+
+    Returns
+    -------
+
+    """
     base_date = [datetime(2012, 5, 28)]
     holiday = Holiday(name, **kwargs)
 
@@ -234,7 +294,9 @@
 
 
 def test_get_calendar():
+    """ """
     class TestCalendar(AbstractHolidayCalendar):
+        """ """
         rules = []
 
     calendar = get_calendar("TestCalendar")
@@ -242,6 +304,7 @@
 
 
 def test_factory():
+    """ """
     class_1 = HolidayCalendarFactory(
         "MemorialDay", AbstractHolidayCalendar, USMemorialDay
     )
@@ -256,6 +319,7 @@
 
 
 def test_both_offset_observance_raises():
+    """ """
     # see gh-10217
     msg = "Cannot use both offset and observance"
     with pytest.raises(NotImplementedError, match=msg):
