# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/IPython/core/magics/pylab.py
+++ b/..//venv/lib/python3.8/site-packages/IPython/core/magics/pylab.py
@@ -46,47 +46,55 @@
     @magic_gui_arg
     def matplotlib(self, line=''):
         """Set up matplotlib to work interactively.
-
+        
         This function lets you activate matplotlib interactive support
         at any point during an IPython session. It does not import anything
         into the interactive namespace.
-
+        
         If you are using the inline matplotlib backend in the IPython Notebook
         you can set which figure formats are enabled using the following::
-
+        
             In [1]: from IPython.display import set_matplotlib_formats
-
+        
             In [2]: set_matplotlib_formats('pdf', 'svg')
-
+        
         The default for inline figures sets `bbox_inches` to 'tight'. This can
         cause discrepancies between the displayed image and the identical
         image created using `savefig`. This behavior can be disabled using the
         `%config` magic::
-
+        
             In [3]: %config InlineBackend.print_figure_kwargs = {'bbox_inches':None}
-
+        
         In addition, see the docstring of
         `IPython.display.set_matplotlib_formats` and
         `IPython.display.set_matplotlib_close` for more information on
         changing additional behaviors of the inline backend.
 
+        Parameters
+        ----------
+        line :
+             (Default value = '')
+
+        Returns
+        -------
+
         Examples
         --------
         To enable the inline backend for usage with the IPython Notebook::
-
+        
             In [1]: %matplotlib inline
-
+        
         In this case, where the matplotlib default is TkAgg::
-
+        
             In [2]: %matplotlib
             Using matplotlib backend: TkAgg
-
+        
         But you can explicitly request a different GUI backend::
-
+        
             In [3]: %matplotlib qt
-
+        
         You can list the available backends using the -l/--list option::
-
+        
            In [4]: %matplotlib --list
            Available matplotlib backends: ['osx', 'qt4', 'qt5', 'gtk3', 'notebook', 'wx', 'qt', 'nbagg',
            'gtk', 'tk', 'inline']
@@ -113,28 +121,37 @@
     @magic_gui_arg
     def pylab(self, line=''):
         """Load numpy and matplotlib to work interactively.
-
+        
         This function lets you activate pylab (matplotlib, numpy and
         interactive support) at any point during an IPython session.
-
+        
         %pylab makes the following imports::
-
+        
             import numpy
             import matplotlib
             from matplotlib import pylab, mlab, pyplot
             np = numpy
             plt = pyplot
-
+        
             from IPython.display import display
             from IPython.core.pylabtools import figsize, getfigs
-
+        
             from pylab import *
             from numpy import *
-
+        
         If you pass `--no-import-all`, the last two `*` imports will be excluded.
-
+        
         See the %matplotlib magic for more details about activating matplotlib
         without affecting the interactive namespace.
+
+        Parameters
+        ----------
+        line :
+             (Default value = '')
+
+        Returns
+        -------
+
         """
         args = magic_arguments.parse_argstring(self.pylab, line)
         if args.no_import_all is None:
@@ -161,6 +178,18 @@
             )
 
     def _show_matplotlib_backend(self, gui, backend):
-        """show matplotlib message backend message"""
+        """show matplotlib message backend message
+
+        Parameters
+        ----------
+        gui :
+            
+        backend :
+            
+
+        Returns
+        -------
+
+        """
         if not gui or gui == 'auto':
             print("Using matplotlib backend: %s" % backend)
