# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pygments/regexopt.py
+++ b/..//venv/lib/python3.8/site-packages/pygments/regexopt.py
@@ -21,11 +21,36 @@
 
 
 def make_charset(letters):
+    """
+
+    Parameters
+    ----------
+    letters :
+        
+
+    Returns
+    -------
+
+    """
     return '[' + CS_ESCAPE.sub(lambda m: '\\' + m.group(), ''.join(letters)) + ']'
 
 
 def regex_opt_inner(strings, open_paren):
-    """Return a regex that matches any string in the sorted list of strings."""
+    """
+
+    Parameters
+    ----------
+    strings :
+        
+    open_paren :
+        
+
+    Returns
+    -------
+    type
+        
+
+    """
     close_paren = open_paren and ')' or ''
     # print strings, repr(open_paren)
     if not strings:
@@ -81,12 +106,25 @@
 
 
 def regex_opt(strings, prefix='', suffix=''):
-    """Return a compiled regex that matches any string in the given list.
+    """
 
-    The strings to match must be literal strings, not regexes.  They will be
-    regex-escaped.
+    Parameters
+    ----------
+    strings :
+        
+    prefix :
+         (Default value = '')
+    suffix :
+         (Default value = '')
 
-    *prefix* and *suffix* are pre- and appended to the final regex.
+    Returns
+    -------
+    type
+        The strings to match must be literal strings, not regexes.  They will be
+        regex-escaped.
+        
+        *prefix* and *suffix* are pre- and appended to the final regex.
+
     """
     strings = sorted(strings)
     return prefix + regex_opt_inner(strings, '(') + suffix
