# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/numpy/f2py/capi_maps.py
+++ b/..//venv/lib/python3.8/site-packages/numpy/f2py/capi_maps.py
@@ -176,6 +176,17 @@
 
 
 def load_f2cmap_file(f2cmap_file):
+    """
+
+    Parameters
+    ----------
+    f2cmap_file :
+        
+
+    Returns
+    -------
+
+    """
     global f2cmap_all
 
     f2cmap_all = copy.deepcopy(f2cmap_default)
@@ -241,8 +252,16 @@
 
 
 def getctype(var):
-    """
-    Determines C type
+    """Determines C type
+
+    Parameters
+    ----------
+    var :
+        
+
+    Returns
+    -------
+
     """
     ctype = 'void'
     if isfunction(var):
@@ -290,6 +309,17 @@
 
 
 def getstrlength(var):
+    """
+
+    Parameters
+    ----------
+    var :
+        
+
+    Returns
+    -------
+
+    """
     if isstringfunction(var):
         if 'result' in var:
             a = var['result']
@@ -318,6 +348,21 @@
 
 
 def getarrdims(a, var, verbose=0):
+    """
+
+    Parameters
+    ----------
+    a :
+        
+    var :
+        
+    verbose :
+         (Default value = 0)
+
+    Returns
+    -------
+
+    """
     ret = {}
     if isstring(var) and not isarray(var):
         ret['dims'] = getstrlength(var)
@@ -379,6 +424,19 @@
 
 
 def getpydocsign(a, var):
+    """
+
+    Parameters
+    ----------
+    a :
+        
+    var :
+        
+
+    Returns
+    -------
+
+    """
     global lcb_map
     if isfunction(var):
         if 'result' in var:
@@ -453,6 +511,19 @@
 
 
 def getarrdocsign(a, var):
+    """
+
+    Parameters
+    ----------
+    a :
+        
+    var :
+        
+
+    Returns
+    -------
+
+    """
     ctype = getctype(var)
     if isstring(var) and (not isarray(var)):
         sig = '%s : rank-0 array(string(len=%s),\'c\')' % (a,
@@ -471,6 +542,19 @@
 
 
 def getinit(a, var):
+    """
+
+    Parameters
+    ----------
+    a :
+        
+    var :
+        
+
+    Returns
+    -------
+
+    """
     if isstring(var):
         init, showinit = '""', "''"
     else:
@@ -506,12 +590,22 @@
 
 
 def sign2map(a, var):
-    """
-    varname,ctype,atype
+    """varname,ctype,atype
     init,init.r,init.i,pytype
     vardebuginfo,vardebugshowvalue,varshowvalue
     varrfromat
     intent
+
+    Parameters
+    ----------
+    a :
+        
+    var :
+        
+
+    Returns
+    -------
+
     """
     out_a = a
     if isintent_out(var):
@@ -610,10 +704,18 @@
 
 
 def routsign2map(rout):
-    """
-    name,NAME,begintitle,endtitle
+    """name,NAME,begintitle,endtitle
     rname,ctype,rformat
     routdebugshowvalue
+
+    Parameters
+    ----------
+    rout :
+        
+
+    Returns
+    -------
+
     """
     global lcb_map
     name = rout['name']
@@ -691,8 +793,16 @@
 
 
 def modsign2map(m):
-    """
-    modulename
+    """modulename
+
+    Parameters
+    ----------
+    m :
+        
+
+    Returns
+    -------
+
     """
     if ismodule(m):
         ret = {'f90modulename': m['name'],
@@ -720,6 +830,21 @@
 
 
 def cb_sign2map(a, var, index=None):
+    """
+
+    Parameters
+    ----------
+    a :
+        
+    var :
+        
+    index :
+         (Default value = None)
+
+    Returns
+    -------
+
+    """
     ret = {'varname': a}
     ret['varname_i'] = ret['varname']
     ret['ctype'] = getctype(var)
@@ -737,9 +862,19 @@
 
 
 def cb_routsign2map(rout, um):
-    """
-    name,begintitle,endtitle,argname
+    """name,begintitle,endtitle,argname
     ctype,rctype,maxnofargs,nofoptargs,returncptr
+
+    Parameters
+    ----------
+    rout :
+        
+    um :
+        
+
+    Returns
+    -------
+
     """
     ret = {'name': 'cb_%s_in_%s' % (rout['name'], um),
            'returncptr': ''}
@@ -819,6 +954,19 @@
 
 
 def common_sign2map(a, var):  # obsolute
+    """
+
+    Parameters
+    ----------
+    a :
+        
+    var :
+        
+
+    Returns
+    -------
+
+    """
     ret = {'varname': a, 'ctype': getctype(var)}
     if isstringarray(var):
         ret['ctype'] = 'char'
