# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/indexes/multi/test_equivalence.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/indexes/multi/test_equivalence.py
@@ -7,6 +7,17 @@
 
 
 def test_equals(idx):
+    """
+
+    Parameters
+    ----------
+    idx :
+        
+
+    Returns
+    -------
+
+    """
     assert idx.equals(idx)
     assert idx.equals(idx.copy())
     assert idx.equals(idx.astype(object))
@@ -24,6 +35,17 @@
 
 
 def test_equals_op(idx):
+    """
+
+    Parameters
+    ----------
+    idx :
+        
+
+    Returns
+    -------
+
+    """
     # GH9947, GH10637
     index_a = idx
 
@@ -85,6 +107,17 @@
 
 
 def test_equals_multi(idx):
+    """
+
+    Parameters
+    ----------
+    idx :
+        
+
+    Returns
+    -------
+
+    """
     assert idx.equals(idx)
     assert not idx.equals(idx.values)
     assert idx.equals(Index(idx.values))
@@ -134,6 +167,17 @@
 
 
 def test_identical(idx):
+    """
+
+    Parameters
+    ----------
+    idx :
+        
+
+    Returns
+    -------
+
+    """
     mi = idx.copy()
     mi2 = idx.copy()
     assert mi.identical(mi2)
@@ -156,11 +200,23 @@
 
 
 def test_equals_operator(idx):
+    """
+
+    Parameters
+    ----------
+    idx :
+        
+
+    Returns
+    -------
+
+    """
     # GH9785
     assert (idx == idx).all()
 
 
 def test_equals_missing_values():
+    """ """
     # make sure take is not using -1
     i = pd.MultiIndex.from_tuples([(0, pd.NaT), (0, pd.Timestamp("20130101"))])
     result = i[0:1].equals(i[0])
@@ -170,6 +226,7 @@
 
 
 def test_is_():
+    """ """
     mi = MultiIndex.from_tuples(zip(range(10), range(10)))
     assert mi.is_(mi)
     assert mi.is_(mi.view())
@@ -200,15 +257,38 @@
 
 
 def test_is_all_dates(idx):
+    """
+
+    Parameters
+    ----------
+    idx :
+        
+
+    Returns
+    -------
+
+    """
     assert not idx.is_all_dates
 
 
 def test_is_numeric(idx):
+    """
+
+    Parameters
+    ----------
+    idx :
+        
+
+    Returns
+    -------
+
+    """
     # MultiIndex is never numeric
     assert not idx.is_numeric()
 
 
 def test_multiindex_compare():
+    """ """
     # GH 21149
     # Ensure comparison operations for MultiIndex with nlevels == 1
     # behave consistently with those for MultiIndex with nlevels > 1
