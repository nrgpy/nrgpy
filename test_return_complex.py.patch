# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/numpy/f2py/tests/test_return_complex.py
+++ b/..//venv/lib/python3.8/site-packages/numpy/f2py/tests/test_return_complex.py
@@ -6,8 +6,22 @@
 
 
 class TestReturnComplex(util.F2PyTest):
+    """ """
 
     def check_function(self, t, tname):
+        """
+
+        Parameters
+        ----------
+        t :
+            
+        tname :
+            
+
+        Returns
+        -------
+
+        """
         if tname in ['t0', 't8', 's0', 's8']:
             err = 1e-5
         else:
@@ -52,7 +66,7 @@
 
 
 class TestF77ReturnComplex(TestReturnComplex):
-    code = """
+    """code = """
        function t0(value)
          complex value
          complex t0
@@ -73,39 +87,56 @@
          double complex td
          td = value
        end
-
+    
        subroutine s0(t0,value)
          complex value
          complex t0
-cf2py    intent(out) t0
+    cf2pyintent(out) t0
          t0 = value
        end
        subroutine s8(t8,value)
          complex*8 value
          complex*8 t8
-cf2py    intent(out) t8
+    cf2pyintent(out) t8
          t8 = value
        end
        subroutine s16(t16,value)
          complex*16 value
          complex*16 t16
-cf2py    intent(out) t16
+    cf2pyintent(out) t16
          t16 = value
        end
        subroutine sd(td,value)
          double complex value
          double complex td
-cf2py    intent(out) td
-         td = value
-       end
-    """
+    cf2pyintent(out) td
+         td = value
+       end
+
+    Parameters
+    ----------
+
+    Returns
+    -------
 
     @pytest.mark.parametrize('name', 't0,t8,t16,td,s0,s8,s16,sd'.split(','))
     def test_all(self, name):
+        """
+
+        Parameters
+        ----------
+        name :
+            
+
+        Returns
+        -------
+
+        """
         self.check_function(getattr(self.module, name), name)
 
 
 class TestF90ReturnComplex(TestReturnComplex):
+    """ """
     suffix = ".f90"
     code = """
 module f90_return_complex
@@ -160,4 +191,15 @@
 
     @pytest.mark.parametrize('name', 't0,t8,t16,td,s0,s8,s16,sd'.split(','))
     def test_all(self, name):
+        """
+
+        Parameters
+        ----------
+        name :
+            
+
+        Returns
+        -------
+
+        """
         self.check_function(getattr(self.module.f90_return_complex, name), name)
