# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/io/excel/_xlrd.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/io/excel/_xlrd.py
@@ -9,25 +9,30 @@
 
 class _XlrdReader(_BaseExcelReader):
     def __init__(self, filepath_or_buffer):
-        """
-        Reader using xlrd engine.
-
-        Parameters
-        ----------
-        filepath_or_buffer : string, path object or Workbook
-            Object to be parsed.
-        """
+    """Reader using xlrd engine."""
         err_msg = "Install xlrd >= 1.0.0 for Excel support"
         import_optional_dependency("xlrd", extra=err_msg)
         super().__init__(filepath_or_buffer)
 
     @property
     def _workbook_class(self):
+        """ """
         from xlrd import Book
 
         return Book
 
     def load_workbook(self, filepath_or_buffer):
+        """
+
+        Parameters
+        ----------
+        filepath_or_buffer :
+            
+
+        Returns
+        -------
+
+        """
         from xlrd import open_workbook
 
         if hasattr(filepath_or_buffer, "read"):
@@ -38,15 +43,51 @@
 
     @property
     def sheet_names(self):
+        """ """
         return self.book.sheet_names()
 
     def get_sheet_by_name(self, name):
+        """
+
+        Parameters
+        ----------
+        name :
+            
+
+        Returns
+        -------
+
+        """
         return self.book.sheet_by_name(name)
 
     def get_sheet_by_index(self, index):
+        """
+
+        Parameters
+        ----------
+        index :
+            
+
+        Returns
+        -------
+
+        """
         return self.book.sheet_by_index(index)
 
     def get_sheet_data(self, sheet, convert_float):
+        """
+
+        Parameters
+        ----------
+        sheet :
+            
+        convert_float :
+            
+
+        Returns
+        -------
+
+        """
         from xlrd import (
             XL_CELL_BOOLEAN,
             XL_CELL_DATE,
@@ -58,8 +99,18 @@
         epoch1904 = self.book.datemode
 
         def _parse_cell(cell_contents, cell_typ):
-            """
-            converts the contents of the cell into a pandas appropriate object
+            """converts the contents of the cell into a pandas appropriate object
+
+            Parameters
+            ----------
+            cell_contents :
+                
+            cell_typ :
+                
+
+            Returns
+            -------
+
             """
             if cell_typ == XL_CELL_DATE:
 
