# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/numpy/core/overrides.py
+++ b/..//venv/lib/python3.8/site-packages/numpy/core/overrides.py
@@ -70,7 +70,19 @@
 
 
 def verify_matching_signatures(implementation, dispatcher):
-    """Verify that a dispatcher function has the right signature."""
+    """Verify that a dispatcher function has the right signature.
+
+    Parameters
+    ----------
+    implementation :
+        
+    dispatcher :
+        
+
+    Returns
+    -------
+
+    """
     implementation_spec = ArgSpec(*getargspec(implementation))
     dispatcher_spec = ArgSpec(*getargspec(dispatcher))
 
@@ -93,16 +105,36 @@
 
 def set_module(module):
     """Decorator for overriding __module__ on a function or class.
-
+    
     Example usage::
-
+    
         @set_module('numpy')
         def example():
             pass
-
+    
         assert example.__module__ == 'numpy'
+
+    Parameters
+    ----------
+    module :
+        
+
+    Returns
+    -------
+
     """
     def decorator(func):
+        """
+
+        Parameters
+        ----------
+        func :
+            
+
+        Returns
+        -------
+
+        """
         if module is not None:
             func.__module__ = module
         return func
@@ -115,6 +147,19 @@
 _wrapped_func_source = textwrap.dedent("""
     @functools.wraps(implementation)
     def {name}(*args, **kwargs):
+        """
+
+        Parameters
+        ----------
+        *args :
+            
+        **kwargs :
+            
+
+        Returns
+        -------
+
+        """
         relevant_args = dispatcher(*args, **kwargs)
         return implement_array_function(
             implementation, {name}, relevant_args, args, kwargs)
@@ -124,7 +169,7 @@
 def array_function_dispatch(dispatcher, module=None, verify=True,
                             docs_from_dispatcher=False):
     """Decorator for adding dispatch with the __array_function__ protocol.
-
+    
     See NEP-18 for example usage.
 
     Parameters
@@ -147,15 +192,27 @@
     docs_from_dispatcher : bool, optional
         If True, copy docs from the dispatcher function onto the dispatched
         function, rather than from the implementation. This is useful for
-        functions defined in C, which otherwise don't have docstrings.
-
-    Returns
-    -------
-    Function suitable for decorating the implementation of a NumPy function.
+        functions defined in C, which otherwise don't have docstrings. (Default value = False)
+
+    Returns
+    -------
+
+    
     """
 
     if not ARRAY_FUNCTION_ENABLED:
         def decorator(implementation):
+            """
+
+            Parameters
+            ----------
+            implementation :
+                
+
+            Returns
+            -------
+
+            """
             if docs_from_dispatcher:
                 add_docstring(implementation, dispatcher.__doc__)
             if module is not None:
@@ -164,6 +221,17 @@
         return decorator
 
     def decorator(implementation):
+        """
+
+        Parameters
+        ----------
+        implementation :
+            
+
+        Returns
+        -------
+
+        """
         if verify:
             verify_matching_signatures(implementation, dispatcher)
 
@@ -201,9 +269,36 @@
 
 def array_function_from_dispatcher(
         implementation, module=None, verify=True, docs_from_dispatcher=True):
-    """Like array_function_dispatcher, but with function arguments flipped."""
+    """Like array_function_dispatcher, but with function arguments flipped.
+
+    Parameters
+    ----------
+    implementation :
+        
+    module :
+         (Default value = None)
+    verify :
+         (Default value = True)
+    docs_from_dispatcher :
+         (Default value = True)
+
+    Returns
+    -------
+
+    """
 
     def decorator(dispatcher):
+        """
+
+        Parameters
+        ----------
+        dispatcher :
+            
+
+        Returns
+        -------
+
+        """
         return array_function_dispatch(
             dispatcher, module, verify=verify,
             docs_from_dispatcher=docs_from_dispatcher)(implementation)
