# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/rfc3986/normalizers.py
+++ b/..//venv/lib/python3.8/site-packages/rfc3986/normalizers.py
@@ -20,12 +20,32 @@
 
 
 def normalize_scheme(scheme):
-    """Normalize the scheme component."""
+    """Normalize the scheme component.
+
+    Parameters
+    ----------
+    scheme :
+        
+
+    Returns
+    -------
+
+    """
     return scheme.lower()
 
 
 def normalize_authority(authority):
-    """Normalize an authority tuple to a string."""
+    """Normalize an authority tuple to a string.
+
+    Parameters
+    ----------
+    authority :
+        
+
+    Returns
+    -------
+
+    """
     userinfo, host, port = authority
     result = ''
     if userinfo:
@@ -38,17 +58,47 @@
 
 
 def normalize_username(username):
-    """Normalize a username to make it safe to include in userinfo."""
+    """Normalize a username to make it safe to include in userinfo.
+
+    Parameters
+    ----------
+    username :
+        
+
+    Returns
+    -------
+
+    """
     return compat.urlquote(username)
 
 
 def normalize_password(password):
-    """Normalize a password to make safe for userinfo."""
+    """Normalize a password to make safe for userinfo.
+
+    Parameters
+    ----------
+    password :
+        
+
+    Returns
+    -------
+
+    """
     return compat.urlquote(password)
 
 
 def normalize_host(host):
-    """Normalize a host string."""
+    """Normalize a host string.
+
+    Parameters
+    ----------
+    host :
+        
+
+    Returns
+    -------
+
+    """
     if misc.IPv6_MATCHER.match(host):
         percent = host.find('%')
         if percent != -1:
@@ -68,7 +118,17 @@
 
 
 def normalize_path(path):
-    """Normalize the path string."""
+    """Normalize the path string.
+
+    Parameters
+    ----------
+    path :
+        
+
+    Returns
+    -------
+
+    """
     if not path:
         return path
 
@@ -77,14 +137,34 @@
 
 
 def normalize_query(query):
-    """Normalize the query string."""
+    """Normalize the query string.
+
+    Parameters
+    ----------
+    query :
+        
+
+    Returns
+    -------
+
+    """
     if not query:
         return query
     return normalize_percent_characters(query)
 
 
 def normalize_fragment(fragment):
-    """Normalize the fragment string."""
+    """Normalize the fragment string.
+
+    Parameters
+    ----------
+    fragment :
+        
+
+    Returns
+    -------
+
+    """
     if not fragment:
         return fragment
     return normalize_percent_characters(fragment)
@@ -95,8 +175,17 @@
 
 def normalize_percent_characters(s):
     """All percent characters should be upper-cased.
-
+    
     For example, ``"%3afoo%DF%ab"`` should be turned into ``"%3Afoo%DF%AB"``.
+
+    Parameters
+    ----------
+    s :
+        
+
+    Returns
+    -------
+
     """
     matches = set(PERCENT_MATCHER.findall(s))
     for m in matches:
@@ -107,8 +196,17 @@
 
 def remove_dot_segments(s):
     """Remove dot segments from the string.
-
+    
     See also Section 5.2.4 of :rfc:`3986`.
+
+    Parameters
+    ----------
+    s :
+        
+
+    Returns
+    -------
+
     """
     # See http://tools.ietf.org/html/rfc3986#section-5.2.4 for pseudo-code
     segments = s.split('/')  # Turn the path into a list of segments
@@ -140,7 +238,19 @@
 
 
 def encode_component(uri_component, encoding):
-    """Encode the specific component in the provided encoding."""
+    """Encode the specific component in the provided encoding.
+
+    Parameters
+    ----------
+    uri_component :
+        
+    encoding :
+        
+
+    Returns
+    -------
+
+    """
     if uri_component is None:
         return uri_component
 
