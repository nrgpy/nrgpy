# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/IPython/external/decorators/_numpy_testing_noseclasses.py
+++ b/..//venv/lib/python3.8/site-packages/IPython/external/decorators/_numpy_testing_noseclasses.py
@@ -8,22 +8,42 @@
 from nose.plugins.errorclass import ErrorClass, ErrorClassPlugin
 
 class KnownFailureTest(Exception):
-    '''Raise this exception to mark a test as a known failing test.'''
+    """ """
     pass
 
 
 class KnownFailure(ErrorClassPlugin):
-    '''Plugin that installs a KNOWNFAIL error class for the
+    """Plugin that installs a KNOWNFAIL error class for the
     KnownFailureClass exception.  When KnownFailureTest is raised,
     the exception will be logged in the knownfail attribute of the
     result, 'K' or 'KNOWNFAIL' (verbose) will be output, and the
-    exception will not be counted as an error or failure.'''
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
+    """
     enabled = True
     knownfail = ErrorClass(KnownFailureTest,
                            label='KNOWNFAIL',
                            isfailure=False)
 
     def options(self, parser, env=os.environ):
+        """
+
+        Parameters
+        ----------
+        parser :
+            
+        env :
+             (Default value = os.environ)
+
+        Returns
+        -------
+
+        """
         env_opt = 'NOSE_WITHOUT_KNOWNFAIL'
         parser.add_option('--no-knownfail', action='store_true',
                           dest='noKnownFail', default=env.get(env_opt, False),
@@ -31,6 +51,19 @@
                                'exceptions')
 
     def configure(self, options, conf):
+        """
+
+        Parameters
+        ----------
+        options :
+            
+        conf :
+            
+
+        Returns
+        -------
+
+        """
         if not self.can_configure:
             return
         self.conf = conf
