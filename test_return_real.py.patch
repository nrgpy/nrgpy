# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/numpy/f2py/tests/test_return_real.py
+++ b/..//venv/lib/python3.8/site-packages/numpy/f2py/tests/test_return_real.py
@@ -7,8 +7,22 @@
 
 
 class TestReturnReal(util.F2PyTest):
+    """ """
 
     def check_function(self, t, tname):
+        """
+
+        Parameters
+        ----------
+        t :
+            
+        tname :
+            
+
+        Returns
+        -------
+
+        """
         if tname in ['t0', 't4', 's0', 's4']:
             err = 1e-5
         else:
@@ -55,6 +69,7 @@
     reason="Prone to error when run with numpy/f2py/tests on mac os, "
            "but not when run in isolation")
 class TestCReturnReal(TestReturnReal):
+    """ """
     suffix = ".pyf"
     module_name = "c_ext_return_real"
     code = """
@@ -88,11 +103,22 @@
 
     @pytest.mark.parametrize('name', 't4,t8,s4,s8'.split(','))
     def test_all(self, name):
+        """
+
+        Parameters
+        ----------
+        name :
+            
+
+        Returns
+        -------
+
+        """
         self.check_function(getattr(self.module, name), name)
 
 
 class TestF77ReturnReal(TestReturnReal):
-    code = """
+    """code = """
        function t0(value)
          real value
          real t0
@@ -113,39 +139,56 @@
          double precision td
          td = value
        end
-
+    
        subroutine s0(t0,value)
          real value
          real t0
-cf2py    intent(out) t0
+    cf2pyintent(out) t0
          t0 = value
        end
        subroutine s4(t4,value)
          real*4 value
          real*4 t4
-cf2py    intent(out) t4
+    cf2pyintent(out) t4
          t4 = value
        end
        subroutine s8(t8,value)
          real*8 value
          real*8 t8
-cf2py    intent(out) t8
+    cf2pyintent(out) t8
          t8 = value
        end
        subroutine sd(td,value)
          double precision value
          double precision td
-cf2py    intent(out) td
-         td = value
-       end
-    """
+    cf2pyintent(out) td
+         td = value
+       end
+
+    Parameters
+    ----------
+
+    Returns
+    -------
 
     @pytest.mark.parametrize('name', 't0,t4,t8,td,s0,s4,s8,sd'.split(','))
     def test_all(self, name):
+        """
+
+        Parameters
+        ----------
+        name :
+            
+
+        Returns
+        -------
+
+        """
         self.check_function(getattr(self.module, name), name)
 
 
 class TestF90ReturnReal(TestReturnReal):
+    """ """
     suffix = ".f90"
     code = """
 module f90_return_real
@@ -200,4 +243,15 @@
 
     @pytest.mark.parametrize('name', 't0,t4,t8,td,s0,s4,s8,sd'.split(','))
     def test_all(self, name):
+        """
+
+        Parameters
+        ----------
+        name :
+            
+
+        Returns
+        -------
+
+        """
         self.check_function(getattr(self.module.f90_return_real, name), name)
