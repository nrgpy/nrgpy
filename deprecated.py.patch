# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/requests_toolbelt/utils/deprecated.py
+++ b/..//venv/lib/python3.8/site-packages/requests_toolbelt/utils/deprecated.py
@@ -20,19 +20,25 @@
 
 def get_encodings_from_content(content):
     """Return encodings from given content string.
-
+    
     .. code-block:: python
-
+    
         import requests
         from requests_toolbelt.utils import deprecated
-
+    
         r = requests.get(url)
         encodings = deprecated.get_encodings_from_content(r)
 
-    :param content: bytestring to extract encodings from
-    :type content: bytes
-    :return: encodings detected in the provided content
-    :rtype: list(str)
+    Parameters
+    ----------
+    content : bytes
+        bytestring to extract encodings from
+
+    Returns
+    -------
+    list(str)
+        encodings detected in the provided content
+
     """
     encodings = (find_charset(content) + find_pragma(content)
                  + find_xml(content))
@@ -43,22 +49,28 @@
 
 def get_unicode_from_response(response):
     """Return the requested content back in unicode.
-
+    
     This will first attempt to retrieve the encoding from the response
     headers. If that fails, it will use
     :func:`requests_toolbelt.utils.deprecated.get_encodings_from_content`
     to determine encodings from HTML elements.
-
+    
     .. code-block:: python
-
+    
         import requests
         from requests_toolbelt.utils import deprecated
-
+    
         r = requests.get(url)
         text = deprecated.get_unicode_from_response(r)
 
-    :param response: Response object to get unicode content from.
-    :type response: requests.models.Response
+    Parameters
+    ----------
+    response : requests.models.Response
+        Response object to get unicode content from.
+
+    Returns
+    -------
+
     """
     tried_encodings = set()
 
