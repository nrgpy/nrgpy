# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/io/gbq.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/io/gbq.py
@@ -8,6 +8,7 @@
 
 
 def _try_import():
+    """ """
     # since pandas is a dependency of pandas-gbq
     # we need to import on first use
     msg = (
@@ -35,12 +36,11 @@
     verbose=None,
     progress_bar_type: Optional[str] = None,
 ) -> "DataFrame":
-    """
-    Load data from Google BigQuery.
-
+    """Load data from Google BigQuery.
+    
     This function requires the `pandas-gbq package
     <https://pandas-gbq.readthedocs.io>`__.
-
+    
     See the `How to authenticate with Google BigQuery
     <https://pandas-gbq.readthedocs.io/en/latest/howto/authentication.html>`__
     guide for authentication instructions.
@@ -63,28 +63,23 @@
     auth_local_webserver : bool, default False
         Use the `local webserver flow`_ instead of the `console flow`_
         when getting user credentials.
-
         .. _local webserver flow:
-            https://google-auth-oauthlib.readthedocs.io/en/latest/reference/google_auth_oauthlib.flow.html#google_auth_oauthlib.flow.InstalledAppFlow.run_local_server
+        https://google-auth-oauthlib.readthedocs.io/en/latest/reference/google_auth_oauthlib.flow.html#google_auth_oauthlib.flow.InstalledAppFlow.run_local_server
         .. _console flow:
-            https://google-auth-oauthlib.readthedocs.io/en/latest/reference/google_auth_oauthlib.flow.html#google_auth_oauthlib.flow.InstalledAppFlow.run_console
-
+        https://google-auth-oauthlib.readthedocs.io/en/latest/reference/google_auth_oauthlib.flow.html#google_auth_oauthlib.flow.InstalledAppFlow.run_console
         *New in version 0.2.0 of pandas-gbq*.
     dialect : str, default 'legacy'
         Note: The default value is changing to 'standard' in a future version.
-
         SQL syntax dialect to use. Value can be one of:
-
         ``'legacy'``
-            Use BigQuery's legacy SQL dialect. For more information see
-            `BigQuery Legacy SQL Reference
-            <https://cloud.google.com/bigquery/docs/reference/legacy-sql>`__.
+        Use BigQuery's legacy SQL dialect. For more information see
+        `BigQuery Legacy SQL Reference
+        <https://cloud.google.com/bigquery/docs/reference/legacy-sql>`__.
         ``'standard'``
-            Use BigQuery's standard SQL, which is
-            compliant with the SQL 2011 standard. For more information
-            see `BigQuery Standard SQL Reference
-            <https://cloud.google.com/bigquery/docs/reference/standard-sql/>`__.
-
+        Use BigQuery's standard SQL, which is
+        compliant with the SQL 2011 standard. For more information
+        see `BigQuery Standard SQL Reference
+        <https://cloud.google.com/bigquery/docs/reference/standard-sql/>`__.
         .. versionchanged:: 0.24.0
     location : str, optional
         Location where the query job should run. See the `BigQuery locations
@@ -92,14 +87,11 @@
         <https://cloud.google.com/bigquery/docs/dataset-locations>`__ for a
         list of available locations. The location must match that of any
         datasets used in the query.
-
         *New in version 0.5.0 of pandas-gbq*.
     configuration : dict, optional
         Query config parameters for job processing.
         For example:
-
-            configuration = {'query': {'useQueryCache': False}}
-
+        configuration = {'query': {'useQueryCache': False}}
         For more information see `BigQuery REST API Reference
         <https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs#configuration.query>`__.
     credentials : google.auth.credentials.Credentials, optional
@@ -107,9 +99,7 @@
         default credentials, such as to use Compute Engine
         :class:`google.auth.compute_engine.Credentials` or Service Account
         :class:`google.oauth2.service_account.Credentials` directly.
-
         *New in version 0.8.0 of pandas-gbq*.
-
         .. versionadded:: 0.24.0
     use_bqstorage_api : bool, default False
         Use the `BigQuery Storage API
@@ -120,47 +110,69 @@
         You must also have the `bigquery.readsessions.create
         <https://cloud.google.com/bigquery/docs/access-control#roles>`__
         permission on the project you are billing queries to.
-
         This feature requires version 0.10.0 or later of the ``pandas-gbq``
         package. It also requires the ``google-cloud-bigquery-storage`` and
         ``fastavro`` packages.
-
         .. versionadded:: 0.25.0
     max_results : int, optional
         If set, limit the maximum number of rows to fetch from the query
         results.
-
         *New in version 0.12.0 of pandas-gbq*.
-
         .. versionadded:: 1.1.0
     progress_bar_type : Optional, str
         If set, use the `tqdm <https://tqdm.github.io/>`__ library to
         display a progress bar while the data downloads. Install the
         ``tqdm`` package to use this feature.
-
         Possible values of ``progress_bar_type`` include:
-
         ``None``
-            No progress bar.
+        No progress bar.
         ``'tqdm'``
-            Use the :func:`tqdm.tqdm` function to print a progress bar
-            to :data:`sys.stderr`.
+        Use the :func:`tqdm.tqdm` function to print a progress bar
+        to :data:`sys.stderr`.
         ``'tqdm_notebook'``
-            Use the :func:`tqdm.tqdm_notebook` function to display a
-            progress bar as a Jupyter notebook widget.
+        Use the :func:`tqdm.tqdm_notebook` function to display a
+        progress bar as a Jupyter notebook widget.
         ``'tqdm_gui'``
-            Use the :func:`tqdm.tqdm_gui` function to display a
-            progress bar as a graphical dialog box.
-
+        Use the :func:`tqdm.tqdm_gui` function to display a
+        progress bar as a graphical dialog box.
         Note that his feature requires version 0.12.0 or later of the
         ``pandas-gbq`` package. And it requires the ``tqdm`` package. Slightly
         different than ``pandas-gbq``, here the default is ``None``.
-
         .. versionadded:: 1.0.0
+    query: str :
+        
+    project_id: Optional[str] :
+         (Default value = None)
+    index_col: Optional[str] :
+         (Default value = None)
+    col_order: Optional[List[str]] :
+         (Default value = None)
+    reauth: bool :
+         (Default value = False)
+    auth_local_webserver: bool :
+         (Default value = False)
+    dialect: Optional[str] :
+         (Default value = None)
+    location: Optional[str] :
+         (Default value = None)
+    configuration: Optional[Dict[str :
+        
+    Any]] :
+         (Default value = None)
+    use_bqstorage_api: Optional[bool] :
+         (Default value = None)
+    max_results: Optional[int] :
+         (Default value = None)
+    private_key :
+         (Default value = None)
+    verbose :
+         (Default value = None)
+    progress_bar_type: Optional[str] :
+         (Default value = None)
 
     Returns
     -------
-    df: DataFrame
+    df : DataFrame
         DataFrame representing results of query.
 
     See Also
@@ -211,6 +223,43 @@
     verbose=None,
     private_key=None,
 ) -> None:
+    """
+
+    Parameters
+    ----------
+    dataframe: "DataFrame" :
+        
+    destination_table: str :
+        
+    project_id: Optional[str] :
+         (Default value = None)
+    chunksize: Optional[int] :
+         (Default value = None)
+    reauth: bool :
+         (Default value = False)
+    if_exists: str :
+         (Default value = "fail")
+    auth_local_webserver: bool :
+         (Default value = False)
+    table_schema: Optional[List[Dict[str :
+        
+    str]]] :
+         (Default value = None)
+    location: Optional[str] :
+         (Default value = None)
+    progress_bar: bool :
+         (Default value = True)
+    credentials :
+         (Default value = None)
+    verbose :
+         (Default value = None)
+    private_key :
+         (Default value = None)
+
+    Returns
+    -------
+
+    """
     pandas_gbq = _try_import()
     pandas_gbq.to_gbq(
         dataframe,
