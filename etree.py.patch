# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/bleach/_vendor/html5lib/treewalkers/etree.py
+++ b/..//venv/lib/python3.8/site-packages/bleach/_vendor/html5lib/treewalkers/etree.py
@@ -12,6 +12,17 @@
 
 
 def getETreeBuilder(ElementTreeImplementation):
+    """
+
+    Parameters
+    ----------
+    ElementTreeImplementation :
+        
+
+    Returns
+    -------
+
+    """
     ElementTree = ElementTreeImplementation
     ElementTreeCommentType = ElementTree.Comment("asd").tag
 
@@ -19,17 +30,35 @@
         """Given the particular ElementTree representation, this implementation,
         to avoid using recursion, returns "nodes" as tuples with the following
         content:
-
+        
         1. The current element
-
+        
         2. The index of the element relative to its parent
-
+        
         3. A stack of ancestor elements
-
+        
         4. A flag "text", "tail" or None to indicate if the current node is a
            text node; either the text or tail of the current element (1)
+
+        Parameters
+        ----------
+
+        Returns
+        -------
+
         """
         def getNodeDetails(self, node):
+            """
+
+            Parameters
+            ----------
+            node :
+                
+
+            Returns
+            -------
+
+            """
             if isinstance(node, tuple):  # It might be the root Element
                 elt, _, _, flag = node
                 if flag in ("text", "tail"):
@@ -70,6 +99,17 @@
                         attrs, len(node) or node.text)
 
         def getFirstChild(self, node):
+            """
+
+            Parameters
+            ----------
+            node :
+                
+
+            Returns
+            -------
+
+            """
             if isinstance(node, tuple):
                 element, key, parents, flag = node
             else:
@@ -87,6 +127,17 @@
                     return None
 
         def getNextSibling(self, node):
+            """
+
+            Parameters
+            ----------
+            node :
+                
+
+            Returns
+            -------
+
+            """
             if isinstance(node, tuple):
                 element, key, parents, flag = node
             else:
@@ -107,6 +158,17 @@
                     return None
 
         def getParentNode(self, node):
+            """
+
+            Parameters
+            ----------
+            node :
+                
+
+            Returns
+            -------
+
+            """
             if isinstance(node, tuple):
                 element, key, parents, flag = node
             else:
