# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/io/clipboards.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/io/clipboards.py
@@ -8,7 +8,7 @@
 
 
 def read_clipboard(sep=r"\s+", **kwargs):  # pragma: no cover
-    r"""
+    """r"""
     Read text from clipboard and pass to read_csv.
 
     Parameters
@@ -16,15 +16,11 @@
     sep : str, default '\s+'
         A string or regex delimiter. The default of '\s+' denotes
         one or more whitespace characters.
-
-    **kwargs
+    **kwargs :
         See read_csv for the full argument list.
 
     Returns
     -------
-    DataFrame
-        A parsed DataFrame object.
-    """
     encoding = kwargs.pop("encoding", "utf-8")
 
     # only utf-8 is valid for passed value because that's what clipboard
@@ -76,20 +72,27 @@
 
 
 def to_clipboard(obj, excel=True, sep=None, **kwargs):  # pragma: no cover
-    """
-    Attempt to write text representation of object to the system clipboard
+    """Attempt to write text representation of object to the system clipboard
     The clipboard can be then pasted into Excel for example.
 
     Parameters
     ----------
     obj : the object to write to the clipboard
+        
     excel : boolean, defaults to True
-            if True, use the provided separator, writing in a csv
-            format for allowing easy pasting into excel.
-            if False, write a string representation of the object
-            to the clipboard
+        if True, use the provided separator, writing in a csv
+        format for allowing easy pasting into excel.
+        if False, write a string representation of the object
+        to the clipboard (Default value = True)
     sep : optional, defaults to tab
-    other keywords are passed to to_csv
+         (Default value = None)
+    other keywords are passed to to_csv :
+        
+    **kwargs :
+        
+
+    Returns
+    -------
 
     Notes
     -----
