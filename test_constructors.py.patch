# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/indexes/base_class/test_constructors.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/indexes/base_class/test_constructors.py
@@ -5,11 +5,23 @@
 
 
 class TestIndexConstructor:
+    """ """
     # Tests for the Index constructor, specifically for cases that do
     #  not return a subclass
 
     @pytest.mark.parametrize("value", [1, np.int64(1)])
     def test_constructor_corner(self, value):
+        """
+
+        Parameters
+        ----------
+        value :
+            
+
+        Returns
+        -------
+
+        """
         # corner case
         msg = (
             r"Index\(\.\.\.\) must be called with a collection of some "
@@ -20,6 +32,17 @@
 
     @pytest.mark.parametrize("index_vals", [[("A", 1), "B"], ["B", ("A", 1)]])
     def test_construction_list_mixed_tuples(self, index_vals):
+        """
+
+        Parameters
+        ----------
+        index_vals :
+            
+
+        Returns
+        -------
+
+        """
         # see gh-10697: if we are constructing from a mixed list of tuples,
         # make sure that we are independent of the sorting order.
         index = Index(index_vals)
@@ -27,12 +50,14 @@
         assert not isinstance(index, MultiIndex)
 
     def test_constructor_wrong_kwargs(self):
+        """ """
         # GH #19348
         with pytest.raises(TypeError, match="Unexpected keyword arguments {'foo'}"):
             Index([], foo="bar")
 
     @pytest.mark.xfail(reason="see GH#21311: Index doesn't enforce dtype argument")
     def test_constructor_cast(self):
+        """ """
         msg = "could not convert string to float"
         with pytest.raises(ValueError, match=msg):
             Index(["a", "b", "c"], dtype=float)
