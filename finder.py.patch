# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/jedi/inference/finder.py
+++ b/..//venv/lib/python3.8/site-packages/jedi/inference/finder.py
@@ -26,9 +26,19 @@
 
 
 def filter_name(filters, name_or_str):
-    """
-    Searches names that are defined in a scope (the different
+    """Searches names that are defined in a scope (the different
     ``filters``), until a name fits.
+
+    Parameters
+    ----------
+    filters :
+        
+    name_or_str :
+        
+
+    Returns
+    -------
+
     """
     string_name = name_or_str.value if isinstance(name_or_str, Name) else name_or_str
     names = []
@@ -41,6 +51,17 @@
 
 
 def _remove_del_stmt(names):
+    """
+
+    Parameters
+    ----------
+    names :
+        
+
+    Returns
+    -------
+
+    """
     # Catch del statements and remove them from results.
     for name in names:
         if name.tree_name is not None:
@@ -51,13 +72,28 @@
 
 
 def check_flow_information(value, flow, search_name, pos):
-    """ Try to find out the type of a variable just with the information that
+    """Try to find out the type of a variable just with the information that
     is given by the flows: e.g. It is also responsible for assert checks.::
-
+    
         if isinstance(k, str):
             k.  # <- completion here
-
+    
     ensures that `k` is a string.
+
+    Parameters
+    ----------
+    value :
+        
+    flow :
+        
+    search_name :
+        
+    pos :
+        
+
+    Returns
+    -------
+
     """
     if not settings.dynamic_flow_information:
         return None
@@ -91,6 +127,17 @@
 
 
 def _get_isinstance_trailer_arglist(node):
+    """
+
+    Parameters
+    ----------
+    node :
+        
+
+    Returns
+    -------
+
+    """
     if node.type in ('power', 'atom_expr') and len(node.children) == 2:
         # This might be removed if we analyze and, etc
         first, trailer = node.children
@@ -101,6 +148,21 @@
 
 
 def _check_isinstance_type(value, node, search_name):
+    """
+
+    Parameters
+    ----------
+    value :
+        
+    node :
+        
+    search_name :
+        
+
+    Returns
+    -------
+
+    """
     lazy_cls = None
     trailer = _get_isinstance_trailer_arglist(node)
     if trailer is not None and len(trailer.children) == 3:
@@ -134,6 +196,17 @@
 
 
 def _get_call_string(node):
+    """
+
+    Parameters
+    ----------
+    node :
+        
+
+    Returns
+    -------
+
+    """
     if node.parent.type == 'atom_expr':
         return _get_call_string(node.parent)
 
