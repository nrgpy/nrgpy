# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/groupby/test_allowlist.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/groupby/test_allowlist.py
@@ -52,6 +52,17 @@
 
 @pytest.fixture(params=df_allowlist)
 def df_allowlist_fixture(request):
+    """
+
+    Parameters
+    ----------
+    request :
+        
+
+    Returns
+    -------
+
+    """
     return request.param
 
 
@@ -80,11 +91,23 @@
 
 @pytest.fixture(params=s_allowlist)
 def s_allowlist_fixture(request):
+    """
+
+    Parameters
+    ----------
+    request :
+        
+
+    Returns
+    -------
+
+    """
     return request.param
 
 
 @pytest.fixture
 def mframe():
+    """ """
     index = MultiIndex(
         levels=[["foo", "bar", "baz", "qux"], ["one", "two", "three"]],
         codes=[[0, 0, 0, 1, 1, 2, 2, 3, 3, 3], [0, 1, 2, 0, 1, 1, 2, 0, 1, 2]],
@@ -95,6 +118,7 @@
 
 @pytest.fixture
 def df():
+    """ """
     return DataFrame(
         {
             "A": ["foo", "bar", "foo", "bar", "foo", "bar", "foo", "foo"],
@@ -107,6 +131,7 @@
 
 @pytest.fixture
 def df_letters():
+    """ """
     letters = np.array(list(ascii_lowercase))
     N = 10
     random_letters = letters.take(np.random.randint(0, 26, N))
@@ -121,6 +146,19 @@
 
 @pytest.mark.parametrize("allowlist", [df_allowlist, s_allowlist])
 def test_groupby_allowlist(df_letters, allowlist):
+    """
+
+    Parameters
+    ----------
+    df_letters :
+        
+    allowlist :
+        
+
+    Returns
+    -------
+
+    """
     df = df_letters
     if allowlist == df_allowlist:
         # dataframe
@@ -134,6 +172,21 @@
 
 
 def check_allowlist(obj, df, m):
+    """
+
+    Parameters
+    ----------
+    obj :
+        
+    df :
+        
+    m :
+        
+
+    Returns
+    -------
+
+    """
     # check the obj for a particular allowlist m
 
     gb = obj.groupby(df.letters)
@@ -156,12 +209,38 @@
 
 
 def test_groupby_series_allowlist(df_letters, s_allowlist_fixture):
+    """
+
+    Parameters
+    ----------
+    df_letters :
+        
+    s_allowlist_fixture :
+        
+
+    Returns
+    -------
+
+    """
     m = s_allowlist_fixture
     df = df_letters
     check_allowlist(df.letters, df, m)
 
 
 def test_groupby_frame_allowlist(df_letters, df_allowlist_fixture):
+    """
+
+    Parameters
+    ----------
+    df_letters :
+        
+    df_allowlist_fixture :
+        
+
+    Returns
+    -------
+
+    """
     m = df_allowlist_fixture
     df = df_letters
     check_allowlist(df, df, m)
@@ -169,6 +248,7 @@
 
 @pytest.fixture
 def raw_frame():
+    """ """
     index = MultiIndex(
         levels=[["foo", "bar", "baz", "qux"], ["one", "two", "three"]],
         codes=[[0, 0, 0, 1, 1, 2, 2, 3, 3, 3], [0, 1, 2, 0, 1, 1, 2, 0, 1, 2]],
@@ -188,6 +268,27 @@
 @pytest.mark.parametrize("skipna", [True, False])
 @pytest.mark.parametrize("sort", [True, False])
 def test_regression_allowlist_methods(raw_frame, op, level, axis, skipna, sort):
+    """
+
+    Parameters
+    ----------
+    raw_frame :
+        
+    op :
+        
+    level :
+        
+    axis :
+        
+    skipna :
+        
+    sort :
+        
+
+    Returns
+    -------
+
+    """
     # GH6944
     # GH 17537
     # explicitly test the allowlist methods
@@ -214,6 +315,17 @@
 
 
 def test_groupby_blocklist(df_letters):
+    """
+
+    Parameters
+    ----------
+    df_letters :
+        
+
+    Returns
+    -------
+
+    """
     df = df_letters
     s = df_letters.floats
 
@@ -258,6 +370,17 @@
 
 
 def test_tab_completion(mframe):
+    """
+
+    Parameters
+    ----------
+    mframe :
+        
+
+    Returns
+    -------
+
+    """
     grp = mframe.groupby(level="second")
     results = {v for v in dir(grp) if not v.startswith("_")}
     expected = {
@@ -334,6 +457,17 @@
 
 
 def test_groupby_function_rename(mframe):
+    """
+
+    Parameters
+    ----------
+    mframe :
+        
+
+    Returns
+    -------
+
+    """
     grp = mframe.groupby(level="second")
     for name in ["sum", "prod", "min", "max", "first", "last"]:
         f = getattr(grp, name)
@@ -342,6 +476,17 @@
 
 @pytest.mark.filterwarnings("ignore:tshift is deprecated:FutureWarning")
 def test_groupby_selection_with_methods(df):
+    """
+
+    Parameters
+    ----------
+    df :
+        
+
+    Returns
+    -------
+
+    """
     # some methods which require DatetimeIndex
     rng = date_range("2014", periods=len(df))
     df.index = rng
@@ -393,6 +538,17 @@
 
 
 def test_all_methods_categorized(mframe):
+    """
+
+    Parameters
+    ----------
+    mframe :
+        
+
+    Returns
+    -------
+
+    """
     grp = mframe.groupby(mframe.iloc[:, 0])
     names = {_ for _ in dir(grp) if not _.startswith("_")} - set(mframe.columns)
     new_names = set(names)
