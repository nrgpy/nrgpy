# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/numpy/distutils/tests/test_exec_command.py
+++ b/..//venv/lib/python3.8/site-packages/numpy/distutils/tests/test_exec_command.py
@@ -41,7 +41,7 @@
         self._stderr.close()
 
 class emulate_nonposix:
-    """Context manager to emulate os.name != 'posix' """
+    """Context manager to emulate os.name != 'posix'"""
     def __init__(self, osname='non-posix'):
         self._new_name = osname
 
@@ -54,6 +54,7 @@
 
 
 def test_exec_command_stdout():
+    """ """
     # Regression test for gh-2999 and gh-2915.
     # There are several packages (nose, scipy.weave.inline, Sage inline
     # Fortran) that replace stdout, in which case it doesn't have a fileno
@@ -78,6 +79,7 @@
                         exec_command.exec_command("cd '.'")
 
 def test_exec_command_stderr():
+    """ """
     # Test posix version:
     with redirect_stdout(TemporaryFile(mode='w+')):
         with redirect_stderr(StringIO()):
@@ -94,10 +96,23 @@
 
 
 class TestExecCommand:
+    """ """
     def setup(self):
+        """ """
         self.pyexe = get_pythonexe()
 
     def check_nt(self, **kws):
+        """
+
+        Parameters
+        ----------
+        **kws :
+            
+
+        Returns
+        -------
+
+        """
         s, o = exec_command.exec_command('cmd /C echo path=%path%')
         assert_(s == 0)
         assert_(o != '')
@@ -108,6 +123,17 @@
         assert_(o == 'win32')
 
     def check_posix(self, **kws):
+        """
+
+        Parameters
+        ----------
+        **kws :
+            
+
+        Returns
+        -------
+
+        """
         s, o = exec_command.exec_command("echo Hello", **kws)
         assert_(s == 0)
         assert_(o == 'Hello')
@@ -160,6 +186,17 @@
         assert_(o == 'posix')
 
     def check_basic(self, *kws):
+        """
+
+        Parameters
+        ----------
+        *kws :
+            
+
+        Returns
+        -------
+
+        """
         s, o = exec_command.exec_command(
                      '"%s" -c "raise \'Ignore me.\'"' % self.pyexe, **kws)
         assert_(s != 0)
@@ -183,6 +220,17 @@
         assert_(o == 'Heipa')
 
     def check_execute_in(self, **kws):
+        """
+
+        Parameters
+        ----------
+        **kws :
+            
+
+        Returns
+        -------
+
+        """
         with tempdir() as tmpdir:
             fn = "file"
             tmpfile = os.path.join(tmpdir, fn)
@@ -201,6 +249,7 @@
             assert_(o == 'Hello')
 
     def test_basic(self):
+        """ """
         with redirect_stdout(StringIO()):
             with redirect_stderr(StringIO()):
                 with assert_warns(DeprecationWarning):
