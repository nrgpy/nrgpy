# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/reductions/test_stat_reductions.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/reductions/test_stat_reductions.py
@@ -15,8 +15,22 @@
 
 
 class TestDatetimeLikeStatReductions:
+    """ """
     @pytest.mark.parametrize("box", [Series, pd.Index, DatetimeArray])
     def test_dt64_mean(self, tz_naive_fixture, box):
+        """
+
+        Parameters
+        ----------
+        tz_naive_fixture :
+            
+        box :
+            
+
+        Returns
+        -------
+
+        """
         tz = tz_naive_fixture
 
         dti = pd.date_range("2001-01-01", periods=11, tz=tz)
@@ -37,6 +51,17 @@
 
     @pytest.mark.parametrize("box", [Series, pd.Index, PeriodArray])
     def test_period_mean(self, box):
+        """
+
+        Parameters
+        ----------
+        box :
+            
+
+        Returns
+        -------
+
+        """
         # GH#24757
         dti = pd.date_range("2001-01-01", periods=11)
         # shuffle so that we are not just working with monotone-increasing
@@ -61,6 +86,17 @@
 
     @pytest.mark.parametrize("box", [Series, pd.Index, TimedeltaArray])
     def test_td64_mean(self, box):
+        """
+
+        Parameters
+        ----------
+        box :
+            
+
+        Returns
+        -------
+
+        """
         tdi = pd.TimedeltaIndex([0, 3, -2, -7, 1, 2, -1, 3, 5, -2, 4], unit="D")
 
         tdarr = tdi._data
@@ -81,6 +117,7 @@
 
 
 class TestSeriesStatReductions:
+    """ """
     # Note: the name TestSeriesStatReductions indicates these tests
     #  were moved from a series-specific test file, _not_ that these tests are
     #  intended long-term to be series-specific
@@ -88,6 +125,25 @@
     def _check_stat_op(
         self, name, alternate, string_series_, check_objects=False, check_allna=False
     ):
+        """
+
+        Parameters
+        ----------
+        name :
+            
+        alternate :
+            
+        string_series_ :
+            
+        check_objects :
+             (Default value = False)
+        check_allna :
+             (Default value = False)
+
+        Returns
+        -------
+
+        """
 
         with pd.option_context("use_bottleneck", False):
             f = getattr(Series, name)
@@ -147,14 +203,17 @@
                     f(string_series_, numeric_only=True)
 
     def test_sum(self):
+        """ """
         string_series = tm.makeStringSeries().rename("series")
         self._check_stat_op("sum", np.sum, string_series, check_allna=False)
 
     def test_mean(self):
+        """ """
         string_series = tm.makeStringSeries().rename("series")
         self._check_stat_op("mean", np.mean, string_series)
 
     def test_median(self):
+        """ """
         string_series = tm.makeStringSeries().rename("series")
         self._check_stat_op("median", np.median, string_series)
 
@@ -163,18 +222,22 @@
         tm.assert_almost_equal(np.median(int_ts), int_ts.median())
 
     def test_prod(self):
+        """ """
         string_series = tm.makeStringSeries().rename("series")
         self._check_stat_op("prod", np.prod, string_series)
 
     def test_min(self):
+        """ """
         string_series = tm.makeStringSeries().rename("series")
         self._check_stat_op("min", np.min, string_series, check_objects=True)
 
     def test_max(self):
+        """ """
         string_series = tm.makeStringSeries().rename("series")
         self._check_stat_op("max", np.max, string_series, check_objects=True)
 
     def test_var_std(self):
+        """ """
         string_series = tm.makeStringSeries().rename("series")
         datetime_series = tm.makeTimeSeries().rename("ts")
 
@@ -201,6 +264,7 @@
         assert pd.isna(result)
 
     def test_sem(self):
+        """ """
         string_series = tm.makeStringSeries().rename("series")
         datetime_series = tm.makeTimeSeries().rename("ts")
 
@@ -220,6 +284,7 @@
 
     @td.skip_if_no_scipy
     def test_skew(self):
+        """ """
         from scipy.stats import skew
 
         string_series = tm.makeStringSeries().rename("series")
@@ -242,6 +307,7 @@
 
     @td.skip_if_no_scipy
     def test_kurt(self):
+        """ """
         from scipy.stats import kurtosis
 
         string_series = tm.makeStringSeries().rename("series")
