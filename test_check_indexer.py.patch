# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/indexing/test_check_indexer.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/indexing/test_check_indexer.py
@@ -26,6 +26,19 @@
     ],
 )
 def test_valid_input(indexer, expected):
+    """
+
+    Parameters
+    ----------
+    indexer :
+        
+    expected :
+        
+
+    Returns
+    -------
+
+    """
     array = np.array([1, 2, 3])
     result = check_array_indexer(array, indexer)
     tm.assert_numpy_array_equal(result, expected)
@@ -35,6 +48,17 @@
     "indexer", [[True, False, None], pd.array([True, False, None], dtype="boolean")],
 )
 def test_boolean_na_returns_indexer(indexer):
+    """
+
+    Parameters
+    ----------
+    indexer :
+        
+
+    Returns
+    -------
+
+    """
     # https://github.com/pandas-dev/pandas/issues/31503
     arr = np.array([1, 2, 3])
 
@@ -53,6 +77,17 @@
     ],
 )
 def test_bool_raise_length(indexer):
+    """
+
+    Parameters
+    ----------
+    indexer :
+        
+
+    Returns
+    -------
+
+    """
     array = np.array([1, 2, 3])
 
     msg = "Boolean index has wrong length"
@@ -64,6 +99,17 @@
     "indexer", [[0, 1, None], pd.array([0, 1, pd.NA], dtype="Int64")],
 )
 def test_int_raise_missing_values(indexer):
+    """
+
+    Parameters
+    ----------
+    indexer :
+        
+
+    Returns
+    -------
+
+    """
     array = np.array([1, 2, 3])
 
     msg = "Cannot index with an integer indexer containing NA values"
@@ -82,6 +128,17 @@
     ],
 )
 def test_raise_invalid_array_dtypes(indexer):
+    """
+
+    Parameters
+    ----------
+    indexer :
+        
+
+    Returns
+    -------
+
+    """
     array = np.array([1, 2, 3])
 
     msg = "arrays used as indices must be of integer or boolean type"
@@ -93,6 +150,17 @@
     "indexer", [None, Ellipsis, slice(0, 3), (None,)],
 )
 def test_pass_through_non_array_likes(indexer):
+    """
+
+    Parameters
+    ----------
+    indexer :
+        
+
+    Returns
+    -------
+
+    """
     array = np.array([1, 2, 3])
 
     result = check_array_indexer(array, indexer)
