# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/series/methods/test_rename.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/series/methods/test_rename.py
@@ -7,7 +7,19 @@
 
 
 class TestRename:
+    """ """
     def test_rename(self, datetime_series):
+        """
+
+        Parameters
+        ----------
+        datetime_series :
+            
+
+        Returns
+        -------
+
+        """
         ts = datetime_series
         renamer = lambda x: x.strftime("%Y%m%d")
         renamed = ts.rename(renamer)
@@ -31,6 +43,7 @@
         assert renamed.index.name == renamer.index.name
 
     def test_rename_by_series(self):
+        """ """
         s = Series(range(5), name="foo")
         renamer = Series({1: 10, 2: 20})
         result = s.rename(renamer)
@@ -38,6 +51,7 @@
         tm.assert_series_equal(result, expected)
 
     def test_rename_set_name(self):
+        """ """
         s = Series(range(4), index=list("abcd"))
         for name in ["foo", 123, 123.0, datetime(2001, 11, 11), ("foo",)]:
             result = s.rename(name)
@@ -46,6 +60,7 @@
             assert s.name is None
 
     def test_rename_set_name_inplace(self):
+        """ """
         s = Series(range(3), index=list("abc"))
         for name in ["foo", 123, 123.0, datetime(2001, 11, 11), ("foo",)]:
             s.rename(name, inplace=True)
@@ -55,6 +70,7 @@
             tm.assert_numpy_array_equal(s.index.values, exp)
 
     def test_rename_axis_supported(self):
+        """ """
         # Supporting axis for compatibility, detailed in GH-18589
         s = Series(range(5))
         s.rename({}, axis=0)
@@ -65,6 +81,17 @@
         #     s.rename({}, axis=5)
 
     def test_rename_inplace(self, datetime_series):
+        """
+
+        Parameters
+        ----------
+        datetime_series :
+            
+
+        Returns
+        -------
+
+        """
         renamer = lambda x: x.strftime("%Y%m%d")
         expected = renamer(datetime_series.index[0])
 
@@ -72,8 +99,10 @@
         assert datetime_series.index[0] == expected
 
     def test_rename_with_custom_indexer(self):
+        """ """
         # GH 27814
         class MyIndexer:
+            """ """
             pass
 
         ix = MyIndexer()
@@ -81,8 +110,10 @@
         assert s.name is ix
 
     def test_rename_with_custom_indexer_inplace(self):
+        """ """
         # GH 27814
         class MyIndexer:
+            """ """
             pass
 
         ix = MyIndexer()
@@ -91,6 +122,7 @@
         assert s.name is ix
 
     def test_rename_callable(self):
+        """ """
         # GH 17407
         s = Series(range(1, 6), index=Index(range(2, 7), name="IntIndex"))
         result = s.rename(str)
