# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/extension/base/casting.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/extension/base/casting.py
@@ -10,11 +10,33 @@
     """Casting to and from ExtensionDtypes"""
 
     def test_astype_object_series(self, all_data):
+        """
+
+        Parameters
+        ----------
+        all_data :
+            
+
+        Returns
+        -------
+
+        """
         ser = pd.Series(all_data, name="A")
         result = ser.astype(object)
         assert isinstance(result._mgr.blocks[0], ObjectBlock)
 
     def test_astype_object_frame(self, all_data):
+        """
+
+        Parameters
+        ----------
+        all_data :
+            
+
+        Returns
+        -------
+
+        """
         df = pd.DataFrame({"A": all_data})
 
         result = df.astype(object)
@@ -27,22 +49,66 @@
         # assert not cmp.any()
 
     def test_tolist(self, data):
+        """
+
+        Parameters
+        ----------
+        data :
+            
+
+        Returns
+        -------
+
+        """
         result = pd.Series(data).tolist()
         expected = list(data)
         assert result == expected
 
     def test_astype_str(self, data):
+        """
+
+        Parameters
+        ----------
+        data :
+            
+
+        Returns
+        -------
+
+        """
         result = pd.Series(data[:5]).astype(str)
         expected = pd.Series([str(x) for x in data[:5]], dtype=str)
         self.assert_series_equal(result, expected)
 
     def test_astype_string(self, data):
+        """
+
+        Parameters
+        ----------
+        data :
+            
+
+        Returns
+        -------
+
+        """
         # GH-33465
         result = pd.Series(data[:5]).astype("string")
         expected = pd.Series([str(x) for x in data[:5]], dtype="string")
         self.assert_series_equal(result, expected)
 
     def test_to_numpy(self, data):
+        """
+
+        Parameters
+        ----------
+        data :
+            
+
+        Returns
+        -------
+
+        """
         expected = np.asarray(data)
 
         result = data.to_numpy()
@@ -52,6 +118,17 @@
         self.assert_equal(result, expected)
 
     def test_astype_empty_dataframe(self, dtype):
+        """
+
+        Parameters
+        ----------
+        dtype :
+            
+
+        Returns
+        -------
+
+        """
         # https://github.com/pandas-dev/pandas/issues/33113
         df = pd.DataFrame()
         result = df.astype(dtype)
