# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/plotting/test_hist_method.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/plotting/test_hist_method.py
@@ -13,7 +13,19 @@
 
 @td.skip_if_no_mpl
 class TestSeriesPlots(TestPlotBase):
+    """ """
     def setup_method(self, method):
+        """
+
+        Parameters
+        ----------
+        method :
+            
+
+        Returns
+        -------
+
+        """
         TestPlotBase.setup_method(self, method)
         import matplotlib as mpl
 
@@ -24,6 +36,7 @@
 
     @pytest.mark.slow
     def test_hist_legacy(self):
+        """ """
         _check_plot_works(self.ts.hist)
         _check_plot_works(self.ts.hist, grid=False)
         _check_plot_works(self.ts.hist, figsize=(8, 10))
@@ -48,12 +61,14 @@
 
     @pytest.mark.slow
     def test_hist_bins_legacy(self):
+        """ """
         df = DataFrame(np.random.randn(10, 2))
         ax = df.hist(bins=2)[0][0]
         assert len(ax.patches) == 2
 
     @pytest.mark.slow
     def test_hist_layout(self):
+        """ """
         df = self.hist_df
         with pytest.raises(ValueError):
             df.height.hist(layout=(1, 1))
@@ -63,6 +78,7 @@
 
     @pytest.mark.slow
     def test_hist_layout_with_by(self):
+        """ """
         df = self.hist_df
 
         # _check_plot_works adds an `ax` kwarg to the method call
@@ -101,6 +117,7 @@
 
     @pytest.mark.slow
     def test_hist_no_overlap(self):
+        """ """
         from matplotlib.pyplot import gcf, subplot
 
         x = Series(randn(2))
@@ -115,12 +132,14 @@
 
     @pytest.mark.slow
     def test_hist_by_no_extra_plots(self):
+        """ """
         df = self.hist_df
         axes = df.height.hist(by=df.gender)  # noqa
         assert len(self.plt.get_fignums()) == 1
 
     @pytest.mark.slow
     def test_plot_fails_when_ax_differs_from_figure(self):
+        """ """
         from pylab import figure
 
         fig1 = figure()
@@ -133,6 +152,21 @@
         "by, expected_axes_num, expected_layout", [(None, 1, (1, 1)), ("b", 2, (1, 2))]
     )
     def test_hist_with_legend(self, by, expected_axes_num, expected_layout):
+        """
+
+        Parameters
+        ----------
+        by :
+            
+        expected_axes_num :
+            
+        expected_layout :
+            
+
+        Returns
+        -------
+
+        """
         # GH 6279 - Series histogram can have a legend
         index = 15 * ["1"] + 15 * ["2"]
         s = Series(np.random.randn(30), index=index, name="a")
@@ -144,6 +178,17 @@
 
     @pytest.mark.parametrize("by", [None, "b"])
     def test_hist_with_legend_raises(self, by):
+        """
+
+        Parameters
+        ----------
+        by :
+            
+
+        Returns
+        -------
+
+        """
         # GH 6279 - Series histogram with legend and label raises
         index = 15 * ["1"] + 15 * ["2"]
         s = Series(np.random.randn(30), index=index, name="a")
@@ -155,8 +200,10 @@
 
 @td.skip_if_no_mpl
 class TestDataFramePlots(TestPlotBase):
+    """ """
     @pytest.mark.slow
     def test_hist_df_legacy(self):
+        """ """
         from matplotlib.patches import Rectangle
 
         with tm.assert_produces_warning(UserWarning):
@@ -226,6 +273,7 @@
 
     @pytest.mark.slow
     def test_hist_non_numerical_raises(self):
+        """ """
         # gh-10444
         df = DataFrame(np.random.rand(10, 2))
         df_o = df.astype(object)
@@ -236,6 +284,7 @@
 
     @pytest.mark.slow
     def test_hist_layout(self):
+        """ """
         df = DataFrame(randn(100, 3))
 
         layout_to_expected_size = (
@@ -268,6 +317,7 @@
     @pytest.mark.slow
     # GH 9351
     def test_tight_layout(self):
+        """ """
         df = DataFrame(randn(100, 3))
         _check_plot_works(df.hist)
         self.plt.tight_layout()
@@ -275,6 +325,7 @@
         tm.close()
 
     def test_hist_subplot_xrot(self):
+        """ """
         # GH 30288
         df = DataFrame(
             {
@@ -300,6 +351,19 @@
         ],
     )
     def test_hist_column_order_unchanged(self, column, expected):
+        """
+
+        Parameters
+        ----------
+        column :
+            
+        expected :
+            
+
+        Returns
+        -------
+
+        """
         # GH29235
 
         df = DataFrame(
@@ -319,6 +383,19 @@
     @pytest.mark.parametrize("by", [None, "c"])
     @pytest.mark.parametrize("column", [None, "b"])
     def test_hist_with_legend(self, by, column):
+        """
+
+        Parameters
+        ----------
+        by :
+            
+        column :
+            
+
+        Returns
+        -------
+
+        """
         # GH 6279 - DataFrame histogram can have a legend
         expected_axes_num = 1 if by is None and column is not None else 2
         expected_layout = (1, expected_axes_num)
@@ -339,6 +416,19 @@
     @pytest.mark.parametrize("by", [None, "c"])
     @pytest.mark.parametrize("column", [None, "b"])
     def test_hist_with_legend_raises(self, by, column):
+        """
+
+        Parameters
+        ----------
+        by :
+            
+        column :
+            
+
+        Returns
+        -------
+
+        """
         # GH 6279 - DataFrame histogram with legend and label raises
         index = Index(15 * ["1"] + 15 * ["2"], name="c")
         df = DataFrame(np.random.randn(30, 2), index=index, columns=["a", "b"])
@@ -349,8 +439,10 @@
 
 @td.skip_if_no_mpl
 class TestDataFrameGroupByPlots(TestPlotBase):
+    """ """
     @pytest.mark.slow
     def test_grouped_hist_legacy(self):
+        """ """
         from matplotlib.patches import Rectangle
 
         from pandas.plotting._matplotlib.hist import _grouped_hist
@@ -413,6 +505,7 @@
 
     @pytest.mark.slow
     def test_grouped_hist_legacy2(self):
+        """ """
         n = 10
         weight = Series(np.random.normal(166, 20, size=n))
         height = Series(np.random.normal(60, 10, size=n))
@@ -427,6 +520,7 @@
 
     @pytest.mark.slow
     def test_grouped_hist_layout(self):
+        """ """
         df = self.hist_df
         msg = "Layout of 1x1 must be larger than required size 2"
         with pytest.raises(ValueError, match=msg):
@@ -482,6 +576,7 @@
 
     @pytest.mark.slow
     def test_grouped_hist_multiple_axes(self):
+        """ """
         # GH 6970, GH 7069
         df = self.hist_df
 
@@ -502,6 +597,7 @@
 
     @pytest.mark.slow
     def test_axis_share_x(self):
+        """ """
         df = self.hist_df
         # GH4089
         ax1, ax2 = df.hist(column="height", by=df.gender, sharex=True)
@@ -516,6 +612,7 @@
 
     @pytest.mark.slow
     def test_axis_share_y(self):
+        """ """
         df = self.hist_df
         ax1, ax2 = df.hist(column="height", by=df.gender, sharey=True)
 
@@ -529,6 +626,7 @@
 
     @pytest.mark.slow
     def test_axis_share_xy(self):
+        """ """
         df = self.hist_df
         ax1, ax2 = df.hist(column="height", by=df.gender, sharex=True, sharey=True)
 
