# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pygments/lexers/crystal.py
+++ b/..//venv/lib/python3.8/site-packages/pygments/lexers/crystal.py
@@ -28,10 +28,16 @@
 
 
 class CrystalLexer(ExtendedRegexLexer):
-    """
-    For `Crystal <http://crystal-lang.org>`_ source code.
-
+    """For `Crystal <http://crystal-lang.org>`_ source code.
+    
     .. versionadded:: 2.2
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
 
     name = 'Crystal'
@@ -42,6 +48,19 @@
     flags = re.DOTALL | re.MULTILINE
 
     def heredoc_callback(self, match, ctx):
+        """
+
+        Parameters
+        ----------
+        match :
+            
+        ctx :
+            
+
+        Returns
+        -------
+
+        """
         # okay, this is the hardest part of parsing Crystal...
         # match: 1 = <<-?, 2 = quote? 3 = name 4 = quote? 5 = rest of line
 
@@ -86,7 +105,21 @@
             del heredocstack[:]
 
     def gen_crystalstrings_rules():
+        """ """
         def intp_regex_callback(self, match, ctx):
+            """
+
+            Parameters
+            ----------
+            match :
+                
+            ctx :
+                
+
+            Returns
+            -------
+
+            """
             yield match.start(1), String.Regex, match.group(1)  # begin
             nctx = LexerContext(match.group(3), 0, ['interpolated-regex'])
             for i, t, v in self.get_tokens_unprocessed(context=nctx):
@@ -95,6 +128,19 @@
             ctx.pos = match.end()
 
         def intp_string_callback(self, match, ctx):
+            """
+
+            Parameters
+            ----------
+            match :
+                
+            ctx :
+                
+
+            Returns
+            -------
+
+            """
             yield match.start(1), String.Other, match.group(1)
             nctx = LexerContext(match.group(3), 0, ['interpolated-string'])
             for i, t, v in self.get_tokens_unprocessed(context=nctx):
