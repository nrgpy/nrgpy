# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/util/test_assert_extension_array_equal.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/util/test_assert_extension_array_equal.py
@@ -15,6 +15,17 @@
     ],
 )
 def test_assert_extension_array_equal_not_exact(kwargs):
+    """
+
+    Parameters
+    ----------
+    kwargs :
+        
+
+    Returns
+    -------
+
+    """
     # see gh-23709
     arr1 = SparseArray([-0.17387645482451206, 0.3414148016424936])
     arr2 = SparseArray([-0.17387645482451206, 0.3414148016424937])
@@ -35,6 +46,17 @@
 
 @pytest.mark.parametrize("decimals", range(10))
 def test_assert_extension_array_equal_less_precise(decimals):
+    """
+
+    Parameters
+    ----------
+    decimals :
+        
+
+    Returns
+    -------
+
+    """
     rtol = 0.5 * 10 ** -decimals
     arr1 = SparseArray([0.5, 0.123456])
     arr2 = SparseArray([0.5, 0.123457])
@@ -54,6 +76,17 @@
 
 
 def test_assert_extension_array_equal_dtype_mismatch(check_dtype):
+    """
+
+    Parameters
+    ----------
+    check_dtype :
+        
+
+    Returns
+    -------
+
+    """
     end = 5
     kwargs = dict(check_dtype=check_dtype)
 
@@ -75,6 +108,7 @@
 
 
 def test_assert_extension_array_equal_missing_values():
+    """ """
     arr1 = SparseArray([np.nan, 1, 2, np.nan])
     arr2 = SparseArray([np.nan, 1, 2, 3])
 
@@ -91,6 +125,17 @@
 
 @pytest.mark.parametrize("side", ["left", "right"])
 def test_assert_extension_array_equal_non_extension_array(side):
+    """
+
+    Parameters
+    ----------
+    side :
+        
+
+    Returns
+    -------
+
+    """
     numpy_array = np.arange(5)
     extension_array = SparseArray(numpy_array)
 
@@ -107,6 +152,17 @@
 
 @pytest.mark.parametrize("right_dtype", ["Int32", "int64"])
 def test_assert_extension_array_equal_ignore_dtype_mismatch(right_dtype):
+    """
+
+    Parameters
+    ----------
+    right_dtype :
+        
+
+    Returns
+    -------
+
+    """
     # https://github.com/pandas-dev/pandas/issues/35715
     left = array([1, 2, 3], dtype="Int64")
     right = array([1, 2, 3], dtype=right_dtype)
