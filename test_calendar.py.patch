# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/tseries/holiday/test_calendar.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/tseries/holiday/test_calendar.py
@@ -20,6 +20,17 @@
     "transform", [lambda x: x, lambda x: x.strftime("%Y-%m-%d"), lambda x: Timestamp(x)]
 )
 def test_calendar(transform):
+    """
+
+    Parameters
+    ----------
+    transform :
+        
+
+    Returns
+    -------
+
+    """
     start_date = datetime(2012, 1, 1)
     end_date = datetime(2012, 12, 31)
 
@@ -43,9 +54,11 @@
 
 
 def test_calendar_caching():
+    """ """
     # see gh-9552.
 
     class TestCalendar(AbstractHolidayCalendar):
+        """ """
         def __init__(self, name=None, rules=None):
             super().__init__(name=name, rules=rules)
 
@@ -58,6 +71,7 @@
 
 
 def test_calendar_observance_dates():
+    """ """
     # see gh-11477
     us_fed_cal = get_calendar("USFederalHolidayCalendar")
     holidays0 = us_fed_cal.holidays(
@@ -80,17 +94,20 @@
 
 
 def test_rule_from_name():
+    """ """
     us_fed_cal = get_calendar("USFederalHolidayCalendar")
     assert us_fed_cal.rule_from_name("Thanksgiving") == USThanksgivingDay
 
 
 def test_calendar_2031():
+    """ """
     # See gh-27790
     #
     # Labor Day 2031 is on September 1. Saturday before is August 30.
     # Next working day after August 30 ought to be Tuesday, September 2.
 
     class testCalendar(AbstractHolidayCalendar):
+        """ """
         rules = [USLaborDay]
 
     cal = testCalendar()
@@ -101,9 +118,11 @@
 
 
 def test_no_holidays_calendar():
+    """ """
     # Test for issue #31415
 
     class NoHolidaysCalendar(AbstractHolidayCalendar):
+        """ """
         pass
 
     cal = NoHolidaysCalendar()
