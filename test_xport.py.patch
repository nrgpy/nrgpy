# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/io/sas/test_xport.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/io/sas/test_xport.py
@@ -15,14 +15,37 @@
 
 
 def numeric_as_float(data):
+    """
+
+    Parameters
+    ----------
+    data :
+        
+
+    Returns
+    -------
+
+    """
     for v in data.columns:
         if data[v].dtype is np.dtype("int64"):
             data[v] = data[v].astype(np.float64)
 
 
 class TestXport:
+    """ """
     @pytest.fixture(autouse=True)
     def setup_method(self, datapath):
+        """
+
+        Parameters
+        ----------
+        datapath :
+            
+
+        Returns
+        -------
+
+        """
         self.dirpath = datapath("io", "sas", "data")
         self.file01 = os.path.join(self.dirpath, "DEMO_G.xpt")
         self.file02 = os.path.join(self.dirpath, "SSHSV1_A.xpt")
@@ -31,6 +54,7 @@
         self.file04 = os.path.join(self.dirpath, "paxraw_d_short.xpt")
 
     def test1_basic(self):
+        """ """
         # Tests with DEMO_G.xpt (all numeric file)
 
         # Compare to this
@@ -73,6 +97,7 @@
         tm.assert_frame_equal(data, data_csv)
 
     def test1_index(self):
+        """ """
         # Tests with DEMO_G.xpt using index (all numeric file)
 
         # Compare to this
@@ -97,6 +122,7 @@
         tm.assert_frame_equal(data, data_csv.iloc[0:10, :], check_index_type=False)
 
     def test1_incremental(self):
+        """ """
         # Test with DEMO_G.xpt, reading full file incrementally
 
         data_csv = pd.read_csv(self.file01.replace(".xpt", ".csv"))
@@ -111,6 +137,7 @@
         tm.assert_frame_equal(data, data_csv, check_index_type=False)
 
     def test2(self):
+        """ """
         # Test with SSHSV1_A.xpt
 
         # Compare to this
@@ -121,6 +148,7 @@
         tm.assert_frame_equal(data, data_csv)
 
     def test2_binary(self):
+        """ """
         # Test with SSHSV1_A.xpt, read as a binary file
 
         # Compare to this
@@ -131,6 +159,7 @@
         tm.assert_frame_equal(data, data_csv)
 
     def test_multiple_types(self):
+        """ """
         # Test with DRXFCD_G.xpt (contains text and numeric variables)
 
         # Compare to this
@@ -140,6 +169,7 @@
         tm.assert_frame_equal(data, data_csv)
 
     def test_truncated_float_support(self):
+        """ """
         # Test with paxraw_d_short.xpt, a shortened version of:
         # http://wwwn.cdc.gov/Nchs/Nhanes/2005-2006/PAXRAW_D.ZIP
         # This file has truncated floats (5 bytes in this case).
