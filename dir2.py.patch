# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/IPython/utils/dir2.py
+++ b/..//venv/lib/python3.8/site-packages/IPython/utils/dir2.py
@@ -12,6 +12,17 @@
 def safe_hasattr(obj, attr):
     """In recent versions of Python, hasattr() only catches AttributeError.
     This catches all errors.
+
+    Parameters
+    ----------
+    obj :
+        
+    attr :
+        
+
+    Returns
+    -------
+
     """
     try:
         getattr(obj, attr)
@@ -22,14 +33,23 @@
 
 def dir2(obj):
     """dir2(obj) -> list of strings
-
+    
     Extended version of the Python builtin dir(), which does a few extra
     checks.
-
+    
     This version is guaranteed to return only a list of true strings, whereas
     dir() returns anything that objects inject into themselves, even if they
     are later not really valid for attribute access (many extension libraries
     have such bugs).
+
+    Parameters
+    ----------
+    obj :
+        
+
+    Returns
+    -------
+
     """
 
     # Start building the attribute list via dir(), and then complete it
@@ -53,13 +73,24 @@
 
 def get_real_method(obj, name):
     """Like getattr, but with a few extra sanity checks:
-
+    
     - If obj is a class, ignore everything except class methods
     - Check if obj is a proxy that claims to have all attributes
     - Catch attribute access failing with any exception
     - Check that the attribute is a callable object
+    
+    Returns the method or None.
 
-    Returns the method or None.
+    Parameters
+    ----------
+    obj :
+        
+    name :
+        
+
+    Returns
+    -------
+
     """
     try:
         canary = getattr(obj, '_ipython_canary_method_should_not_exist_', None)
