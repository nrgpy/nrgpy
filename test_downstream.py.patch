# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/test_downstream.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/test_downstream.py
@@ -15,6 +15,17 @@
 
 
 def import_module(name):
+    """
+
+    Parameters
+    ----------
+    name :
+        
+
+    Returns
+    -------
+
+    """
     # we *only* want to skip if the module is truly not available
     # and NOT just an actual import error because of pandas changes
 
@@ -26,10 +37,22 @@
 
 @pytest.fixture
 def df():
+    """ """
     return DataFrame({"A": [1, 2, 3]})
 
 
 def test_dask(df):
+    """
+
+    Parameters
+    ----------
+    df :
+        
+
+    Returns
+    -------
+
+    """
 
     toolz = import_module("toolz")  # noqa
     dask = import_module("dask")  # noqa
@@ -43,6 +66,17 @@
 
 @pytest.mark.filterwarnings("ignore:Panel class is removed")
 def test_xarray(df):
+    """
+
+    Parameters
+    ----------
+    df :
+        
+
+    Returns
+    -------
+
+    """
 
     xarray = import_module("xarray")  # noqa
 
@@ -52,6 +86,7 @@
 @td.skip_if_no("cftime")
 @td.skip_if_no("xarray", "0.10.4")
 def test_xarray_cftimeindex_nearest():
+    """ """
     # https://github.com/pydata/xarray/issues/3751
     import cftime
     import xarray
@@ -63,6 +98,7 @@
 
 
 def test_oo_optimizable():
+    """ """
     # GH 21071
     subprocess.check_call([sys.executable, "-OO", "-c", "import pandas"])
 
@@ -76,6 +112,7 @@
     "ignore:Using or importing the ABCs from 'collections:DeprecationWarning"
 )
 def test_statsmodels():
+    """ """
 
     statsmodels = import_module("statsmodels")  # noqa
     import statsmodels.api as sm
@@ -88,6 +125,17 @@
 # Cython import warning
 @pytest.mark.filterwarnings("ignore:can't:ImportWarning")
 def test_scikit_learn(df):
+    """
+
+    Parameters
+    ----------
+    df :
+        
+
+    Returns
+    -------
+
+    """
 
     sklearn = import_module("sklearn")  # noqa
     from sklearn import datasets, svm
@@ -102,6 +150,7 @@
 @tm.network
 @pytest.mark.filterwarnings("ignore")
 def test_seaborn():
+    """ """
 
     seaborn = import_module("seaborn")
     tips = seaborn.load_dataset("tips")
@@ -109,6 +158,17 @@
 
 
 def test_pandas_gbq(df):
+    """
+
+    Parameters
+    ----------
+    df :
+        
+
+    Returns
+    -------
+
+    """
 
     pandas_gbq = import_module("pandas_gbq")  # noqa
 
@@ -116,6 +176,7 @@
 @pytest.mark.xfail(reason="0.8.1 tries to import urlencode from pd.io.common")
 @tm.network
 def test_pandas_datareader():
+    """ """
 
     pandas_datareader = import_module("pandas_datareader")  # noqa
     pandas_datareader.DataReader("F", "quandl", "2017-01-01", "2017-02-01")
@@ -124,6 +185,7 @@
 # importing from pandas, Cython import warning
 @pytest.mark.filterwarnings("ignore:can't resolve:ImportWarning")
 def test_geopandas():
+    """ """
 
     geopandas = import_module("geopandas")  # noqa
     fp = geopandas.datasets.get_path("naturalearth_lowres")
@@ -134,6 +196,17 @@
 @pytest.mark.filterwarnings("ignore:can't resolve:ImportWarning")
 @pytest.mark.filterwarnings("ignore:RangeIndex.* is deprecated:DeprecationWarning")
 def test_pyarrow(df):
+    """
+
+    Parameters
+    ----------
+    df :
+        
+
+    Returns
+    -------
+
+    """
 
     pyarrow = import_module("pyarrow")  # noqa
     table = pyarrow.Table.from_pandas(df)
@@ -142,6 +215,7 @@
 
 
 def test_missing_required_dependency():
+    """ """
     # GH 23868
     # To ensure proper isolation, we pass these flags
     # -S : disable site-packages
