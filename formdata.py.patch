# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/requests_toolbelt/utils/formdata.py
+++ b/..//venv/lib/python3.8/site-packages/requests_toolbelt/utils/formdata.py
@@ -9,20 +9,20 @@
 
 def urlencode(query, *args, **kwargs):
     """Handle nested form-data queries and serialize them appropriately.
-
+    
     There are times when a website expects a nested form data query to be sent
     but, the standard library's urlencode function does not appropriately
     handle the nested structures. In that case, you need this function which
     will flatten the structure first and then properly encode it for you.
-
+    
     When using this to send data in the body of a request, make sure you
     specify the appropriate Content-Type header for the request.
-
+    
     .. code-block:: python
-
+    
         import requests
         from requests_toolbelt.utils import formdata
-
+    
         query = {
            'my_dict': {
                'foo': 'bar',
@@ -30,7 +30,7 @@
             },
             'a': 'b',
         }
-
+    
         resp = requests.get(url, params=formdata.urlencode(query))
         # or
         resp = requests.post(
@@ -40,14 +40,14 @@
                 'Content-Type': 'application/x-www-form-urlencoded'
             },
         )
-
+    
     Similarly, you can specify a list of nested tuples, e.g.,
-
+    
     .. code-block:: python
-
+    
         import requests
         from requests_toolbelt.utils import formdata
-
+    
         query = [
             ('my_list', [
                 ('foo', 'bar'),
@@ -55,7 +55,7 @@
             ]),
             ('a', 'b'),
         ]
-
+    
         resp = requests.get(url, params=formdata.urlencode(query))
         # or
         resp = requests.post(
@@ -65,12 +65,25 @@
                 'Content-Type': 'application/x-www-form-urlencoded'
             },
         )
-
+    
     For additional parameter and return information, see the official
     `urlencode`_ documentation.
-
+    
     .. _urlencode:
         https://docs.python.org/3/library/urllib.parse.html#urllib.parse.urlencode
+
+    Parameters
+    ----------
+    query :
+        
+    *args :
+        
+    **kwargs :
+        
+
+    Returns
+    -------
+
     """
     expand_classes = (dict, list, tuple)
     original_query_list = _to_kv_list(query)
@@ -87,16 +100,49 @@
 
 
 def _to_kv_list(dict_or_list):
+    """
+
+    Parameters
+    ----------
+    dict_or_list :
+        
+
+    Returns
+    -------
+
+    """
     if hasattr(dict_or_list, 'items'):
         return list(dict_or_list.items())
     return dict_or_list
 
 
 def _is_two_tuple(item):
+    """
+
+    Parameters
+    ----------
+    item :
+        
+
+    Returns
+    -------
+
+    """
     return isinstance(item, (list, tuple)) and len(item) == 2
 
 
 def _expand_query_values(original_query_list):
+    """
+
+    Parameters
+    ----------
+    original_query_list :
+        
+
+    Returns
+    -------
+
+    """
     query_list = []
     for key, value in original_query_list:
         if isinstance(value, basestring):
