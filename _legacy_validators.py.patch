# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/jsonschema/_legacy_validators.py
+++ b/..//venv/lib/python3.8/site-packages/jsonschema/_legacy_validators.py
@@ -4,6 +4,23 @@
 
 
 def dependencies_draft3(validator, dependencies, instance, schema):
+    """
+
+    Parameters
+    ----------
+    validator :
+        
+    dependencies :
+        
+    instance :
+        
+    schema :
+        
+
+    Returns
+    -------
+
+    """
     if not validator.is_type(instance, "object"):
         return
 
@@ -29,6 +46,23 @@
 
 
 def disallow_draft3(validator, disallow, instance, schema):
+    """
+
+    Parameters
+    ----------
+    validator :
+        
+    disallow :
+        
+    instance :
+        
+    schema :
+        
+
+    Returns
+    -------
+
+    """
     for disallowed in _utils.ensure_list(disallow):
         if validator.is_valid(instance, {"type": [disallowed]}):
             yield ValidationError(
@@ -37,6 +71,23 @@
 
 
 def extends_draft3(validator, extends, instance, schema):
+    """
+
+    Parameters
+    ----------
+    validator :
+        
+    extends :
+        
+    instance :
+        
+    schema :
+        
+
+    Returns
+    -------
+
+    """
     if validator.is_type(extends, "object"):
         for error in validator.descend(instance, extends):
             yield error
@@ -47,6 +98,23 @@
 
 
 def items_draft3_draft4(validator, items, instance, schema):
+    """
+
+    Parameters
+    ----------
+    validator :
+        
+    items :
+        
+    instance :
+        
+    schema :
+        
+
+    Returns
+    -------
+
+    """
     if not validator.is_type(instance, "array"):
         return
 
@@ -63,6 +131,23 @@
 
 
 def minimum_draft3_draft4(validator, minimum, instance, schema):
+    """
+
+    Parameters
+    ----------
+    validator :
+        
+    minimum :
+        
+    instance :
+        
+    schema :
+        
+
+    Returns
+    -------
+
+    """
     if not validator.is_type(instance, "number"):
         return
 
@@ -80,6 +165,23 @@
 
 
 def maximum_draft3_draft4(validator, maximum, instance, schema):
+    """
+
+    Parameters
+    ----------
+    validator :
+        
+    maximum :
+        
+    instance :
+        
+    schema :
+        
+
+    Returns
+    -------
+
+    """
     if not validator.is_type(instance, "number"):
         return
 
@@ -97,6 +199,23 @@
 
 
 def properties_draft3(validator, properties, instance, schema):
+    """
+
+    Parameters
+    ----------
+    validator :
+        
+    properties :
+        
+    instance :
+        
+    schema :
+        
+
+    Returns
+    -------
+
+    """
     if not validator.is_type(instance, "object"):
         return
 
@@ -123,6 +242,23 @@
 
 
 def type_draft3(validator, types, instance, schema):
+    """
+
+    Parameters
+    ----------
+    validator :
+        
+    types :
+        
+    instance :
+        
+    schema :
+        
+
+    Returns
+    -------
+
+    """
     types = _utils.ensure_list(types)
 
     all_errors = []
