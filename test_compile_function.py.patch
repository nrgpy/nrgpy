# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/numpy/f2py/tests/test_compile_function.py
+++ b/..//venv/lib/python3.8/site-packages/numpy/f2py/tests/test_compile_function.py
@@ -14,6 +14,7 @@
 
 
 def setup_module():
+    """ """
     if not util.has_c_compiler():
         pytest.skip("Needs C compiler")
     if not util.has_f77_compiler():
@@ -27,6 +28,17 @@
     )
 @pytest.mark.leaks_references(reason="Imported module seems never deleted.")
 def test_f2py_init_compile(extra_args):
+    """
+
+    Parameters
+    ----------
+    extra_args :
+        
+
+    Returns
+    -------
+
+    """
     # flush through the f2py __init__ compile() function code path as a
     # crude test for input handling following migration from
     # exec_command() to subprocess.check_output() in gh-11937
@@ -84,6 +96,7 @@
 
 
 def test_f2py_init_compile_failure():
+    """ """
     # verify an appropriate integer status value returned by
     # f2py.compile() when invalid Fortran is provided
     ret_val = numpy.f2py.compile(b"invalid")
@@ -91,6 +104,7 @@
 
 
 def test_f2py_init_compile_bad_cmd():
+    """ """
     # verify that usage of invalid command in f2py.compile() returns
     # status value of 127 for historic consistency with exec_command()
     # error handling
@@ -112,6 +126,19 @@
         ['program test_f2py\nend program test_f2py',
          b'program test_f2py\nend program test_f2py',])
 def test_compile_from_strings(tmpdir, fsource):
+    """
+
+    Parameters
+    ----------
+    tmpdir :
+        
+    fsource :
+        
+
+    Returns
+    -------
+
+    """
     # Make sure we can compile str and bytes gh-12796
     cwd = os.getcwd()
     try:
