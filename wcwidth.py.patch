# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/wcwidth/wcwidth.py
+++ b/..//venv/lib/python3.8/site-packages/wcwidth/wcwidth.py
@@ -110,14 +110,24 @@
 
 
 def _bisearch(ucs, table):
-    """
-    Auxiliary function for binary search in interval table.
-
+    """Auxiliary function for binary search in interval table.
+    
     :arg int ucs: Ordinal value of unicode character.
     :arg list table: List of starting and ending ranges of ordinal values,
         in form of ``[(start, end), ...]``.
-    :rtype: int
-    :returns: 1 if ordinal value ucs is found within lookup table, else 0.
+
+    Parameters
+    ----------
+    ucs :
+        
+    table :
+        
+
+    Returns
+    -------
+    type
+        1 if ordinal value ucs is found within lookup table, else 0.
+
     """
     lbound = 0
     ubound = len(table) - 1
@@ -138,67 +148,77 @@
 
 @lru_cache(maxsize=1000)
 def wcwidth(wc, unicode_version='auto'):
-    r"""
+    """r"""
     Given one Unicode character, return its printable length on a terminal.
 
-    :param str wc: A single Unicode character.
-    :param str unicode_version: A Unicode version number, such as
+    Parameters
+    ----------
+    str :
+        wc: A single Unicode character.
+    str :
+        unicode_version: A Unicode version number, such as
         ``'6.0.0'``, the list of available version levels may be
         listed by pairing function :func:`list_versions`.
-
+        
         Any version string may be specified without error -- the nearest
         matching version is selected.  When ``latest`` (default), the
         highest Unicode version level is used.
-    :return: The width, in cells, necessary to display the character of
+    wc :
+        
+    unicode_version :
+         (Default value = 'auto')
+
+    Returns
+    -------
+    int
+
+The following have a column width of -1:
+
+    - C0 control characters (U+001 through U+01F).
+
+    - C1 control characters and DEL (U+07F through U+0A0).
+
+The following have a column width of 0:
+
+- Non-spacing and enclosing combining characters (general
+  category code Mn or Me in the Unicode database).
+
+- NULL (``U+0000``).
+
+- COMBINING GRAPHEME JOINER (``U+034F``).
+
+- ZERO WIDTH SPACE (``U+200B``) *through*
+  RIGHT-TO-LEFT MARK (``U+200F``).
+
+- LINE SEPARATOR (``U+2028``) *and*
+  PARAGRAPH SEPARATOR (``U+2029``).
+
+- LEFT-TO-RIGHT EMBEDDING (``U+202A``) *through*
+  RIGHT-TO-LEFT OVERRIDE (``U+202E``).
+
+- WORD JOINER (``U+2060``) *through*
+  INVISIBLE SEPARATOR (``U+2063``).
+
+The following have a column width of 1:
+
+- SOFT HYPHEN (``U+00AD``).
+
+- All remaining characters, including all printable ISO 8859-1
+  and WGL4 characters, Unicode control characters, etc.
+
+The following have a column width of 2:
+
+    - Spacing characters in the East Asian Wide (W) or East Asian
+      Full-width (F) category as defined in Unicode Technical
+      Report #11 have a column width of 2.
+
+     - Some kinds of Emoji or symbols.
+        The width, in cells, necessary to display the character of
         Unicode string character, ``wc``.  Returns 0 if the ``wc`` argument has
         no printable effect on a terminal (such as NUL '\0'), -1 if ``wc`` is
         not printable, or has an indeterminate effect on the terminal, such as
         a control character.  Otherwise, the number of column positions the
         character occupies on a graphic terminal (1 or 2) is returned.
-    :rtype: int
-
-    The following have a column width of -1:
-
-        - C0 control characters (U+001 through U+01F).
-
-        - C1 control characters and DEL (U+07F through U+0A0).
-
-    The following have a column width of 0:
-
-    - Non-spacing and enclosing combining characters (general
-      category code Mn or Me in the Unicode database).
-
-    - NULL (``U+0000``).
-
-    - COMBINING GRAPHEME JOINER (``U+034F``).
-
-    - ZERO WIDTH SPACE (``U+200B``) *through*
-      RIGHT-TO-LEFT MARK (``U+200F``).
-
-    - LINE SEPARATOR (``U+2028``) *and*
-      PARAGRAPH SEPARATOR (``U+2029``).
-
-    - LEFT-TO-RIGHT EMBEDDING (``U+202A``) *through*
-      RIGHT-TO-LEFT OVERRIDE (``U+202E``).
-
-    - WORD JOINER (``U+2060``) *through*
-      INVISIBLE SEPARATOR (``U+2063``).
-
-    The following have a column width of 1:
-
-    - SOFT HYPHEN (``U+00AD``).
-
-    - All remaining characters, including all printable ISO 8859-1
-      and WGL4 characters, Unicode control characters, etc.
-
-    The following have a column width of 2:
-
-        - Spacing characters in the East Asian Wide (W) or East Asian
-          Full-width (F) category as defined in Unicode Technical
-          Report #11 have a column width of 2.
-
-         - Some kinds of Emoji or symbols.
-    """
     # NOTE: created by hand, there isn't anything identifiable other than
     # general Cf category code to identify these, and some characters in Cf
     # category code are of non-zero width.
@@ -220,20 +240,34 @@
 
 
 def wcswidth(pwcs, n=None, unicode_version='auto'):
-    """
-    Given a unicode string, return its printable length on a terminal.
-
-    :param str pwcs: Measure width of given unicode string.
-    :param int n: When ``n`` is None (default), return the length of the
+    """Given a unicode string, return its printable length on a terminal.
+
+    Parameters
+    ----------
+    str :
+        pwcs: Measure width of given unicode string.
+    int :
+        n: When ``n`` is None (default), return the length of the
         entire string, otherwise width the first ``n`` characters specified.
-    :param str unicode_version: An explicit definition of the unicode version
+    str :
+        unicode_version: An explicit definition of the unicode version
         level to use for determination, may be ``auto`` (default), which uses
         the Environment Variable, ``UNICODE_VERSION`` if defined, or the latest
         available unicode version, otherwise.
-    :rtype: int
-    :returns: The width, in cells, necessary to display the first ``n``
+    pwcs :
+        
+    n :
+         (Default value = None)
+    unicode_version :
+         (Default value = 'auto')
+
+    Returns
+    -------
+    type
+        The width, in cells, necessary to display the first ``n``
         characters of the unicode string ``pwcs``.  Returns ``-1`` if
         a non-printable character is encountered.
+
     """
     # pylint: disable=C0103
     #         Invalid argument name "n"
@@ -251,12 +285,20 @@
 
 @lru_cache(maxsize=128)
 def _wcversion_value(ver_string):
-    """
-    Integer-mapped value of given dotted version string.
-
-    :param str ver_string: Unicode version string, of form ``n.n.n``.
-    :rtype: tuple(int)
-    :returns: tuple of digit tuples, ``tuple(int, [...])``.
+    """Integer-mapped value of given dotted version string.
+
+    Parameters
+    ----------
+    str :
+        ver_string: Unicode version string, of form ``n.n.n``.
+    ver_string :
+        
+
+    Returns
+    -------
+    type
+        tuple of digit tuples, ``tuple(int, [...])``.
+
     """
     retval = tuple(map(int, (ver_string.split('.'))))
     return retval
@@ -264,13 +306,28 @@
 
 @lru_cache(maxsize=8)
 def _wcmatch_version(given_version):
-    """
-    Return nearest matching supported Unicode version level.
-
+    """Return nearest matching supported Unicode version level.
+    
     If an exact match is not determined, the nearest lowest version level is
     returned after a warning is emitted.  For example, given supported levels
     ``4.1.0`` and ``5.0.0``, and a version string of ``4.9.9``, then ``4.1.0``
     is selected and returned:
+
+    Parameters
+    ----------
+    str :
+        given_version: given version for compare, may be ``auto``
+        (default), to select Unicode Version from Environment Variable,
+        ``UNICODE_VERSION``. If the environment variable is not set, then the
+        latest is used.
+    given_version :
+        
+
+    Returns
+    -------
+    type
+        unicode string, or non-unicode ``str`` type for python 2
+        when given ``version`` is also type ``str``.
 
     >>> _wcmatch_version('4.9.9')
     '4.1.0'
@@ -278,14 +335,6 @@
     '8.0.0'
     >>> _wcmatch_version('1')
     '4.1.0'
-
-    :param str given_version: given version for compare, may be ``auto``
-        (default), to select Unicode Version from Environment Variable,
-        ``UNICODE_VERSION``. If the environment variable is not set, then the
-        latest is used.
-    :rtype: str
-    :returns: unicode string, or non-unicode ``str`` type for python 2
-        when given ``version`` is also type ``str``.
     """
     # Design note: the choice to return the same type that is given certainly
     # complicates it for python 2 str-type, but allows us to define an api that
