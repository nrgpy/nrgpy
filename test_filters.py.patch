# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/groupby/test_filters.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/groupby/test_filters.py
@@ -7,6 +7,7 @@
 
 
 def test_filter_series():
+    """ """
     s = pd.Series([1, 3, 20, 5, 22, 24, 7])
     expected_odd = pd.Series([1, 3, 5, 7], index=[0, 1, 3, 6])
     expected_even = pd.Series([20, 22, 24], index=[2, 4, 5])
@@ -26,6 +27,7 @@
 
 
 def test_filter_single_column_df():
+    """ """
     df = pd.DataFrame([1, 3, 20, 5, 22, 24, 7])
     expected_odd = pd.DataFrame([1, 3, 5, 7], index=[0, 1, 3, 6])
     expected_even = pd.DataFrame([20, 22, 24], index=[2, 4, 5])
@@ -45,6 +47,7 @@
 
 
 def test_filter_multi_column_df():
+    """ """
     df = pd.DataFrame({"A": [1, 12, 12, 1], "B": [1, 1, 1, 1]})
     grouper = df["A"].apply(lambda x: x % 2)
     grouped = df.groupby(grouper)
@@ -55,6 +58,7 @@
 
 
 def test_filter_mixed_df():
+    """ """
     df = pd.DataFrame({"A": [1, 12, 12, 1], "B": "a b c d".split()})
     grouper = df["A"].apply(lambda x: x % 2)
     grouped = df.groupby(grouper)
@@ -63,6 +67,7 @@
 
 
 def test_filter_out_all_groups():
+    """ """
     s = pd.Series([1, 3, 20, 5, 22, 24, 7])
     grouper = s.apply(lambda x: x % 2)
     grouped = s.groupby(grouper)
@@ -74,6 +79,7 @@
 
 
 def test_filter_out_no_groups():
+    """ """
     s = pd.Series([1, 3, 20, 5, 22, 24, 7])
     grouper = s.apply(lambda x: x % 2)
     grouped = s.groupby(grouper)
@@ -87,6 +93,7 @@
 
 
 def test_filter_out_all_groups_in_df():
+    """ """
     # GH12768
     df = pd.DataFrame({"a": [1, 1, 2], "b": [1, 2, 0]})
     res = df.groupby("a")
@@ -102,7 +109,19 @@
 
 
 def test_filter_condition_raises():
+    """ """
     def raise_if_sum_is_zero(x):
+        """
+
+        Parameters
+        ----------
+        x :
+            
+
+        Returns
+        -------
+
+        """
         if x.sum() == 0:
             raise ValueError
         else:
@@ -117,6 +136,7 @@
 
 
 def test_filter_with_axis_in_groupby():
+    """ """
     # issue 11041
     index = pd.MultiIndex.from_product([range(10), [0, 1]])
     data = pd.DataFrame(np.arange(100).reshape(-1, 20), columns=index, dtype="int64")
@@ -126,6 +146,7 @@
 
 
 def test_filter_bad_shapes():
+    """ """
     df = DataFrame({"A": np.arange(8), "B": list("aabbbbcc"), "C": np.arange(8)})
     s = df["B"]
     g_df = df.groupby("B")
@@ -157,6 +178,7 @@
 
 
 def test_filter_nan_is_false():
+    """ """
     df = DataFrame({"A": np.arange(8), "B": list("aabbbbcc"), "C": np.arange(8)})
     s = df["B"]
     g_df = df.groupby(df["B"])
@@ -168,6 +190,7 @@
 
 
 def test_filter_against_workaround():
+    """ """
     np.random.seed(0)
     # Series of ints
     s = Series(np.random.randint(0, 100, 1000))
@@ -223,6 +246,7 @@
 
 
 def test_filter_using_len():
+    """ """
     # BUG GH4447
     df = DataFrame({"A": np.arange(8), "B": list("aabbbbcc"), "C": np.arange(8)})
     grouped = df.groupby("B")
@@ -250,6 +274,7 @@
 
 
 def test_filter_maintains_ordering():
+    """ """
     # Simple case: index is sequential. #4621
     df = DataFrame(
         {"pid": [1, 1, 1, 2, 2, 3, 3, 3], "tag": [23, 45, 62, 24, 45, 34, 25, 62]}
@@ -294,6 +319,7 @@
 
 
 def test_filter_multiple_timestamp():
+    """ """
     # GH 10114
     df = DataFrame(
         {
@@ -325,6 +351,7 @@
 
 
 def test_filter_and_transform_with_non_unique_int_index():
+    """ """
     # GH4620
     index = [1, 1, 1, 2, 1, 1, 0, 1]
     df = DataFrame(
@@ -368,6 +395,7 @@
 
 
 def test_filter_and_transform_with_multiple_non_unique_int_index():
+    """ """
     # GH4620
     index = [1, 1, 1, 2, 0, 0, 0, 1]
     df = DataFrame(
@@ -411,6 +439,7 @@
 
 
 def test_filter_and_transform_with_non_unique_float_index():
+    """ """
     # GH4620
     index = np.array([1, 1, 1, 2, 1, 1, 0, 1], dtype=float)
     df = DataFrame(
@@ -454,6 +483,7 @@
 
 
 def test_filter_and_transform_with_non_unique_timestamp_index():
+    """ """
     # GH4620
     t0 = Timestamp("2013-09-30 00:05:00")
     t1 = Timestamp("2013-10-30 00:05:00")
@@ -500,6 +530,7 @@
 
 
 def test_filter_and_transform_with_non_unique_string_index():
+    """ """
     # GH4620
     index = list("bbbcbbab")
     df = DataFrame(
@@ -543,6 +574,7 @@
 
 
 def test_filter_has_access_to_grouped_cols():
+    """ """
     df = DataFrame([[1, 2], [1, 3], [5, 6]], columns=["A", "B"])
     g = df.groupby("A")
     # previously didn't have access to col A #????
@@ -551,6 +583,7 @@
 
 
 def test_filter_enforces_scalarness():
+    """ """
     df = pd.DataFrame(
         [
             ["best", "a", "x"],
@@ -568,6 +601,7 @@
 
 
 def test_filter_non_bool_raises():
+    """ """
     df = pd.DataFrame(
         [
             ["best", "a", 1],
@@ -585,6 +619,7 @@
 
 
 def test_filter_dropna_with_empty_groups():
+    """ """
     # GH 10780
     data = pd.Series(np.random.rand(9), index=np.repeat([1, 2, 3], 3))
     groupped = data.groupby(level=0)
