# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/IPython/utils/tokenutil.py
+++ b/..//venv/lib/python3.8/site-packages/IPython/utils/tokenutil.py
@@ -13,7 +13,17 @@
 Token = namedtuple('Token', ['token', 'text', 'start', 'end', 'line'])
 
 def generate_tokens(readline):
-    """wrap generate_tokens to catch EOF errors"""
+    """wrap generate_tokens to catch EOF errors
+
+    Parameters
+    ----------
+    readline :
+        
+
+    Returns
+    -------
+
+    """
     try:
         for token in tokenize.generate_tokens(readline):
             yield token
@@ -25,20 +35,18 @@
     """Return the line in a cell at a given cursor position
     
     Used for calling line-based APIs that don't support multi-line input, yet.
-    
+
     Parameters
     ----------
-    
-    cell: str
+    cell : str
         multiline block of text
-    cursor_pos: integer
-        the cursor position
-    
+    cursor_pos : integer
+        the cursor position (Default value = 0)
+
     Returns
     -------
+
     
-    (line, offset): (string, integer)
-        The line with the current cursor, and the character offset of the start of the line.
     """
     offset = 0
     lines = cell.splitlines(True)
@@ -63,14 +71,18 @@
     
     Function calls are prioritized, so the token for the callable will be returned
     if the cursor is anywhere inside the call.
-    
+
     Parameters
     ----------
+    cell :
+        
+    cursor_pos :
+         (Default value = 0)
+
+    Returns
+    -------
+
     
-    cell : unicode
-        A block of Python code
-    cursor_pos : int
-        The location of the cursor in the block where the token should be found
     """
     names = []
     tokens = []
