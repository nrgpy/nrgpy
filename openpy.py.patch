# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/IPython/utils/openpy.py
+++ b/..//venv/lib/python3.8/site-packages/IPython/utils/openpy.py
@@ -15,11 +15,24 @@
 
 def source_to_unicode(txt, errors='replace', skip_encoding_cookie=True):
     """Converts a bytes string with python source code to unicode.
-
+    
     Unicode strings are passed through unchanged. Byte strings are checked
     for the python source file encoding cookie to determine encoding.
     txt can be either a bytes buffer or a string containing the source
     code.
+
+    Parameters
+    ----------
+    txt :
+        
+    errors :
+         (Default value = 'replace')
+    skip_encoding_cookie :
+         (Default value = True)
+
+    Returns
+    -------
+
     """
     if isinstance(txt, str):
         return txt
@@ -42,6 +55,15 @@
 def strip_encoding_cookie(filelike):
     """Generator to pull lines from a text-mode file, skipping the encoding
     cookie if it is found in the first two lines.
+
+    Parameters
+    ----------
+    filelike :
+        
+
+    Returns
+    -------
+
     """
     it = iter(filelike)
     try:
@@ -59,18 +81,19 @@
 
 def read_py_file(filename, skip_encoding_cookie=True):
     """Read a Python file, using the encoding declared inside the file.
-    
+
     Parameters
     ----------
     filename : str
-      The path to the file to read.
+        The path to the file to read.
     skip_encoding_cookie : bool
-      If True (the default), and the encoding declaration is found in the first
-      two lines, that line will be excluded from the output.
-    
+        If True (the default), and the encoding declaration is found in the first
+        two lines, that line will be excluded from the output.
+
     Returns
     -------
-    A unicode string containing the contents of the file.
+
+    
     """
     with open(filename) as f:   # the open function defined in this module.
         if skip_encoding_cookie:
@@ -80,21 +103,22 @@
 
 def read_py_url(url, errors='replace', skip_encoding_cookie=True):
     """Read a Python file from a URL, using the encoding declared inside the file.
-    
+
     Parameters
     ----------
     url : str
-      The URL from which to fetch the file.
+        The URL from which to fetch the file.
     errors : str
-      How to handle decoding errors in the file. Options are the same as for
-      bytes.decode(), but here 'replace' is the default.
+        How to handle decoding errors in the file. Options are the same as for
+        bytes.decode(), but here 'replace' is the default.
     skip_encoding_cookie : bool
-      If True (the default), and the encoding declaration is found in the first
-      two lines, that line will be excluded from the output.
-    
+        If True (the default), and the encoding declaration is found in the first
+        two lines, that line will be excluded from the output.
+
     Returns
     -------
-    A unicode string containing the contents of the file.
+
+    
     """
     # Deferred import for faster start
     from urllib.request import urlopen 
