# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/rfc3986/builder.py
+++ b/..//venv/lib/python3.8/site-packages/rfc3986/builder.py
@@ -21,12 +21,18 @@
 
 class URIBuilder(object):
     """Object to aid in building up a URI Reference from parts.
-
+    
     .. note::
-
+    
         This object should be instantiated by the user, but it's recommended
         that it is not provided with arguments. Instead, use the available
         method to populate the fields.
+
+    Parameters
+    ----------
+
+    Returns
+    -------
 
     """
 
@@ -67,10 +73,19 @@
     @classmethod
     def from_uri(cls, reference):
         """Initialize the URI builder from another URI.
-
+        
         Takes the given URI reference and creates a new URI builder instance
         populated with the values from the reference. If given a string it will
         try to convert it to a reference before constructing the builder.
+
+        Parameters
+        ----------
+        reference :
+            
+
+        Returns
+        -------
+
         """
         if not isinstance(reference, uri.URIReference):
             reference = uri_reference(reference)
@@ -86,16 +101,23 @@
 
     def add_scheme(self, scheme):
         """Add a scheme to our builder object.
-
+        
         After normalizing, this will generate a new URIBuilder instance with
         the specified scheme and all other attributes the same.
-
-        .. code-block:: python
-
-            >>> URIBuilder().add_scheme('HTTPS')
+        
+        .. code-block:: python
+
+        Parameters
+        ----------
+        scheme :
+            
+
+        Returns
+        -------
+
+        >>> URIBuilder().add_scheme('HTTPS')
             URIBuilder(scheme='https', userinfo=None, host=None, port=None,
                     path=None, query=None, fragment=None)
-
         """
         scheme = normalizers.normalize_scheme(scheme)
         return URIBuilder(
@@ -110,13 +132,23 @@
 
     def add_credentials(self, username, password):
         """Add credentials as the userinfo portion of the URI.
-
-        .. code-block:: python
-
-            >>> URIBuilder().add_credentials('root', 's3crete')
+        
+        .. code-block:: python
+
+        Parameters
+        ----------
+        username :
+            
+        password :
+            
+
+        Returns
+        -------
+
+        >>> URIBuilder().add_credentials('root', 's3crete')
             URIBuilder(scheme=None, userinfo='root:s3crete', host=None,
                     port=None, path=None, query=None, fragment=None)
-
+        
             >>> URIBuilder().add_credentials('root', None)
             URIBuilder(scheme=None, userinfo='root', host=None,
                     port=None, path=None, query=None, fragment=None)
@@ -143,13 +175,20 @@
 
     def add_host(self, host):
         """Add hostname to the URI.
-
-        .. code-block:: python
-
-            >>> URIBuilder().add_host('google.com')
+        
+        .. code-block:: python
+
+        Parameters
+        ----------
+        host :
+            
+
+        Returns
+        -------
+
+        >>> URIBuilder().add_host('google.com')
             URIBuilder(scheme=None, userinfo=None, host='google.com',
                     port=None, path=None, query=None, fragment=None)
-
         """
         return URIBuilder(
             scheme=self.scheme,
@@ -163,17 +202,24 @@
 
     def add_port(self, port):
         """Add port to the URI.
-
-        .. code-block:: python
-
-            >>> URIBuilder().add_port(80)
+        
+        .. code-block:: python
+
+        Parameters
+        ----------
+        port :
+            
+
+        Returns
+        -------
+
+        >>> URIBuilder().add_port(80)
             URIBuilder(scheme=None, userinfo=None, host=None, port='80',
                     path=None, query=None, fragment=None)
-
+        
             >>> URIBuilder().add_port(443)
             URIBuilder(scheme=None, userinfo=None, host=None, port='443',
                     path=None, query=None, fragment=None)
-
         """
         port_int = int(port)
         if port_int < 0:
@@ -202,17 +248,24 @@
 
     def add_path(self, path):
         """Add a path to the URI.
-
-        .. code-block:: python
-
-            >>> URIBuilder().add_path('sigmavirus24/rfc3985')
+        
+        .. code-block:: python
+
+        Parameters
+        ----------
+        path :
+            
+
+        Returns
+        -------
+
+        >>> URIBuilder().add_path('sigmavirus24/rfc3985')
             URIBuilder(scheme=None, userinfo=None, host=None, port=None,
                     path='/sigmavirus24/rfc3986', query=None, fragment=None)
-
+        
             >>> URIBuilder().add_path('/checkout.php')
             URIBuilder(scheme=None, userinfo=None, host=None, port=None,
                     path='/checkout.php', query=None, fragment=None)
-
         """
         if not path.startswith('/'):
             path = '/{}'.format(path)
@@ -229,17 +282,24 @@
 
     def add_query_from(self, query_items):
         """Generate and add a query a dictionary or list of tuples.
-
-        .. code-block:: python
-
-            >>> URIBuilder().add_query_from({'a': 'b c'})
+        
+        .. code-block:: python
+
+        Parameters
+        ----------
+        query_items :
+            
+
+        Returns
+        -------
+
+        >>> URIBuilder().add_query_from({'a': 'b c'})
             URIBuilder(scheme=None, userinfo=None, host=None, port=None,
                     path=None, query='a=b+c', fragment=None)
-
+        
             >>> URIBuilder().add_query_from([('a', 'b c')])
             URIBuilder(scheme=None, userinfo=None, host=None, port=None,
                     path=None, query='a=b+c', fragment=None)
-
         """
         query = normalizers.normalize_query(compat.urlencode(query_items))
 
@@ -255,13 +315,20 @@
 
     def add_query(self, query):
         """Add a pre-formated query string to the URI.
-
-        .. code-block:: python
-
-            >>> URIBuilder().add_query('a=b&c=d')
+        
+        .. code-block:: python
+
+        Parameters
+        ----------
+        query :
+            
+
+        Returns
+        -------
+
+        >>> URIBuilder().add_query('a=b&c=d')
             URIBuilder(scheme=None, userinfo=None, host=None, port=None,
                     path=None, query='a=b&c=d', fragment=None)
-
         """
         return URIBuilder(
             scheme=self.scheme,
@@ -275,13 +342,20 @@
 
     def add_fragment(self, fragment):
         """Add a fragment to the URI.
-
-        .. code-block:: python
-
-            >>> URIBuilder().add_fragment('section-2.6.1')
+        
+        .. code-block:: python
+
+        Parameters
+        ----------
+        fragment :
+            
+
+        Returns
+        -------
+
+        >>> URIBuilder().add_fragment('section-2.6.1')
             URIBuilder(scheme=None, userinfo=None, host=None, port=None,
                     path=None, query=None, fragment='section-2.6.1')
-
         """
         return URIBuilder(
             scheme=self.scheme,
@@ -295,18 +369,23 @@
 
     def finalize(self):
         """Create a URIReference from our builder.
-
-        .. code-block:: python
-
-            >>> URIBuilder().add_scheme('https').add_host('github.com'
+        
+        .. code-block:: python
+
+        Parameters
+        ----------
+
+        Returns
+        -------
+
+        >>> URIBuilder().add_scheme('https').add_host('github.com'
             ...     ).add_path('sigmavirus24/rfc3986').finalize().unsplit()
             'https://github.com/sigmavirus24/rfc3986'
-
+        
             >>> URIBuilder().add_scheme('https').add_host('github.com'
             ...     ).add_path('sigmavirus24/rfc3986').add_credentials(
             ...     'sigmavirus24', 'not-re@l').finalize().unsplit()
             'https://sigmavirus24:not-re%40l@github.com/sigmavirus24/rfc3986'
-
         """
         return uri.URIReference(
             self.scheme,
