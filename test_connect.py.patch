# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/jupyter_client/tests/test_connect.py
+++ b/..//venv/lib/python3.8/site-packages/jupyter_client/tests/test_connect.py
@@ -22,12 +22,26 @@
 
 
 class DummyConsoleApp(JupyterApp, JupyterConsoleApp):
+    """ """
     def initialize(self, argv=[]):
+        """
+
+        Parameters
+        ----------
+        argv :
+             (Default value = [])
+
+        Returns
+        -------
+
+        """
         JupyterApp.initialize(self, argv=argv)
         self.init_connection_file()
 
 class DummyConfigurable(connect.ConnectionFileMixin):
+    """ """
     def initialize(self):
+        """ """
         pass
 
 sample_info = dict(ip='1.2.3.4', transport='ipc',
@@ -42,6 +56,7 @@
 
 
 def test_write_connection_file():
+    """ """
     with TemporaryDirectory() as d:
         cf = os.path.join(d, 'kernel.json')
         connect.write_connection_file(cf, **sample_info)
@@ -53,7 +68,7 @@
 
 
 def test_load_connection_file_session():
-    """test load_connection_file() after """
+    """test load_connection_file() after"""
     session = Session()
     app = DummyConsoleApp(session=Session())
     app.initialize(argv=[])
@@ -70,7 +85,7 @@
 
 
 def test_load_connection_file_session_with_kn():
-    """test load_connection_file() after """
+    """test load_connection_file() after"""
     session = Session()
     app = DummyConsoleApp(session=Session())
     app.initialize(argv=[])
@@ -102,6 +117,7 @@
 
 
 def test_load_connection_info():
+    """ """
     client = KernelClient()
     info = {
         'control_port': 53702,
@@ -121,6 +137,7 @@
 
 
 def test_find_connection_file():
+    """ """
     with TemporaryDirectory() as d:
         cf = 'kernel.json'
         app = DummyConsoleApp(runtime_dir=d, connection_file=cf)
@@ -142,6 +159,7 @@
 
 
 def test_find_connection_file_local():
+    """ """
     with TemporaryWorkingDirectory() as d:
         cf = 'test.json'
         abs_cf = os.path.abspath(cf)
@@ -158,6 +176,7 @@
 
 
 def test_find_connection_file_relative():
+    """ """
     with TemporaryWorkingDirectory() as d:
         cf = 'test.json'
         os.mkdir('subdir')
@@ -175,6 +194,7 @@
 
 
 def test_find_connection_file_abspath():
+    """ """
     with TemporaryDirectory() as d:
         cf = 'absolute.json'
         abs_cf = os.path.abspath(cf)
@@ -185,6 +205,7 @@
 
 
 def test_mixin_record_random_ports():
+    """ """
     with TemporaryDirectory() as d:
         dc = DummyConfigurable(data_dir=d, kernel_name='via-tcp', transport='tcp')
         dc.write_connection_file()
@@ -195,6 +216,7 @@
 
 
 def test_mixin_cleanup_random_ports():
+    """ """
     with TemporaryDirectory() as d:
         dc = DummyConfigurable(data_dir=d, kernel_name='via-tcp', transport='tcp')
         dc.write_connection_file()
@@ -207,8 +229,19 @@
 
 
 def test_secure_write():
+    """ """
     def fetch_win32_permissions(filename):
-        '''Extracts file permissions on windows using icacls'''
+        """Extracts file permissions on windows using icacls
+
+        Parameters
+        ----------
+        filename :
+            
+
+        Returns
+        -------
+
+        """
         role_permissions = {}
         for index, line in enumerate(os.popen("icacls %s" % filename).read().splitlines()):
             if index == 0:
@@ -224,6 +257,17 @@
         return role_permissions
 
     def check_user_only_permissions(fname):
+        """
+
+        Parameters
+        ----------
+        fname :
+            
+
+        Returns
+        -------
+
+        """
         # Windows has it's own permissions ACL patterns
         if os.name == 'nt':
             import win32api
