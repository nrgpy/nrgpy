# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/compat/pickle_compat.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/compat/pickle_compat.py
@@ -18,6 +18,7 @@
 
 
 def load_reduce(self):
+    """ """
     stack = self.stack
     args = stack.pop()
     func = stack[-1]
@@ -59,6 +60,7 @@
 
 
 class _LoadSparseSeries:
+    """ """
     # To load a SparseSeries as a Series[Sparse]
 
     # https://github.com/python/mypy/issues/1020
@@ -77,6 +79,7 @@
 
 
 class _LoadSparseFrame:
+    """ """
     # To load a SparseDataFrame as a DataFrame[Sparse]
 
     # https://github.com/python/mypy/issues/1020
@@ -182,7 +185,21 @@
 
 # error: Name 'pkl._Unpickler' is not defined
 class Unpickler(pkl._Unpickler):  # type: ignore
+    """ """
     def find_class(self, module, name):
+        """
+
+        Parameters
+        ----------
+        module :
+            
+        name :
+            
+
+        Returns
+        -------
+
+        """
         # override superclass
         key = (module, name)
         module, name = _class_locations_map.get(key, key)
@@ -194,6 +211,7 @@
 
 
 def load_newobj(self):
+    """ """
     args = self.stack.pop()
     cls = self.stack[-1]
 
@@ -210,6 +228,7 @@
 
 
 def load_newobj_ex(self):
+    """ """
     kwargs = self.stack.pop()
     args = self.stack.pop()
     cls = self.stack.pop()
@@ -229,14 +248,21 @@
 
 
 def load(fh, encoding: Optional[str] = None, is_verbose: bool = False):
-    """
-    Load a pickle, with a provided encoding,
+    """Load a pickle, with a provided encoding,
 
     Parameters
     ----------
-    fh : a filelike object
-    encoding : an optional encoding
-    is_verbose : show exception output
+    fh :
+        
+    encoding: Optional[str] :
+         (Default value = None)
+    is_verbose: bool :
+         (Default value = False)
+
+    Returns
+    -------
+
+    
     """
     try:
         fh.seek(0)
@@ -258,8 +284,24 @@
     encoding: str = "ASCII",
     errors: str = "strict",
 ):
-    """
-    Analogous to pickle._loads.
+    """Analogous to pickle._loads.
+
+    Parameters
+    ----------
+    bytes_object: bytes :
+        
+    * :
+        
+    fix_imports: bool :
+         (Default value = True)
+    encoding: str :
+         (Default value = "ASCII")
+    errors: str :
+         (Default value = "strict")
+
+    Returns
+    -------
+
     """
     fd = io.BytesIO(bytes_object)
     return Unpickler(
@@ -269,9 +311,7 @@
 
 @contextlib.contextmanager
 def patch_pickle():
-    """
-    Temporarily patch pickle to use our unpickler.
-    """
+    """Temporarily patch pickle to use our unpickler."""
     orig_loads = pkl.loads
     try:
         pkl.loads = loads
