# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/numpy/distutils/command/autodist.py
+++ b/..//venv/lib/python3.8/site-packages/numpy/distutils/command/autodist.py
@@ -6,7 +6,19 @@
 # We put them here since they could be easily reused outside numpy.distutils
 
 def check_inline(cmd):
-    """Return the inline identifier (may be empty)."""
+    """
+
+    Parameters
+    ----------
+    cmd :
+        
+
+    Returns
+    -------
+    type
+        
+
+    """
     cmd._check_compiler()
     body = textwrap.dedent("""
         #ifndef __cplusplus
@@ -29,7 +41,19 @@
 
 
 def check_restrict(cmd):
-    """Return the restrict identifier (may be empty)."""
+    """
+
+    Parameters
+    ----------
+    cmd :
+        
+
+    Returns
+    -------
+    type
+        
+
+    """
     cmd._check_compiler()
     body = textwrap.dedent("""
         static int static_func (char * %(restrict)s a)
@@ -47,7 +71,17 @@
 
 
 def check_compiler_gcc(cmd):
-    """Check if the compiler is GCC."""
+    """Check if the compiler is GCC.
+
+    Parameters
+    ----------
+    cmd :
+        
+
+    Returns
+    -------
+
+    """
 
     cmd._check_compiler()
     body = textwrap.dedent("""
@@ -64,8 +98,23 @@
 
 
 def check_gcc_version_at_least(cmd, major, minor=0, patchlevel=0):
-    """
-    Check that the gcc version is at least the specified version."""
+    """Check that the gcc version is at least the specified version.
+
+    Parameters
+    ----------
+    cmd :
+        
+    major :
+        
+    minor :
+         (Default value = 0)
+    patchlevel :
+         (Default value = 0)
+
+    Returns
+    -------
+
+    """
 
     cmd._check_compiler()
     version = '.'.join([str(major), str(minor), str(patchlevel)])
@@ -88,7 +137,23 @@
 
 
 def check_gcc_function_attribute(cmd, attribute, name):
-    """Return True if the given function attribute is supported."""
+    """
+
+    Parameters
+    ----------
+    cmd :
+        
+    attribute :
+        
+    name :
+        
+
+    Returns
+    -------
+    type
+        
+
+    """
     cmd._check_compiler()
     body = textwrap.dedent("""
         #pragma GCC diagnostic error "-Wattributes"
@@ -110,8 +175,27 @@
 
 def check_gcc_function_attribute_with_intrinsics(cmd, attribute, name, code,
                                                 include):
-    """Return True if the given function attribute is supported with
-    intrinsics."""
+    """
+
+    Parameters
+    ----------
+    cmd :
+        
+    attribute :
+        
+    name :
+        
+    code :
+        
+    include :
+        
+
+    Returns
+    -------
+    type
+        intrinsics.
+
+    """
     cmd._check_compiler()
     body = textwrap.dedent("""
         #include<%s>
@@ -131,7 +215,21 @@
 
 
 def check_gcc_variable_attribute(cmd, attribute):
-    """Return True if the given variable attribute is supported."""
+    """
+
+    Parameters
+    ----------
+    cmd :
+        
+    attribute :
+        
+
+    Returns
+    -------
+    type
+        
+
+    """
     cmd._check_compiler()
     body = textwrap.dedent("""
         #pragma GCC diagnostic error "-Wattributes"
