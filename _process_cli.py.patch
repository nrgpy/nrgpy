# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/IPython/utils/_process_cli.py
+++ b/..//venv/lib/python3.8/site-packages/IPython/utils/_process_cli.py
@@ -23,7 +23,17 @@
 from ._process_common import arg_split
 
 def _find_cmd(cmd):
-    """Find the full path to a command using which."""
+    """Find the full path to a command using which.
+
+    Parameters
+    ----------
+    cmd :
+        
+
+    Returns
+    -------
+
+    """
     paths = System.Environment.GetEnvironmentVariable("PATH").Split(os.pathsep)
     for path in paths:
         filename = os.path.join(path, cmd)
@@ -32,9 +42,17 @@
     raise OSError("command %r not found" % cmd)
 
 def system(cmd):
-    """
-    system(cmd) should work in a cli environment on Mac OSX, Linux,
+    """system(cmd) should work in a cli environment on Mac OSX, Linux,
     and Windows
+
+    Parameters
+    ----------
+    cmd :
+        
+
+    Returns
+    -------
+
     """
     psi = System.Diagnostics.ProcessStartInfo(cmd)
     psi.RedirectStandardOutput = True
@@ -45,9 +63,17 @@
     reg = System.Diagnostics.Process.Start(psi)
 
 def getoutput(cmd):
-    """
-    getoutput(cmd) should work in a cli environment on Mac OSX, Linux,
+    """getoutput(cmd) should work in a cli environment on Mac OSX, Linux,
     and Windows
+
+    Parameters
+    ----------
+    cmd :
+        
+
+    Returns
+    -------
+
     """
     psi = System.Diagnostics.ProcessStartInfo(cmd)
     psi.RedirectStandardOutput = True
@@ -63,8 +89,16 @@
     return output
 
 def check_pid(pid):
-    """
-    Check if a process with the given PID (pid) exists
+    """Check if a process with the given PID (pid) exists
+
+    Parameters
+    ----------
+    pid :
+        
+
+    Returns
+    -------
+
     """
     try:
         System.Diagnostics.Process.GetProcessById(pid)
