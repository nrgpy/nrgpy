# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/extension/base/groupby.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/extension/base/groupby.py
@@ -10,6 +10,17 @@
     """Groupby-specific tests."""
 
     def test_grouping_grouper(self, data_for_grouping):
+        """
+
+        Parameters
+        ----------
+        data_for_grouping :
+            
+
+        Returns
+        -------
+
+        """
         df = pd.DataFrame(
             {"A": ["B", "B", None, None, "A", "A", "B", "C"], "B": data_for_grouping}
         )
@@ -21,6 +32,19 @@
 
     @pytest.mark.parametrize("as_index", [True, False])
     def test_groupby_extension_agg(self, as_index, data_for_grouping):
+        """
+
+        Parameters
+        ----------
+        as_index :
+            
+        data_for_grouping :
+            
+
+        Returns
+        -------
+
+        """
         df = pd.DataFrame({"A": [1, 1, 2, 2, 3, 3, 1, 4], "B": data_for_grouping})
         result = df.groupby("B", as_index=as_index).A.mean()
         _, index = pd.factorize(data_for_grouping, sort=True)
@@ -34,6 +58,17 @@
             self.assert_frame_equal(result, expected)
 
     def test_groupby_extension_no_sort(self, data_for_grouping):
+        """
+
+        Parameters
+        ----------
+        data_for_grouping :
+            
+
+        Returns
+        -------
+
+        """
         df = pd.DataFrame({"A": [1, 1, 2, 2, 3, 3, 1, 4], "B": data_for_grouping})
         result = df.groupby("B", sort=False).A.mean()
         _, index = pd.factorize(data_for_grouping, sort=False)
@@ -43,6 +78,17 @@
         self.assert_series_equal(result, expected)
 
     def test_groupby_extension_transform(self, data_for_grouping):
+        """
+
+        Parameters
+        ----------
+        data_for_grouping :
+            
+
+        Returns
+        -------
+
+        """
         valid = data_for_grouping[~data_for_grouping.isna()]
         df = pd.DataFrame({"A": [1, 1, 3, 3, 1, 4], "B": valid})
 
@@ -52,6 +98,19 @@
         self.assert_series_equal(result, expected)
 
     def test_groupby_extension_apply(self, data_for_grouping, groupby_apply_op):
+        """
+
+        Parameters
+        ----------
+        data_for_grouping :
+            
+        groupby_apply_op :
+            
+
+        Returns
+        -------
+
+        """
         df = pd.DataFrame({"A": [1, 1, 2, 2, 3, 3, 1, 4], "B": data_for_grouping})
         df.groupby("B").apply(groupby_apply_op)
         df.groupby("B").A.apply(groupby_apply_op)
@@ -59,6 +118,17 @@
         df.groupby("A").B.apply(groupby_apply_op)
 
     def test_groupby_apply_identity(self, data_for_grouping):
+        """
+
+        Parameters
+        ----------
+        data_for_grouping :
+            
+
+        Returns
+        -------
+
+        """
         df = pd.DataFrame({"A": [1, 1, 2, 2, 3, 3, 1, 4], "B": data_for_grouping})
         result = df.groupby("A").B.apply(lambda x: x.array)
         expected = pd.Series(
@@ -74,6 +144,17 @@
         self.assert_series_equal(result, expected)
 
     def test_in_numeric_groupby(self, data_for_grouping):
+        """
+
+        Parameters
+        ----------
+        data_for_grouping :
+            
+
+        Returns
+        -------
+
+        """
         df = pd.DataFrame(
             {
                 "A": [1, 1, 2, 2, 3, 3, 1, 4],
