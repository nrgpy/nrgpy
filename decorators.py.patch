# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/IPython/utils/decorators.py
+++ b/..//venv/lib/python3.8/site-packages/IPython/utils/decorators.py
@@ -23,22 +23,45 @@
 
 def flag_calls(func):
     """Wrap a function to detect and flag when it gets called.
-
+    
     This is a decorator which takes a function and wraps it in a function with
     a 'called' attribute. wrapper.called is initialized to False.
-
+    
     The wrapper.called attribute is set to False right before each call to the
     wrapped function, so if the call fails it remains False.  After the call
     completes, wrapper.called is set to True and the output is returned.
+    
+    Testing for truth in wrapper.called allows you to determine if a call to
+    func() was attempted and succeeded.
 
-    Testing for truth in wrapper.called allows you to determine if a call to
-    func() was attempted and succeeded."""
+    Parameters
+    ----------
+    func :
+        
+
+    Returns
+    -------
+
+    """
     
     # don't wrap twice
     if hasattr(func, 'called'):
         return func
 
     def wrapper(*args,**kw):
+        """
+
+        Parameters
+        ----------
+        *args :
+            
+        **kw :
+            
+
+        Returns
+        -------
+
+        """
         wrapper.called = False
         out = func(*args,**kw)
         wrapper.called = True
@@ -53,6 +76,15 @@
     
     This is found by inspecting the AST, so for now it must be used directly
     as @undoc, not as e.g. @decorators.undoc
+
+    Parameters
+    ----------
+    func :
+        
+
+    Returns
+    -------
+
     """
     return func
 
