# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/tornado/test/runtests.py
+++ b/..//venv/lib/python3.8/site-packages/tornado/test/runtests.py
@@ -55,16 +55,40 @@
 
 
 def all():
+    """ """
     return unittest.defaultTestLoader.loadTestsFromNames(TEST_MODULES)
 
 
 def test_runner_factory(stderr):
+    """
+
+    Parameters
+    ----------
+    stderr :
+        
+
+    Returns
+    -------
+
+    """
     class TornadoTextTestRunner(unittest.TextTestRunner):
+        """ """
         def __init__(self, *args, **kwargs):
             kwargs["stream"] = stderr
             super().__init__(*args, **kwargs)
 
         def run(self, test):
+            """
+
+            Parameters
+            ----------
+            test :
+                
+
+            Returns
+            -------
+
+            """
             result = super().run(test)
             if result.skipped:
                 skip_reasons = set(reason for (test, reason) in result.skipped)
@@ -88,6 +112,17 @@
         self.info_count = self.warning_count = self.error_count = 0
 
     def filter(self, record):
+        """
+
+        Parameters
+        ----------
+        record :
+            
+
+        Returns
+        -------
+
+        """
         if record.levelno >= logging.ERROR:
             self.error_count += 1
         elif record.levelno >= logging.WARNING:
@@ -98,19 +133,33 @@
 
 
 class CountingStderr(io.IOBase):
+    """ """
     def __init__(self, real):
         self.real = real
         self.byte_count = 0
 
     def write(self, data):
+        """
+
+        Parameters
+        ----------
+        data :
+            
+
+        Returns
+        -------
+
+        """
         self.byte_count += len(data)
         return self.real.write(data)
 
     def flush(self):
+        """ """
         return self.real.flush()
 
 
 def main():
+    """ """
     # Be strict about most warnings (This is set in our test running
     # scripts to catch import-time warnings, but set it again here to
     # be sure). This also turns on warnings that are ignored by
@@ -189,6 +238,17 @@
     )
 
     def set_locale(x):
+        """
+
+        Parameters
+        ----------
+        x :
+            
+
+        Returns
+        -------
+
+        """
         locale.setlocale(locale.LC_ALL, x)
 
     define("locale", type=str, default=None, callback=set_locale)
