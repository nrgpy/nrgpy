# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/tslibs/test_period_asfreq.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/tslibs/test_period_asfreq.py
@@ -5,6 +5,17 @@
 
 
 def get_freq_code(freqstr: str) -> int:
+    """
+
+    Parameters
+    ----------
+    freqstr: str :
+        
+
+    Returns
+    -------
+
+    """
     off = to_offset(freqstr)
     code = off._period_dtype_code
     return code
@@ -37,6 +48,21 @@
     ],
 )
 def test_intra_day_conversion_factors(freq1, freq2, expected):
+    """
+
+    Parameters
+    ----------
+    freq1 :
+        
+    freq2 :
+        
+    expected :
+        
+
+    Returns
+    -------
+
+    """
     assert (
         period_asfreq(1, get_freq_code(freq1), get_freq_code(freq2), False) == expected
     )
@@ -46,6 +72,19 @@
     "freq,expected", [("A", 0), ("M", 0), ("W", 1), ("D", 0), ("B", 0)]
 )
 def test_period_ordinal_start_values(freq, expected):
+    """
+
+    Parameters
+    ----------
+    freq :
+        
+    expected :
+        
+
+    Returns
+    -------
+
+    """
     # information for Jan. 1, 1970.
     assert period_ordinal(1970, 1, 1, 0, 0, 0, 0, 0, get_freq_code(freq)) == expected
 
@@ -60,6 +99,19 @@
     ],
 )
 def test_period_ordinal_week(dt, expected):
+    """
+
+    Parameters
+    ----------
+    dt :
+        
+    expected :
+        
+
+    Returns
+    -------
+
+    """
     args = dt + (get_freq_code("W"),)
     assert period_ordinal(*args) == expected
 
@@ -82,6 +134,19 @@
     ],
 )
 def test_period_ordinal_business_day(day, expected):
+    """
+
+    Parameters
+    ----------
+    day :
+        
+    expected :
+        
+
+    Returns
+    -------
+
+    """
     # 5000 is PeriodDtypeCode for BusinessDay
     args = (2013, 10, day, 0, 0, 0, 0, 0, 5000)
     assert period_ordinal(*args) == expected
