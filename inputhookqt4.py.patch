# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/IPython/lib/inputhookqt4.py
+++ b/..//venv/lib/python3.8/site-packages/IPython/lib/inputhookqt4.py
@@ -41,21 +41,23 @@
     Parameters
     ----------
     mgr : an InputHookManager
-
+        
     app : Qt Application, optional.
         Running application to use.  If not given, we probe Qt for an
-        existing application object, and create a new one if none is found.
+        existing application object, and create a new one if none is found. (Default value = None)
 
     Returns
     -------
     A pair consisting of a Qt Application (either the one given or the
+        
     one found or created) and a inputhook.
+        
 
     Notes
     -----
     We use a custom input hook instead of PyQt4's default one, as it
     interacts better with the readline packages (issue #481).
-
+    
     The inputhook function works in tandem with a 'pre_prompt_hook'
     which automatically restores the hook as an inputhook in case the
     latter has been temporarily disabled after having intercepted a
@@ -77,15 +79,22 @@
 
     def inputhook_qt4():
         """PyOS_InputHook python hook for Qt4.
-
+        
         Process pending Qt events and if there's no pending keyboard
         input, spend a short slice of time (50ms) running the Qt event
         loop.
-
+        
         As a Python ctypes callback can't raise an exception, we catch
         the KeyboardInterrupt and temporarily deactivate the hook,
         which will let a *second* CTRL+C be processed normally and go
         back to a clean prompt line.
+
+        Parameters
+        ----------
+
+        Returns
+        -------
+
         """
         try:
             allow_CTRL_C()
@@ -160,9 +169,18 @@
 
     def preprompthook_qt4(ishell):
         """'pre_prompt_hook' used to restore the Qt4 input hook
-
+        
         (in case the latter was temporarily deactivated after a
         CTRL+C)
+
+        Parameters
+        ----------
+        ishell :
+            
+
+        Returns
+        -------
+
         """
         global got_kbdint, sigint_timer
 
