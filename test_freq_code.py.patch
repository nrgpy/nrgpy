# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/tseries/frequencies/test_freq_code.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/tseries/frequencies/test_freq_code.py
@@ -9,6 +9,19 @@
     [("D", "D"), ("W", "D"), ("M", "D"), ("S", "S"), ("T", "S"), ("H", "S")],
 )
 def test_get_to_timestamp_base(freqstr, exp_freqstr):
+    """
+
+    Parameters
+    ----------
+    freqstr :
+        
+    exp_freqstr :
+        
+
+    Returns
+    -------
+
+    """
     off = to_offset(freqstr)
     per = Period._from_ordinal(1, off)
     exp_code = to_offset(exp_freqstr)._period_dtype_code
@@ -33,11 +46,35 @@
     ],
 )
 def test_get_attrname_from_abbrev(freqstr, expected):
+    """
+
+    Parameters
+    ----------
+    freqstr :
+        
+    expected :
+        
+
+    Returns
+    -------
+
+    """
     assert Resolution.get_reso_from_freq(freqstr).attrname == expected
 
 
 @pytest.mark.parametrize("freq", ["D", "H", "T", "S", "L", "U", "N"])
 def test_get_freq_roundtrip2(freq):
+    """
+
+    Parameters
+    ----------
+    freq :
+        
+
+    Returns
+    -------
+
+    """
     obj = Resolution.get_reso_from_freq(freq)
     result = _attrname_to_abbrevs[obj.attrname]
     assert freq == result
@@ -55,6 +92,19 @@
     ],
 )
 def test_resolution_bumping(args, expected):
+    """
+
+    Parameters
+    ----------
+    args :
+        
+    expected :
+        
+
+    Returns
+    -------
+
+    """
     # see gh-14378
     off = to_offset(str(args[0]) + args[1])
     assert off.n == expected[0]
@@ -70,6 +120,17 @@
     ],
 )
 def test_cat(args):
+    """
+
+    Parameters
+    ----------
+    args :
+        
+
+    Returns
+    -------
+
+    """
     msg = "Invalid frequency"
 
     with pytest.raises(ValueError, match=msg):
