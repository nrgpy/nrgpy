# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/tornado/test/autoreload_test.py
+++ b/..//venv/lib/python3.8/site-packages/tornado/test/autoreload_test.py
@@ -9,10 +9,13 @@
 
 
 class AutoreloadTest(unittest.TestCase):
+    """ """
     def setUp(self):
+        """ """
         self.path = mkdtemp()
 
     def tearDown(self):
+        """ """
         try:
             shutil.rmtree(self.path)
         except OSError:
@@ -25,21 +28,26 @@
             shutil.rmtree(self.path)
 
     def test_reload_module(self):
-        main = """\
-import os
-import sys
+        """main = """\
+        import os
+        import sys
+        
+        from tornado import autoreload
+        
+        # This import will fail if path is not set up correctly
+        import testapp
+        
+        print('Starting')
+        if 'TESTAPP_STARTED' not in os.environ:
+            os.environ['TESTAPP_STARTED'] = '1'
+            sys.stdout.flush()
+            autoreload._reload()
 
-from tornado import autoreload
+        Parameters
+        ----------
 
-# This import will fail if path is not set up correctly
-import testapp
-
-print('Starting')
-if 'TESTAPP_STARTED' not in os.environ:
-    os.environ['TESTAPP_STARTED'] = '1'
-    sys.stdout.flush()
-    autoreload._reload()
-"""
+        Returns
+        -------
 
         # Create temporary test application
         os.mkdir(os.path.join(self.path, "testapp"))
@@ -64,6 +72,7 @@
         self.assertEqual(out, "Starting\nStarting\n")
 
     def test_reload_wrapper_preservation(self):
+        """ """
         # This test verifies that when `python -m tornado.autoreload`
         # is used on an application that also has an internal
         # autoreload, the reload wrapper is preserved on restart.
