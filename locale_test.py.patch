# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/tornado/test/locale_test.py
+++ b/..//venv/lib/python3.8/site-packages/tornado/test/locale_test.py
@@ -10,24 +10,29 @@
 
 
 class TranslationLoaderTest(unittest.TestCase):
+    """ """
     # TODO: less hacky way to get isolated tests
     SAVE_VARS = ["_translations", "_supported_locales", "_use_gettext"]
 
     def clear_locale_cache(self):
+        """ """
         tornado.locale.Locale._cache = {}
 
     def setUp(self):
+        """ """
         self.saved = {}  # type: dict
         for var in TranslationLoaderTest.SAVE_VARS:
             self.saved[var] = getattr(tornado.locale, var)
         self.clear_locale_cache()
 
     def tearDown(self):
+        """ """
         for k, v in self.saved.items():
             setattr(tornado.locale, k, v)
         self.clear_locale_cache()
 
     def test_csv(self):
+        """ """
         tornado.locale.load_translations(
             os.path.join(os.path.dirname(__file__), "csv_translations")
         )
@@ -36,6 +41,7 @@
         self.assertEqual(locale.translate("school"), u"\u00e9cole")
 
     def test_csv_bom(self):
+        """ """
         with open(
             os.path.join(os.path.dirname(__file__), "csv_translations", "fr_FR.csv"),
             "rb",
@@ -58,6 +64,7 @@
                 shutil.rmtree(tmpdir)
 
     def test_gettext(self):
+        """ """
         tornado.locale.load_gettext_translations(
             os.path.join(os.path.dirname(__file__), "gettext_translations"),
             "tornado_test",
@@ -78,7 +85,9 @@
 
 
 class LocaleDataTest(unittest.TestCase):
+    """ """
     def test_non_ascii_name(self):
+        """ """
         name = tornado.locale.LOCALE_NAMES["es_LA"]["name"]
         self.assertTrue(isinstance(name, unicode_type))
         self.assertEqual(name, u"Espa\u00f1ol")
@@ -86,7 +95,9 @@
 
 
 class EnglishTest(unittest.TestCase):
+    """ """
     def test_format_date(self):
+        """ """
         locale = tornado.locale.get("en_US")
         date = datetime.datetime(2013, 4, 28, 18, 35)
         self.assertEqual(
@@ -134,10 +145,12 @@
         )
 
     def test_friendly_number(self):
+        """ """
         locale = tornado.locale.get("en_US")
         self.assertEqual(locale.friendly_number(1000000), "1,000,000")
 
     def test_list(self):
+        """ """
         locale = tornado.locale.get("en_US")
         self.assertEqual(locale.list([]), "")
         self.assertEqual(locale.list(["A"]), "A")
@@ -145,6 +158,7 @@
         self.assertEqual(locale.list(["A", "B", "C"]), "A, B and C")
 
     def test_format_day(self):
+        """ """
         locale = tornado.locale.get("en_US")
         date = datetime.datetime(2013, 4, 28, 18, 35)
         self.assertEqual(locale.format_day(date=date, dow=True), "Sunday, April 28")
