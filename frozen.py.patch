# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/core/indexes/frozen.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/core/indexes/frozen.py
@@ -15,18 +15,23 @@
 
 
 class FrozenList(PandasObject, list):
-    """
-    Container that doesn't allow setting item *but*
+    """Container that doesn't allow setting item *but*
     because it's technically non-hashable, will be used
     for lookups, appropriately, etc.
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
 
     # Side note: This has to be of type list. Otherwise,
     #            it messes up PyTables type checks.
 
     def union(self, other) -> "FrozenList":
-        """
-        Returns a FrozenList with other concatenated to the end of self.
+        """Returns a FrozenList with other concatenated to the end of self.
 
         Parameters
         ----------
@@ -35,16 +40,15 @@
 
         Returns
         -------
-        FrozenList
-            The collection difference between self and other.
+
+        
         """
         if isinstance(other, tuple):
             other = list(other)
         return type(self)(super().__add__(other))
 
     def difference(self, other) -> "FrozenList":
-        """
-        Returns a FrozenList with elements from other removed from self.
+        """Returns a FrozenList with elements from other removed from self.
 
         Parameters
         ----------
@@ -53,8 +57,8 @@
 
         Returns
         -------
-        FrozenList
-            The collection difference between self and other.
+
+        
         """
         other = set(other)
         temp = [x for x in self if x not in other]
@@ -92,8 +96,18 @@
         return hash(tuple(self))
 
     def _disabled(self, *args, **kwargs):
-        """
-        This method will not function because object is immutable.
+        """This method will not function because object is immutable.
+
+        Parameters
+        ----------
+        *args :
+            
+        **kwargs :
+            
+
+        Returns
+        -------
+
         """
         raise TypeError(f"'{type(self).__name__}' does not support mutable operations.")
 
