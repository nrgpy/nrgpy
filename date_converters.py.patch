# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/io/date_converters.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/io/date_converters.py
@@ -5,12 +5,40 @@
 
 
 def parse_date_time(date_col, time_col):
+    """
+
+    Parameters
+    ----------
+    date_col :
+        
+    time_col :
+        
+
+    Returns
+    -------
+
+    """
     date_col = _maybe_cast(date_col)
     time_col = _maybe_cast(time_col)
     return parsing.try_parse_date_and_time(date_col, time_col)
 
 
 def parse_date_fields(year_col, month_col, day_col):
+    """
+
+    Parameters
+    ----------
+    year_col :
+        
+    month_col :
+        
+    day_col :
+        
+
+    Returns
+    -------
+
+    """
     year_col = _maybe_cast(year_col)
     month_col = _maybe_cast(month_col)
     day_col = _maybe_cast(day_col)
@@ -18,6 +46,27 @@
 
 
 def parse_all_fields(year_col, month_col, day_col, hour_col, minute_col, second_col):
+    """
+
+    Parameters
+    ----------
+    year_col :
+        
+    month_col :
+        
+    day_col :
+        
+    hour_col :
+        
+    minute_col :
+        
+    second_col :
+        
+
+    Returns
+    -------
+
+    """
     year_col = _maybe_cast(year_col)
     month_col = _maybe_cast(month_col)
     day_col = _maybe_cast(day_col)
@@ -30,6 +79,19 @@
 
 
 def generic_parser(parse_func, *cols):
+    """
+
+    Parameters
+    ----------
+    parse_func :
+        
+    *cols :
+        
+
+    Returns
+    -------
+
+    """
     N = _check_columns(cols)
     results = np.empty(N, dtype=object)
 
@@ -41,12 +103,34 @@
 
 
 def _maybe_cast(arr):
+    """
+
+    Parameters
+    ----------
+    arr :
+        
+
+    Returns
+    -------
+
+    """
     if not arr.dtype.type == np.object_:
         arr = np.array(arr, dtype=object)
     return arr
 
 
 def _check_columns(cols):
+    """
+
+    Parameters
+    ----------
+    cols :
+        
+
+    Returns
+    -------
+
+    """
     if not len(cols):
         raise AssertionError("There must be at least 1 column")
 
