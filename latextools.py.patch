# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/IPython/lib/latextools.py
+++ b/..//venv/lib/python3.8/site-packages/IPython/lib/latextools.py
@@ -22,6 +22,7 @@
 class LaTeXTool(SingletonConfigurable):
     """An object to store configuration of the LaTeX tool."""
     def _config_default(self):
+        """ """
         return get_config()
 
     backends = List(
@@ -62,22 +63,23 @@
 
     Parameters
     ----------
-    s : str
-        The raw string containing valid inline LaTeX.
-    encode : bool, optional
-        Should the PNG data base64 encoded to make it JSON'able.
-    backend : {matplotlib, dvipng}
-        Backend for producing PNG data.
-    wrap : bool
-        If true, Automatically wrap `s` as a LaTeX equation.
-    color : string
-        Foreground color name among dvipsnames, e.g. 'Maroon' or on hex RGB
-        format, e.g. '#AA20FA'.
-    scale : float
-        Scale factor for the resulting PNG.
-
-    None is returned when the backend cannot be used.
-
+    s :
+        
+    encode :
+         (Default value = False)
+    backend :
+         (Default value = None)
+    wrap :
+         (Default value = False)
+    color :
+         (Default value = 'Black')
+    scale :
+         (Default value = 1.0)
+
+    Returns
+    -------
+
+    
     """
     s = cast_unicode(s)
     allowed_backends = LaTeXTool.instance().backends
@@ -108,6 +110,23 @@
 
 
 def latex_to_png_mpl(s, wrap, color='Black', scale=1.0):
+    """
+
+    Parameters
+    ----------
+    s :
+        
+    wrap :
+        
+    color :
+         (Default value = 'Black')
+    scale :
+         (Default value = 1.0)
+
+    Returns
+    -------
+
+    """
     try:
         from matplotlib import mathtext
         from pyparsing import ParseFatalException
@@ -130,6 +149,23 @@
 
 
 def latex_to_png_dvipng(s, wrap, color='Black', scale=1.0):
+    """
+
+    Parameters
+    ----------
+    s :
+        
+    wrap :
+        
+    color :
+         (Default value = 'Black')
+    scale :
+         (Default value = 1.0)
+
+    Returns
+    -------
+
+    """
     try:
         find_cmd('latex')
         find_cmd('dvipng')
@@ -164,7 +200,17 @@
 
 
 def kpsewhich(filename):
-    """Invoke kpsewhich command with an argument `filename`."""
+    """Invoke kpsewhich command with an argument `filename`.
+
+    Parameters
+    ----------
+    filename :
+        
+
+    Returns
+    -------
+
+    """
     try:
         find_cmd("kpsewhich")
         proc = subprocess.Popen(
@@ -177,7 +223,19 @@
 
 
 def genelatex(body, wrap):
-    """Generate LaTeX document for dvipng backend."""
+    """Generate LaTeX document for dvipng backend.
+
+    Parameters
+    ----------
+    body :
+        
+    wrap :
+        
+
+    Returns
+    -------
+
+    """
     lt = LaTeXTool.instance()
     breqn = wrap and lt.use_breqn and kpsewhich("breqn.sty")
     yield r'\documentclass{article}'
@@ -208,10 +266,15 @@
 
     Parameters
     ----------
-    s : str
-        The raw string containing valid inline LateX.
-    alt : str
-        The alt text to use for the HTML.
+    s :
+        
+    alt :
+         (Default value = 'image')
+
+    Returns
+    -------
+
+    
     """
     base64_data = latex_to_png(s, encode=True).decode('ascii')
     if base64_data:
