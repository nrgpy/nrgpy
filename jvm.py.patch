# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pygments/lexers/jvm.py
+++ b/..//venv/lib/python3.8/site-packages/pygments/lexers/jvm.py
@@ -25,9 +25,7 @@
 
 
 class JavaLexer(RegexLexer):
-    """
-    For `Java <https://www.oracle.com/technetwork/java/>`_ source code.
-    """
+    """For `Java <https://www.oracle.com/technetwork/java/>`_ source code."""
 
     name = 'Java'
     aliases = ['java']
@@ -100,10 +98,16 @@
 
 
 class AspectJLexer(JavaLexer):
-    """
-    For `AspectJ <http://www.eclipse.org/aspectj/>`_ source code.
-
+    """For `AspectJ <http://www.eclipse.org/aspectj/>`_ source code.
+    
     .. versionadded:: 1.6
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
 
     name = 'AspectJ'
@@ -126,6 +130,17 @@
     aj_inter_type_annotation = {'@type', '@method', '@constructor', '@field'}
 
     def get_tokens_unprocessed(self, text):
+        """
+
+        Parameters
+        ----------
+        text :
+            
+
+        Returns
+        -------
+
+        """
         for index, token, value in JavaLexer.get_tokens_unprocessed(self, text):
             if token is Name and value in self.aj_keywords:
                 yield index, Keyword, value
@@ -139,9 +154,7 @@
 
 
 class ScalaLexer(RegexLexer):
-    """
-    For `Scala <http://www.scala-lang.org>`_ source code.
-    """
+    """For `Scala <http://www.scala-lang.org>`_ source code."""
 
     name = 'Scala'
     aliases = ['scala']
@@ -374,10 +387,16 @@
 
 
 class GosuLexer(RegexLexer):
-    """
-    For Gosu source code.
-
+    """For Gosu source code.
+    
     .. versionadded:: 1.5
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
 
     name = 'Gosu'
@@ -453,10 +472,16 @@
 
 
 class GosuTemplateLexer(Lexer):
-    """
-    For Gosu templates.
-
+    """For Gosu templates.
+    
     .. versionadded:: 1.5
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
 
     name = 'Gosu Template'
@@ -465,16 +490,33 @@
     mimetypes = ['text/x-gosu-template']
 
     def get_tokens_unprocessed(self, text):
+        """
+
+        Parameters
+        ----------
+        text :
+            
+
+        Returns
+        -------
+
+        """
         lexer = GosuLexer()
         stack = ['templateText']
         yield from lexer.get_tokens_unprocessed(text, stack)
 
 
 class GroovyLexer(RegexLexer):
-    """
-    For `Groovy <http://groovy.codehaus.org/>`_ source code.
-
+    """For `Groovy <http://groovy.codehaus.org/>`_ source code.
+    
     .. versionadded:: 1.5
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
 
     name = 'Groovy'
@@ -538,15 +580,32 @@
     }
 
     def analyse_text(text):
+        """
+
+        Parameters
+        ----------
+        text :
+            
+
+        Returns
+        -------
+
+        """
         return shebang_matches(text, r'groovy')
 
 
 class IokeLexer(RegexLexer):
-    """
-    For `Ioke <http://ioke.org/>`_ (a strongly typed, dynamic,
+    """For `Ioke <http://ioke.org/>`_ (a strongly typed, dynamic,
     prototype based programming language) source.
-
+    
     .. versionadded:: 1.4
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
     name = 'Ioke'
     filenames = ['*.ik']
@@ -733,10 +792,16 @@
 
 
 class ClojureLexer(RegexLexer):
-    """
-    Lexer for `Clojure <http://clojure.org/>`_ source code.
-
+    """Lexer for `Clojure <http://clojure.org/>`_ source code.
+    
     .. versionadded:: 0.11
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
     name = 'Clojure'
     aliases = ['clojure', 'clj']
@@ -871,11 +936,17 @@
 
 
 class ClojureScriptLexer(ClojureLexer):
-    """
-    Lexer for `ClojureScript <http://clojure.org/clojurescript>`_
+    """Lexer for `ClojureScript <http://clojure.org/clojurescript>`_
     source code.
-
+    
     .. versionadded:: 2.0
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
     name = 'ClojureScript'
     aliases = ['clojurescript', 'cljs']
@@ -884,11 +955,17 @@
 
 
 class TeaLangLexer(RegexLexer):
-    """
-    For `Tea <http://teatrove.org/>`_ source code. Only used within a
+    """For `Tea <http://teatrove.org/>`_ source code. Only used within a
     TeaTemplateLexer.
-
+    
     .. versionadded:: 1.5
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
 
     flags = re.MULTILINE | re.DOTALL
@@ -931,10 +1008,16 @@
 
 
 class CeylonLexer(RegexLexer):
-    """
-    For `Ceylon <http://ceylon-lang.org/>`_ source code.
-
+    """For `Ceylon <http://ceylon-lang.org/>`_ source code.
+    
     .. versionadded:: 1.6
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
 
     name = 'Ceylon'
@@ -1011,11 +1094,17 @@
 
 
 class KotlinLexer(RegexLexer):
-    """
-    For `Kotlin <http://kotlinlang.org/>`_
+    """For `Kotlin <http://kotlinlang.org/>`_
     source code.
-
+    
     .. versionadded:: 1.5
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
 
     name = 'Kotlin'
@@ -1103,10 +1192,16 @@
 
 
 class XtendLexer(RegexLexer):
-    """
-    For `Xtend <http://xtend-lang.org/>`_ source code.
-
+    """For `Xtend <http://xtend-lang.org/>`_ source code.
+    
     .. versionadded:: 1.6
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
 
     name = 'Xtend'
@@ -1168,10 +1263,16 @@
 
 
 class PigLexer(RegexLexer):
-    """
-    For `Pig Latin <https://pig.apache.org/>`_ source code.
-
+    """For `Pig Latin <https://pig.apache.org/>`_ source code.
+    
     .. versionadded:: 2.0
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
 
     name = 'Pig'
@@ -1235,10 +1336,16 @@
 
 
 class GoloLexer(RegexLexer):
-    """
-    For `Golo <http://golo-lang.org/>`_ source code.
-
+    """For `Golo <http://golo-lang.org/>`_ source code.
+    
     .. versionadded:: 2.0
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
 
     name = 'Golo'
@@ -1348,10 +1455,16 @@
 
 
 class JasminLexer(RegexLexer):
-    """
-    For `Jasmin <http://jasmin.sourceforge.net/>`_ assembly code.
-
+    """For `Jasmin <http://jasmin.sourceforge.net/>`_ assembly code.
+    
     .. versionadded:: 2.0
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
 
     name = 'Jasmin'
@@ -1599,6 +1712,17 @@
     }
 
     def analyse_text(text):
+        """
+
+        Parameters
+        ----------
+        text :
+            
+
+        Returns
+        -------
+
+        """
         score = 0
         if re.search(r'^\s*\.class\s', text, re.MULTILINE):
             score += 0.5
@@ -1612,11 +1736,17 @@
 
 
 class SarlLexer(RegexLexer):
-	"""
-	For `SARL <http://www.sarl.io>`_ source code.
-	
-	.. versionadded:: 2.4
-	"""
+    """For `SARL <http://www.sarl.io>`_ source code.
+    
+    	.. versionadded:: 2.4
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
+    """
 	
 	name = 'SARL'
 	aliases = ['sarl']
