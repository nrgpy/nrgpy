# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pygments/lexers/pawn.py
+++ b/..//venv/lib/python3.8/site-packages/pygments/lexers/pawn.py
@@ -18,10 +18,16 @@
 
 
 class SourcePawnLexer(RegexLexer):
-    """
-    For SourcePawn source code with preprocessor directives.
-
+    """For SourcePawn source code with preprocessor directives.
+    
     .. versionadded:: 1.6
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
     name = 'SourcePawn'
     aliases = ['sp']
@@ -117,6 +123,17 @@
         RegexLexer.__init__(self, **options)
 
     def get_tokens_unprocessed(self, text):
+        """
+
+        Parameters
+        ----------
+        text :
+            
+
+        Returns
+        -------
+
+        """
         for index, token, value in \
                 RegexLexer.get_tokens_unprocessed(self, text):
             if token is Name:
@@ -129,10 +146,16 @@
 
 
 class PawnLexer(RegexLexer):
-    """
-    For Pawn source code.
-
+    """For Pawn source code.
+    
     .. versionadded:: 2.0
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
 
     name = 'Pawn'
@@ -200,6 +223,16 @@
 
     def analyse_text(text):
         """This is basically C. There is a keyword which doesn't exist in C
-        though and is nearly unique to this language."""
+        though and is nearly unique to this language.
+
+        Parameters
+        ----------
+        text :
+            
+
+        Returns
+        -------
+
+        """
         if 'tagof' in text:
             return 0.01
