# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/core/array_algos/masked_reductions.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/core/array_algos/masked_reductions.py
@@ -20,22 +20,25 @@
     skipna: bool = True,
     min_count: int = 0,
 ):
-    """
-    Sum or product for 1D masked array.
+    """Sum or product for 1D masked array.
 
     Parameters
     ----------
-    func : np.sum or np.prod
-    values : np.ndarray
-        Numpy array with the values (can be of any dtype that support the
-        operation).
-    mask : np.ndarray
-        Boolean numpy array (True values indicate missing values).
-    skipna : bool, default True
-        Whether to skip NA.
-    min_count : int, default 0
-        The required number of valid values to perform the operation. If fewer than
-        ``min_count`` non-NA values are present the result will be NA.
+    func: Callable :
+        
+    values: np.ndarray :
+        
+    mask: np.ndarray :
+        
+    skipna: bool :
+         (Default value = True)
+    min_count: int :
+         (Default value = 0)
+
+    Returns
+    -------
+
+    
     """
     if not skipna:
         if mask.any() or check_below_min_count(values.shape, None, min_count):
@@ -53,31 +56,69 @@
 
 
 def sum(values: np.ndarray, mask: np.ndarray, skipna: bool = True, min_count: int = 0):
+    """
+
+    Parameters
+    ----------
+    values: np.ndarray :
+        
+    mask: np.ndarray :
+        
+    skipna: bool :
+         (Default value = True)
+    min_count: int :
+         (Default value = 0)
+
+    Returns
+    -------
+
+    """
     return _sumprod(
         np.sum, values=values, mask=mask, skipna=skipna, min_count=min_count
     )
 
 
 def prod(values: np.ndarray, mask: np.ndarray, skipna: bool = True, min_count: int = 0):
+    """
+
+    Parameters
+    ----------
+    values: np.ndarray :
+        
+    mask: np.ndarray :
+        
+    skipna: bool :
+         (Default value = True)
+    min_count: int :
+         (Default value = 0)
+
+    Returns
+    -------
+
+    """
     return _sumprod(
         np.prod, values=values, mask=mask, skipna=skipna, min_count=min_count
     )
 
 
 def _minmax(func: Callable, values: np.ndarray, mask: np.ndarray, skipna: bool = True):
-    """
-    Reduction for 1D masked array.
+    """Reduction for 1D masked array.
 
     Parameters
     ----------
-    func : np.min or np.max
-    values : np.ndarray
-        Numpy array with the values (can be of any dtype that support the
-        operation).
-    mask : np.ndarray
-        Boolean numpy array (True values indicate missing values).
-    skipna : bool, default True
-        Whether to skip NA.
+    func: Callable :
+        
+    values: np.ndarray :
+        
+    mask: np.ndarray :
+        
+    skipna: bool :
+         (Default value = True)
+
+    Returns
+    -------
+
+    
     """
     if not skipna:
         if mask.any() or not values.size:
@@ -95,8 +136,38 @@
 
 
 def min(values: np.ndarray, mask: np.ndarray, skipna: bool = True):
+    """
+
+    Parameters
+    ----------
+    values: np.ndarray :
+        
+    mask: np.ndarray :
+        
+    skipna: bool :
+         (Default value = True)
+
+    Returns
+    -------
+
+    """
     return _minmax(np.min, values=values, mask=mask, skipna=skipna)
 
 
 def max(values: np.ndarray, mask: np.ndarray, skipna: bool = True):
+    """
+
+    Parameters
+    ----------
+    values: np.ndarray :
+        
+    mask: np.ndarray :
+        
+    skipna: bool :
+         (Default value = True)
+
+    Returns
+    -------
+
+    """
     return _minmax(np.max, values=values, mask=mask, skipna=skipna)
