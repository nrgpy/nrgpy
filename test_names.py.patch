# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/indexes/multi/test_names.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/indexes/multi/test_names.py
@@ -6,15 +6,30 @@
 
 
 def check_level_names(index, names):
+    """
+
+    Parameters
+    ----------
+    index :
+        
+    names :
+        
+
+    Returns
+    -------
+
+    """
     assert [level.name for level in index.levels] == list(names)
 
 
 def test_slice_keep_name():
+    """ """
     x = MultiIndex.from_tuples([("a", "b"), (1, 2), ("c", "d")], names=["x", "y"])
     assert x[1:].names == x.names
 
 
 def test_index_name_retained():
+    """ """
     # GH9857
     result = pd.DataFrame({"x": [1, 2, 6], "y": [2, 2, 8], "z": [-5, 0, 5]})
     result = result.set_index("z")
@@ -27,6 +42,17 @@
 
 
 def test_changing_names(idx):
+    """
+
+    Parameters
+    ----------
+    idx :
+        
+
+    Returns
+    -------
+
+    """
     assert [level.name for level in idx.levels] == ["first", "second"]
 
     view = idx.view()
@@ -49,11 +75,23 @@
 
 
 def test_take_preserve_name(idx):
+    """
+
+    Parameters
+    ----------
+    idx :
+        
+
+    Returns
+    -------
+
+    """
     taken = idx.take([3, 0, 1])
     assert taken.names == idx.names
 
 
 def test_copy_names():
+    """ """
     # Check that adding a "names" parameter to the copy is honored
     # GH14302
     multi_idx = pd.Index([(1, 2), (3, 4)], names=["MyName1", "MyName2"])
@@ -77,6 +115,19 @@
 
 
 def test_names(idx, index_names):
+    """
+
+    Parameters
+    ----------
+    idx :
+        
+    index_names :
+        
+
+    Returns
+    -------
+
+    """
 
     # names are assigned in setup
     assert index_names == ["first", "second"]
@@ -113,6 +164,17 @@
 
 
 def test_duplicate_level_names_access_raises(idx):
+    """
+
+    Parameters
+    ----------
+    idx :
+        
+
+    Returns
+    -------
+
+    """
     # GH19029
     idx.names = ["foo", "foo"]
     with pytest.raises(ValueError, match="name foo occurs multiple times"):
@@ -120,6 +182,7 @@
 
 
 def test_get_names_from_levels():
+    """ """
     idx = pd.MultiIndex.from_product([["a"], [1, 2]], names=["a", "b"])
 
     assert idx.levels[0].name == "a"
@@ -127,6 +190,7 @@
 
 
 def test_setting_names_from_levels_raises():
+    """ """
     idx = pd.MultiIndex.from_product([["a"], [1, 2]], names=["a", "b"])
     with pytest.raises(RuntimeError, match="set_names"):
         idx.levels[0].name = "foo"
