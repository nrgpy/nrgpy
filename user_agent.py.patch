# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/requests_toolbelt/utils/user_agent.py
+++ b/..//venv/lib/python3.8/site-packages/requests_toolbelt/utils/user_agent.py
@@ -6,16 +6,25 @@
 
 def user_agent(name, version, extras=None):
     """Return an internet-friendly user_agent string.
-
+    
     The majority of this code has been wilfully stolen from the equivalent
     function in Requests.
 
-    :param name: The intended name of the user-agent, e.g. "python-requests".
-    :param version: The version of the user-agent, e.g. "0.0.1".
-    :param extras: List of two-item tuples that are added to the user-agent
-        string.
-    :returns: Formatted user-agent string
-    :rtype: str
+    Parameters
+    ----------
+    name :
+        The intended name of the user-agent, e.g. "python-requests".
+    version :
+        The version of the user-agent, e.g. "0.0.1".
+    extras :
+        List of two-item tuples that are added to the user-agent
+        string. (Default value = None)
+
+    Returns
+    -------
+    str
+        Formatted user-agent string
+
     """
     if extras is None:
         extras = []
@@ -30,11 +39,11 @@
 
 class UserAgentBuilder(object):
     """Class to provide a greater level of control than :func:`user_agent`.
-
+    
     This is used by :func:`user_agent` to build its User-Agent string.
-
+    
     .. code-block:: python
-
+    
         user_agent_str = UserAgentBuilder(
                 name='requests-toolbelt',
                 version='17.4.0',
@@ -44,6 +53,12 @@
                 ('requests', '2.14.2'),
                 ('urllib3', '1.21.2'),
             ]).build()
+
+    Parameters
+    ----------
+
+    Returns
+    -------
 
     """
 
@@ -62,18 +77,31 @@
     def build(self):
         """Finalize the User-Agent string.
 
-        :returns:
+        Parameters
+        ----------
+
+        Returns
+        -------
+        str
             Formatted User-Agent string.
-        :rtype:
-            str
+
         """
         return " ".join([self.format_string % piece for piece in self._pieces])
 
     def include_extras(self, extras):
         """Include extra portions of the User-Agent.
 
-        :param list extras:
+        Parameters
+        ----------
+        list :
+            extras:
             list of tuples of extra-name and extra-version
+        extras :
+            
+
+        Returns
+        -------
+
         """
         if any(len(extra) != 2 for extra in extras):
             raise ValueError('Extras should be a sequence of two item tuples.')
@@ -83,9 +111,16 @@
 
     def include_implementation(self):
         """Append the implementation string to the user-agent string.
-
+        
         This adds the the information that you're using CPython 2.7.13 to the
         User-Agent.
+
+        Parameters
+        ----------
+
+        Returns
+        -------
+
         """
         self._pieces.append(_implementation_tuple())
         return self
@@ -98,14 +133,20 @@
 
 def _implementation_tuple():
     """Return the tuple of interpreter name and version.
-
+    
     Returns a string that provides both the name and the version of the Python
     implementation currently running. For example, on CPython 2.7.5 it will
-    return "CPython/2.7.5".
 
-    This function works best on CPython and PyPy: in particular, it probably
-    doesn't work for Jython or IronPython. Future investigation should be done
-    to work out the correct shape of the code for those platforms.
+    Parameters
+    ----------
+
+    Returns
+    -------
+    type
+        This function works best on CPython and PyPy: in particular, it probably
+        doesn't work for Jython or IronPython. Future investigation should be done
+        to work out the correct shape of the code for those platforms.
+
     """
     implementation = platform.python_implementation()
 
@@ -130,10 +171,12 @@
 
 
 def _implementation_string():
+    """ """
     return "%s/%s" % _implementation_tuple()
 
 
 def _platform_tuple():
+    """ """
     try:
         p_system = platform.system()
         p_release = platform.release()
