# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/io/formats/test_to_latex.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/io/formats/test_to_latex.py
@@ -9,7 +9,19 @@
 
 
 class TestToLatex:
+    """ """
     def test_to_latex_filename(self, float_frame):
+        """
+
+        Parameters
+        ----------
+        float_frame :
+            
+
+        Returns
+        -------
+
+        """
         with tm.ensure_clean("test.tex") as path:
             float_frame.to_latex(path)
 
@@ -30,6 +42,17 @@
                 assert df.to_latex() == f.read()
 
     def test_to_latex(self, float_frame):
+        """
+
+        Parameters
+        ----------
+        float_frame :
+            
+
+        Returns
+        -------
+
+        """
         # it works!
         float_frame.to_latex()
 
@@ -61,6 +84,17 @@
         assert withoutindex_result == withoutindex_expected
 
     def test_to_latex_format(self, float_frame):
+        """
+
+        Parameters
+        ----------
+        float_frame :
+            
+
+        Returns
+        -------
+
+        """
         # GH Bug #9402
         float_frame.to_latex(column_format="ccc")
 
@@ -79,6 +113,7 @@
         assert withindex_result == withindex_expected
 
     def test_to_latex_empty(self):
+        """ """
         df = DataFrame()
         result = df.to_latex()
         expected = r"""\begin{tabular}{l}
@@ -102,6 +137,7 @@
         assert result == expected
 
     def test_to_latex_with_formatters(self):
+        """ """
         df = DataFrame(
             {
                 "datetime64": [
@@ -137,6 +173,7 @@
         assert result == expected
 
     def test_to_latex_multiindex(self):
+        """ """
         df = DataFrame({("x", "y"): ["a"]})
         result = df.to_latex()
         expected = r"""\begin{tabular}{ll}
@@ -240,6 +277,7 @@
         assert result == expected
 
     def test_to_latex_multiindex_dupe_level(self):
+        """ """
         # see gh-14484
         #
         # If an index is repeated in subsequent rows, it should be
@@ -263,6 +301,7 @@
         assert result == expected
 
     def test_to_latex_multicolumnrow(self):
+        """ """
         df = pd.DataFrame(
             {
                 ("c1", 0): {x: x for x in range(5)},
@@ -341,6 +380,7 @@
         assert result == expected
 
     def test_to_latex_escape(self):
+        """ """
         a = "a"
         b = "b"
 
@@ -373,6 +413,7 @@
         assert escaped_result == escaped_expected
 
     def test_to_latex_special_escape(self):
+        """ """
         df = DataFrame([r"a\b\c", r"^a^b^c", r"~a~b~c"])
 
         escaped_result = df.to_latex()
@@ -389,6 +430,7 @@
         assert escaped_result == escaped_expected
 
     def test_to_latex_longtable(self):
+        """ """
 
         df = DataFrame({"a": [1, 2], "b": ["b1", "b2"]})
         withindex_result = df.to_latex(longtable=True)
@@ -439,6 +481,7 @@
         assert r"\multicolumn{3}" in with3columns_result
 
     def test_to_latex_caption_label(self):
+        """ """
         # GH 25436
         the_caption = "a table in a \\texttt{table/tabular} environment"
         the_label = "tab:table_tabular"
@@ -501,6 +544,7 @@
         assert result_cl == expected_cl
 
     def test_to_latex_longtable_caption_label(self):
+        """ """
         # GH 25436
         the_caption = "a table in a \\texttt{longtable} environment"
         the_label = "tab:longtable"
@@ -574,6 +618,7 @@
         assert result_cl == expected_cl
 
     def test_to_latex_escape_special_chars(self):
+        """ """
         special_characters = ["&", "%", "$", "#", "_", "{", "}", "~", "^", "\\"]
         df = DataFrame(data=special_characters)
         observed = df.to_latex()
@@ -598,6 +643,7 @@
         assert observed == expected
 
     def test_to_latex_no_header(self):
+        """ """
         # GH 7124
         df = DataFrame({"a": [1, 2], "b": ["b1", "b2"]})
         withindex_result = df.to_latex(header=False)
@@ -623,6 +669,7 @@
         assert withoutindex_result == withoutindex_expected
 
     def test_to_latex_specified_header(self):
+        """ """
         # GH 7124
         df = DataFrame({"a": [1, 2], "b": ["b1", "b2"]})
         withindex_result = df.to_latex(header=["AA", "BB"])
@@ -669,6 +716,17 @@
             df.to_latex(header=["A"])
 
     def test_to_latex_decimal(self, float_frame):
+        """
+
+        Parameters
+        ----------
+        float_frame :
+            
+
+        Returns
+        -------
+
+        """
         # GH 12031
         float_frame.to_latex()
 
@@ -688,6 +746,7 @@
         assert withindex_result == withindex_expected
 
     def test_to_latex_series(self):
+        """ """
         s = Series(["a", "b", "c"])
         withindex_result = s.to_latex()
         withindex_expected = r"""\begin{tabular}{ll}
@@ -703,6 +762,7 @@
         assert withindex_result == withindex_expected
 
     def test_to_latex_bold_rows(self):
+        """ """
         # GH 16707
         df = pd.DataFrame({"a": [1, 2], "b": ["b1", "b2"]})
         observed = df.to_latex(bold_rows=True)
@@ -718,6 +778,7 @@
         assert observed == expected
 
     def test_to_latex_no_bold_rows(self):
+        """ """
         # GH 16707
         df = pd.DataFrame({"a": [1, 2], "b": ["b1", "b2"]})
         observed = df.to_latex(bold_rows=False)
@@ -736,6 +797,21 @@
     @pytest.mark.parametrize("name1", [None, "named1"])
     @pytest.mark.parametrize("axes", [[0], [1], [0, 1]])
     def test_to_latex_multiindex_names(self, name0, name1, axes):
+        """
+
+        Parameters
+        ----------
+        name0 :
+            
+        name1 :
+            
+        axes :
+            
+
+        Returns
+        -------
+
+        """
         # GH 18667
         names = [name0, name1]
         mi = pd.MultiIndex.from_product([[1, 2], [3, 4]])
@@ -770,6 +846,17 @@
 
     @pytest.mark.parametrize("one_row", [True, False])
     def test_to_latex_multiindex_nans(self, one_row):
+        """
+
+        Parameters
+        ----------
+        one_row :
+            
+
+        Returns
+        -------
+
+        """
         # GH 14249
         df = pd.DataFrame({"a": [None, 1], "b": [2, 3], "c": [4, 5]})
         if one_row:
@@ -791,6 +878,7 @@
         assert observed == expected
 
     def test_to_latex_non_string_index(self):
+        """ """
         # GH 19981
         observed = pd.DataFrame([[1, 2, 3]] * 2).set_index([0, 1]).to_latex()
         expected = r"""\begin{tabular}{llr}
@@ -806,6 +894,7 @@
         assert observed == expected
 
     def test_to_latex_midrule_location(self):
+        """ """
         # GH 18326
         df = pd.DataFrame({"a": [1, 2]})
         df.index.name = "foo"
@@ -823,6 +912,7 @@
         assert observed == expected
 
     def test_to_latex_multiindex_empty_name(self):
+        """ """
         # GH 18669
         mi = pd.MultiIndex.from_product([[1, 2]], names=[""])
         df = pd.DataFrame(-1, index=mi, columns=range(4))
@@ -840,6 +930,7 @@
         assert observed == expected
 
     def test_to_latex_float_format_no_fixed_width(self):
+        """ """
 
         # GH 21625
         df = DataFrame({"x": [0.19999]})
@@ -866,6 +957,7 @@
         assert df.to_latex(float_format="%.0f") == expected
 
     def test_to_latex_multindex_header(self):
+        """ """
         # GH 16718
         df = pd.DataFrame({"a": [0], "b": [1], "c": [2], "d": [3]}).set_index(
             ["a", "b"]
