# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/scalar/timestamp/test_comparisons.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/scalar/timestamp/test_comparisons.py
@@ -9,7 +9,9 @@
 
 
 class TestTimestampComparison:
+    """ """
     def test_comparison_dt64_ndarray(self):
+        """ """
         ts = Timestamp.now()
         ts2 = Timestamp("2019-04-05")
         arr = np.array([[ts.asm8, ts2.asm8]], dtype="M8[ns]")
@@ -47,6 +49,19 @@
 
     @pytest.mark.parametrize("reverse", [True, False])
     def test_comparison_dt64_ndarray_tzaware(self, reverse, all_compare_operators):
+        """
+
+        Parameters
+        ----------
+        reverse :
+            
+        all_compare_operators :
+            
+
+        Returns
+        -------
+
+        """
         op = getattr(operator, all_compare_operators.strip("__"))
 
         ts = Timestamp.now("UTC")
@@ -61,6 +76,7 @@
             op(left, right)
 
     def test_comparison_object_array(self):
+        """ """
         # GH#15183
         ts = Timestamp("2011-01-03 00:00:00-0500", tz="US/Eastern")
         other = Timestamp("2011-01-01 00:00:00-0500", tz="US/Eastern")
@@ -85,6 +101,7 @@
             arr < ts
 
     def test_comparison(self):
+        """ """
         # 5-18-2012 00:00:00.000
         stamp = 1337299200000000000
 
@@ -115,6 +132,7 @@
         assert other >= val
 
     def test_compare_invalid(self):
+        """ """
         # GH#8058
         val = Timestamp("20130101 12:01:02")
         assert not val == "foo"
@@ -134,6 +152,17 @@
         assert val != np.int64(1)
 
     def test_cant_compare_tz_naive_w_aware(self, utc_fixture):
+        """
+
+        Parameters
+        ----------
+        utc_fixture :
+            
+
+        Returns
+        -------
+
+        """
         # see GH#1404
         a = Timestamp("3/12/2012")
         b = Timestamp("3/12/2012", tz=utc_fixture)
@@ -169,6 +198,7 @@
         assert not a.to_pydatetime() == b
 
     def test_timestamp_compare_scalars(self):
+        """ """
         # case where ndim == 0
         lhs = np.datetime64(datetime(2013, 12, 6))
         rhs = Timestamp("now")
@@ -189,6 +219,7 @@
             assert result == expected
 
     def test_timestamp_compare_with_early_datetime(self):
+        """ """
         # e.g. datetime.min
         stamp = Timestamp("2012-01-01")
 
@@ -204,6 +235,7 @@
         assert stamp <= datetime(2700, 1, 1)
 
     def test_compare_zerodim_array(self):
+        """ """
         # GH#26916
         ts = Timestamp.now()
         dt64 = np.datetime64("2016-01-01", "ns")
@@ -217,10 +249,12 @@
 
 
 def test_rich_comparison_with_unsupported_type():
+    """ """
     # Comparisons with unsupported objects should return NotImplemented
     # (it previously raised TypeError, see #24011)
 
     class Inf:
+        """ """
         def __lt__(self, o):
             return False
 
