# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/tools/test_to_timedelta.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/tools/test_to_timedelta.py
@@ -9,7 +9,9 @@
 
 
 class TestTimedeltas:
+    """ """
     def test_to_timedelta(self):
+        """ """
 
         result = to_timedelta(["", ""])
         assert isna(result).all()
@@ -58,6 +60,7 @@
         tm.assert_index_equal(result, expected)
 
     def test_to_timedelta_dataframe(self):
+        """ """
         # GH 11776
         arr = np.arange(10).reshape(2, 5)
         df = pd.DataFrame(np.arange(10).reshape(2, 5))
@@ -69,6 +72,7 @@
                     to_timedelta(arg, errors=errors)
 
     def test_to_timedelta_invalid(self):
+        """ """
 
         # bad value for errors parameter
         msg = "errors must be one of"
@@ -122,6 +126,7 @@
         )
 
     def test_to_timedelta_via_apply(self):
+        """ """
         # GH 5458
         expected = Series([np.timedelta64(1, "s")])
         result = Series(["00:00:01"]).apply(to_timedelta)
@@ -131,6 +136,7 @@
         tm.assert_series_equal(result, expected)
 
     def test_to_timedelta_on_missing_values(self):
+        """ """
         # GH5438
         timedelta_NaT = np.timedelta64("NaT")
 
@@ -150,6 +156,7 @@
         assert actual.value == timedelta_NaT.astype("int64")
 
     def test_to_timedelta_float(self):
+        """ """
         # https://github.com/pandas-dev/pandas/issues/25077
         arr = np.arange(0, 1, 1e-6)[-10:]
         result = pd.to_timedelta(arr, unit="s")
@@ -157,17 +164,20 @@
         tm.assert_numpy_array_equal(result.asi8, expected_asi8)
 
     def test_to_timedelta_coerce_strings_unit(self):
+        """ """
         arr = np.array([1, 2, "error"], dtype=object)
         result = pd.to_timedelta(arr, unit="ns", errors="coerce")
         expected = pd.to_timedelta([1, 2, pd.NaT], unit="ns")
         tm.assert_index_equal(result, expected)
 
     def test_to_timedelta_ignore_strings_unit(self):
+        """ """
         arr = np.array([1, 2, "error"], dtype=object)
         result = pd.to_timedelta(arr, unit="ns", errors="ignore")
         tm.assert_numpy_array_equal(result, arr)
 
     def test_to_timedelta_nullable_int64_dtype(self):
+        """ """
         # GH 35574
         expected = Series([timedelta(days=1), timedelta(days=2)])
         result = to_timedelta(Series([1, 2], dtype="Int64"), unit="days")
