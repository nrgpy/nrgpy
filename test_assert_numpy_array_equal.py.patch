# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/util/test_assert_numpy_array_equal.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/util/test_assert_numpy_array_equal.py
@@ -7,17 +7,24 @@
 
 
 def test_assert_numpy_array_equal_shape_mismatch():
-    msg = """numpy array are different
-
-numpy array shapes are different
-\\[left\\]:  \\(2L*,\\)
-\\[right\\]: \\(3L*,\\)"""
+    """msg = """numpy array are different
+    
+    numpy array shapes are different
+    \\[left\\]:  \\(2L*,\\)
+    \\[right\\]: \\(3L*,\\)
+
+    Parameters
+    ----------
+
+    Returns
+    -------
 
     with pytest.raises(AssertionError, match=msg):
         tm.assert_numpy_array_equal(np.array([1, 2]), np.array([3, 4, 5]))
 
 
 def test_assert_numpy_array_equal_bad_type():
+    """ """
     expected = "Expected type"
 
     with pytest.raises(AssertionError, match=expected):
@@ -29,44 +36,76 @@
     [(np.array([1]), 1, "ndarray", "int"), (1, np.array([1]), "int", "ndarray")],
 )
 def test_assert_numpy_array_equal_class_mismatch(a, b, klass1, klass2):
-    msg = f"""numpy array are different
-
-numpy array classes are different
-\\[left\\]:  {klass1}
-\\[right\\]: {klass2}"""
+    """msg = f"""numpy array are different
+    
+    numpy array classes are different
+    \\[left\\]:  {klass1}
+    \\[right\\]: {klass2}
+
+    Parameters
+    ----------
+    a :
+        
+    b :
+        
+    klass1 :
+        
+    klass2 :
+        
+
+    Returns
+    -------
 
     with pytest.raises(AssertionError, match=msg):
         tm.assert_numpy_array_equal(a, b)
 
 
 def test_assert_numpy_array_equal_value_mismatch1():
-    msg = """numpy array are different
-
-numpy array values are different \\(66\\.66667 %\\)
-\\[left\\]:  \\[nan, 2\\.0, 3\\.0\\]
-\\[right\\]: \\[1\\.0, nan, 3\\.0\\]"""
+    """msg = """numpy array are different
+    
+    numpy array values are different \\(66\\.66667 %\\)
+    \\[left\\]:  \\[nan, 2\\.0, 3\\.0\\]
+    \\[right\\]: \\[1\\.0, nan, 3\\.0\\]
+
+    Parameters
+    ----------
+
+    Returns
+    -------
 
     with pytest.raises(AssertionError, match=msg):
         tm.assert_numpy_array_equal(np.array([np.nan, 2, 3]), np.array([1, np.nan, 3]))
 
 
 def test_assert_numpy_array_equal_value_mismatch2():
-    msg = """numpy array are different
-
-numpy array values are different \\(50\\.0 %\\)
-\\[left\\]:  \\[1, 2\\]
-\\[right\\]: \\[1, 3\\]"""
+    """msg = """numpy array are different
+    
+    numpy array values are different \\(50\\.0 %\\)
+    \\[left\\]:  \\[1, 2\\]
+    \\[right\\]: \\[1, 3\\]
+
+    Parameters
+    ----------
+
+    Returns
+    -------
 
     with pytest.raises(AssertionError, match=msg):
         tm.assert_numpy_array_equal(np.array([1, 2]), np.array([1, 3]))
 
 
 def test_assert_numpy_array_equal_value_mismatch3():
-    msg = """numpy array are different
-
-numpy array values are different \\(16\\.66667 %\\)
-\\[left\\]:  \\[\\[1, 2\\], \\[3, 4\\], \\[5, 6\\]\\]
-\\[right\\]: \\[\\[1, 3\\], \\[3, 4\\], \\[5, 6\\]\\]"""
+    """msg = """numpy array are different
+    
+    numpy array values are different \\(16\\.66667 %\\)
+    \\[left\\]:  \\[\\[1, 2\\], \\[3, 4\\], \\[5, 6\\]\\]
+    \\[right\\]: \\[\\[1, 3\\], \\[3, 4\\], \\[5, 6\\]\\]
+
+    Parameters
+    ----------
+
+    Returns
+    -------
 
     with pytest.raises(AssertionError, match=msg):
         tm.assert_numpy_array_equal(
@@ -75,22 +114,34 @@
 
 
 def test_assert_numpy_array_equal_value_mismatch4():
-    msg = """numpy array are different
-
-numpy array values are different \\(50\\.0 %\\)
-\\[left\\]:  \\[1\\.1, 2\\.000001\\]
-\\[right\\]: \\[1\\.1, 2.0\\]"""
+    """msg = """numpy array are different
+    
+    numpy array values are different \\(50\\.0 %\\)
+    \\[left\\]:  \\[1\\.1, 2\\.000001\\]
+    \\[right\\]: \\[1\\.1, 2.0\\]
+
+    Parameters
+    ----------
+
+    Returns
+    -------
 
     with pytest.raises(AssertionError, match=msg):
         tm.assert_numpy_array_equal(np.array([1.1, 2.000001]), np.array([1.1, 2.0]))
 
 
 def test_assert_numpy_array_equal_value_mismatch5():
-    msg = """numpy array are different
-
-numpy array values are different \\(16\\.66667 %\\)
-\\[left\\]:  \\[\\[1, 2\\], \\[3, 4\\], \\[5, 6\\]\\]
-\\[right\\]: \\[\\[1, 3\\], \\[3, 4\\], \\[5, 6\\]\\]"""
+    """msg = """numpy array are different
+    
+    numpy array values are different \\(16\\.66667 %\\)
+    \\[left\\]:  \\[\\[1, 2\\], \\[3, 4\\], \\[5, 6\\]\\]
+    \\[right\\]: \\[\\[1, 3\\], \\[3, 4\\], \\[5, 6\\]\\]
+
+    Parameters
+    ----------
+
+    Returns
+    -------
 
     with pytest.raises(AssertionError, match=msg):
         tm.assert_numpy_array_equal(
@@ -99,11 +150,17 @@
 
 
 def test_assert_numpy_array_equal_value_mismatch6():
-    msg = """numpy array are different
-
-numpy array values are different \\(25\\.0 %\\)
-\\[left\\]:  \\[\\[1, 2\\], \\[3, 4\\]\\]
-\\[right\\]: \\[\\[1, 3\\], \\[3, 4\\]\\]"""
+    """msg = """numpy array are different
+    
+    numpy array values are different \\(25\\.0 %\\)
+    \\[left\\]:  \\[\\[1, 2\\], \\[3, 4\\]\\]
+    \\[right\\]: \\[\\[1, 3\\], \\[3, 4\\]\\]
+
+    Parameters
+    ----------
+
+    Returns
+    -------
 
     with pytest.raises(AssertionError, match=msg):
         tm.assert_numpy_array_equal(
@@ -112,17 +169,24 @@
 
 
 def test_assert_numpy_array_equal_shape_mismatch_override():
-    msg = """Index are different
-
-Index shapes are different
-\\[left\\]:  \\(2L*,\\)
-\\[right\\]: \\(3L*,\\)"""
+    """msg = """Index are different
+    
+    Index shapes are different
+    \\[left\\]:  \\(2L*,\\)
+    \\[right\\]: \\(3L*,\\)
+
+    Parameters
+    ----------
+
+    Returns
+    -------
 
     with pytest.raises(AssertionError, match=msg):
         tm.assert_numpy_array_equal(np.array([1, 2]), np.array([3, 4, 5]), obj="Index")
 
 
 def test_numpy_array_equal_unicode():
+    """ """
     # see gh-20503
     #
     # Test ensures that `tm.assert_numpy_array_equals` raises the right
@@ -140,6 +204,7 @@
 
 
 def test_numpy_array_equal_object():
+    """ """
     a = np.array([Timestamp("2011-01-01"), Timestamp("2011-01-01")])
     b = np.array([Timestamp("2011-01-01"), Timestamp("2011-01-02")])
 
@@ -156,6 +221,19 @@
 @pytest.mark.parametrize("other_type", ["same", "copy"])
 @pytest.mark.parametrize("check_same", ["same", "copy"])
 def test_numpy_array_equal_copy_flag(other_type, check_same):
+    """
+
+    Parameters
+    ----------
+    other_type :
+        
+    check_same :
+        
+
+    Returns
+    -------
+
+    """
     a = np.array([1, 2, 3])
     msg = None
 
@@ -179,6 +257,7 @@
 
 
 def test_numpy_array_equal_contains_na():
+    """ """
     # https://github.com/pandas-dev/pandas/issues/31881
     a = np.array([True, False])
     b = np.array([True, pd.NA], dtype=object)
@@ -194,12 +273,24 @@
 
 
 def test_numpy_array_equal_identical_na(nulls_fixture):
+    """
+
+    Parameters
+    ----------
+    nulls_fixture :
+        
+
+    Returns
+    -------
+
+    """
     a = np.array([nulls_fixture], dtype=object)
 
     tm.assert_numpy_array_equal(a, a)
 
 
 def test_numpy_array_equal_different_na():
+    """ """
     a = np.array([np.nan], dtype=object)
     b = np.array([pd.NA], dtype=object)
 
