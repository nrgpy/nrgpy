# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/testpath/commands.py
+++ b/..//venv/lib/python3.8/site-packages/testpath/commands.py
@@ -12,9 +12,31 @@
 recording_dir = None
 
 def prepend_to_path(dir):
+    """
+
+    Parameters
+    ----------
+    dir :
+        
+
+    Returns
+    -------
+
+    """
     os.environ['PATH'] = dir + os.pathsep + os.environ['PATH']
 
 def remove_from_path(dir):
+    """
+
+    Parameters
+    ----------
+    dir :
+        
+
+    Returns
+    -------
+
+    """
     path_dirs = os.environ['PATH'].split(os.pathsep)
     path_dirs.remove(dir)
     os.environ['PATH'] = os.pathsep.join(path_dirs)
@@ -46,6 +68,13 @@
     
     On Windows, the specified content will be run by the Python interpreter in
     use. On Unix, it should start with a shebang (``#!/path/to/interpreter``).
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
     def __init__(self, name, content=None):
         global recording_dir
@@ -60,6 +89,7 @@
         self.command_dir = tempfile.mkdtemp()
 
     def _copy_exe(self):
+        """ """
         bitness = '64' if (sys.maxsize > 2**32) else '32'
         src = os.path.join(pkgdir, 'cli-%s.exe' % bitness)
         dst = os.path.join(self.command_dir, self.name+'.exe')
@@ -67,6 +97,7 @@
 
     @property
     def _cmd_path(self):
+        """ """
         # Can only be used once commands_dir has been set
         p = os.path.join(self.command_dir, self.name)
         if os.name == 'nt':
@@ -106,6 +137,13 @@
         
         For each time the command was run, the list will contain a dictionary
         with keys argv, env and cwd.
+
+        Parameters
+        ----------
+
+        Returns
+        -------
+
         """
         if recording_dir is None:
             return []
@@ -130,9 +168,20 @@
     
         with assert_calls('git'):
             some_function_wrapping_git()
-            
+    
         with assert_calls('git', ['add', myfile]):
             some_other_function()
+
+    Parameters
+    ----------
+    cmd :
+        
+    args :
+         (Default value = None)
+
+    Returns
+    -------
+
     """
     with MockCommand(cmd) as mc:
         yield
