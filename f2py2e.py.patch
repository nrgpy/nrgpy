# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/numpy/f2py/f2py2e.py
+++ b/..//venv/lib/python3.8/site-packages/numpy/f2py/f2py2e.py
@@ -176,6 +176,17 @@
 
 
 def scaninputline(inputline):
+    """
+
+    Parameters
+    ----------
+    inputline :
+        
+
+    Returns
+    -------
+
+    """
     files, skipfuncs, onlyfuncs, debug = [], [], [], []
     f, f2, f3, f5, f6, f7, f8, f9, f10 = 1, 0, 0, 0, 0, 0, 0, 0, 0
     verbose = 1
@@ -324,6 +335,19 @@
 
 
 def callcrackfortran(files, options):
+    """
+
+    Parameters
+    ----------
+    files :
+        
+    options :
+        
+
+    Returns
+    -------
+
+    """
     rules.options = options
     crackfortran.debug = options['debug']
     crackfortran.verbose = options['verbose']
@@ -360,6 +384,17 @@
 
 
 def buildmodules(lst):
+    """
+
+    Parameters
+    ----------
+    lst :
+        
+
+    Returns
+    -------
+
+    """
     cfuncs.buildcfuncs()
     outmess('Building modules...\n')
     modules, mnames, isusedby = [], [], {}
@@ -394,6 +429,19 @@
 
 
 def dict_append(d_out, d_in):
+    """
+
+    Parameters
+    ----------
+    d_out :
+        
+    d_in :
+        
+
+    Returns
+    -------
+
+    """
     for (k, v) in d_in.items():
         if k not in d_out:
             d_out[k] = []
@@ -404,25 +452,31 @@
 
 
 def run_main(comline_list):
-    """
-    Equivalent to running::
-
+    """Equivalent to running::
+    
         f2py <args>
-
+    
     where ``<args>=string.join(<list>,' ')``, but in Python.  Unless
     ``-h`` is used, this function returns a dictionary containing
     information on generated modules and their dependencies on source
     files.  For example, the command ``f2py -m scalar scalar.f`` can be
     executed from Python as follows
-
+    
     You cannot build extension modules with this function, that is,
     using ``-c`` is not allowed. Use ``compile`` command instead
+
+    Parameters
+    ----------
+    comline_list :
+        
+
+    Returns
+    -------
 
     Examples
     --------
     .. include:: run_main_session.dat
         :literal:
-
     """
     crackfortran.reset_global_f2py_vars()
     f2pydir = os.path.dirname(os.path.abspath(cfuncs.__file__))
@@ -471,8 +525,22 @@
 
 
 def filter_files(prefix, suffix, files, remove_prefix=None):
-    """
-    Filter files by prefix and suffix.
+    """Filter files by prefix and suffix.
+
+    Parameters
+    ----------
+    prefix :
+        
+    suffix :
+        
+    files :
+        
+    remove_prefix :
+         (Default value = None)
+
+    Returns
+    -------
+
     """
     filtered, rest = [], []
     match = re.compile(prefix + r'.*' + suffix + r'\Z').match
@@ -489,14 +557,23 @@
 
 
 def get_prefix(module):
+    """
+
+    Parameters
+    ----------
+    module :
+        
+
+    Returns
+    -------
+
+    """
     p = os.path.dirname(os.path.dirname(module.__file__))
     return p
 
 
 def run_compile():
-    """
-    Do it all in one call!
-    """
+    """Do it all in one call!"""
     import tempfile
 
     i = sys.argv.index('-c')
@@ -665,6 +742,7 @@
 
 
 def main():
+    """ """
     if '--help-link' in sys.argv[1:]:
         sys.argv.remove('--help-link')
         from numpy.distutils.system_info import show_all
