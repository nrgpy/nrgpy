# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/frame/methods/test_select_dtypes.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/frame/methods/test_select_dtypes.py
@@ -9,7 +9,9 @@
 
 
 class TestSelectDtypes:
+    """ """
     def test_select_dtypes_include_using_list_like(self):
+        """ """
         df = DataFrame(
             {
                 "a": list("abc"),
@@ -54,6 +56,7 @@
             df.select_dtypes(include=["period"])
 
     def test_select_dtypes_exclude_using_list_like(self):
+        """ """
         df = DataFrame(
             {
                 "a": list("abc"),
@@ -68,6 +71,7 @@
         tm.assert_frame_equal(re, ee)
 
     def test_select_dtypes_exclude_include_using_list_like(self):
+        """ """
         df = DataFrame(
             {
                 "a": list("abc"),
@@ -91,6 +95,7 @@
         tm.assert_frame_equal(r, e)
 
     def test_select_dtypes_include_using_scalars(self):
+        """ """
         df = DataFrame(
             {
                 "a": list("abc"),
@@ -127,6 +132,7 @@
             df.select_dtypes(include="period")
 
     def test_select_dtypes_exclude_using_scalars(self):
+        """ """
         df = DataFrame(
             {
                 "a": list("abc"),
@@ -155,6 +161,7 @@
             df.select_dtypes(exclude="period")
 
     def test_select_dtypes_include_exclude_using_scalars(self):
+        """ """
         df = DataFrame(
             {
                 "a": list("abc"),
@@ -176,6 +183,7 @@
         tm.assert_frame_equal(ri, ei)
 
     def test_select_dtypes_include_exclude_mixed_scalars_lists(self):
+        """ """
         df = DataFrame(
             {
                 "a": list("abc"),
@@ -201,6 +209,7 @@
         tm.assert_frame_equal(ri, ei)
 
     def test_select_dtypes_duplicate_columns(self):
+        """ """
         # GH20839
         odict = OrderedDict
         df = DataFrame(
@@ -225,6 +234,7 @@
         tm.assert_frame_equal(result, expected)
 
     def test_select_dtypes_not_an_attr_but_still_valid_dtype(self):
+        """ """
         df = DataFrame(
             {
                 "a": list("abc"),
@@ -246,12 +256,14 @@
         tm.assert_frame_equal(r, e)
 
     def test_select_dtypes_empty(self):
+        """ """
         df = DataFrame({"a": list("abc"), "b": list(range(1, 4))})
         msg = "at least one of include or exclude must be nonempty"
         with pytest.raises(ValueError, match=msg):
             df.select_dtypes()
 
     def test_select_dtypes_bad_datetime64(self):
+        """ """
         df = DataFrame(
             {
                 "a": list("abc"),
@@ -269,6 +281,7 @@
             df.select_dtypes(exclude=["datetime64[as]"])
 
     def test_select_dtypes_datetime_with_tz(self):
+        """ """
 
         df2 = DataFrame(
             dict(
@@ -287,6 +300,19 @@
     )
     @pytest.mark.parametrize("arg", ["include", "exclude"])
     def test_select_dtypes_str_raises(self, dtype, arg):
+        """
+
+        Parameters
+        ----------
+        dtype :
+            
+        arg :
+            
+
+        Returns
+        -------
+
+        """
         df = DataFrame(
             {
                 "a": list("abc"),
@@ -305,6 +331,7 @@
             df.select_dtypes(**kwargs)
 
     def test_select_dtypes_bad_arg_raises(self):
+        """ """
         df = DataFrame(
             {
                 "a": list("abc"),
@@ -322,6 +349,7 @@
             df.select_dtypes(["blargy, blarg, blarg"])
 
     def test_select_dtypes_typecodes(self):
+        """ """
         # GH 11990
         df = tm.makeCustomDataframe(30, 3, data_gen_f=lambda x, y: np.random.random())
         expected = df
