# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/jupyter_client/tests/test_client.py
+++ b/..//venv/lib/python3.8/site-packages/jupyter_client/tests/test_client.py
@@ -19,7 +19,9 @@
 TIMEOUT = 30
 
 class TestKernelClient(TestCase):
+    """ """
     def setUp(self):
+        """ """
         self.env_patch = test_env()
         self.env_patch.start()
         self.addCleanup(self.env_patch.stop)
@@ -32,6 +34,7 @@
         self.addCleanup(self.km.shutdown_kernel)
 
     def test_execute_interactive(self):
+        """ """
         kc = self.kc
 
         with capture_output() as io:
@@ -40,11 +43,25 @@
         assert reply['content']['status'] == 'ok'
 
     def _check_reply(self, reply_type, reply):
+        """
+
+        Parameters
+        ----------
+        reply_type :
+            
+        reply :
+            
+
+        Returns
+        -------
+
+        """
         self.assertIsInstance(reply, dict)
         self.assertEqual(reply['header']['msg_type'], reply_type + '_reply')
         self.assertEqual(reply['parent_header']['msg_type'], reply_type + '_request')
 
     def test_history(self):
+        """ """
         kc = self.kc
         msg_id = kc.history(session=0)
         self.assertIsInstance(msg_id, str)
@@ -52,6 +69,7 @@
         self._check_reply('history', reply)
 
     def test_inspect(self):
+        """ """
         kc = self.kc
         msg_id = kc.inspect('who cares')
         self.assertIsInstance(msg_id, str)
@@ -59,6 +77,7 @@
         self._check_reply('inspect', reply)
 
     def test_complete(self):
+        """ """
         kc = self.kc
         msg_id = kc.complete('who cares')
         self.assertIsInstance(msg_id, str)
@@ -66,6 +85,7 @@
         self._check_reply('complete', reply)
 
     def test_kernel_info(self):
+        """ """
         kc = self.kc
         msg_id = kc.kernel_info()
         self.assertIsInstance(msg_id, str)
@@ -73,6 +93,7 @@
         self._check_reply('kernel_info', reply)
 
     def test_comm_info(self):
+        """ """
         kc = self.kc
         msg_id = kc.comm_info()
         self.assertIsInstance(msg_id, str)
@@ -80,6 +101,7 @@
         self._check_reply('comm_info', reply)
 
     def test_shutdown(self):
+        """ """
         kc = self.kc
         msg_id = kc.shutdown()
         self.assertIsInstance(msg_id, str)
