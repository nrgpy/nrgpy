# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/argon2/_legacy.py
+++ b/..//venv/lib/python3.8/site-packages/argon2/_legacy.py
@@ -25,11 +25,31 @@
     hash_len=DEFAULT_HASH_LENGTH,
     type=Type.I,
 ):
-    """
-    Legacy alias for :func:`hash_secret` with default parameters.
-
+    """Legacy alias for :func:`hash_secret` with default parameters.
+    
     .. deprecated:: 16.0.0
         Use :class:`argon2.PasswordHasher` for passwords.
+
+    Parameters
+    ----------
+    password :
+        
+    salt :
+         (Default value = None)
+    time_cost :
+         (Default value = DEFAULT_TIME_COST)
+    memory_cost :
+         (Default value = DEFAULT_MEMORY_COST)
+    parallelism :
+         (Default value = DEFAULT_PARALLELISM)
+    hash_len :
+         (Default value = DEFAULT_HASH_LENGTH)
+    type :
+         (Default value = Type.I)
+
+    Returns
+    -------
+
     """
     if salt is None:
         salt = os.urandom(DEFAULT_RANDOM_SALT_LENGTH)
@@ -47,11 +67,31 @@
     hash_len=DEFAULT_HASH_LENGTH,
     type=Type.I,
 ):
-    """
-    Legacy alias for :func:`hash_secret_raw` with default parameters.
-
+    """Legacy alias for :func:`hash_secret_raw` with default parameters.
+    
     .. deprecated:: 16.0.0
         Use :class:`argon2.PasswordHasher` for passwords.
+
+    Parameters
+    ----------
+    password :
+        
+    salt :
+         (Default value = None)
+    time_cost :
+         (Default value = DEFAULT_TIME_COST)
+    memory_cost :
+         (Default value = DEFAULT_MEMORY_COST)
+    parallelism :
+         (Default value = DEFAULT_PARALLELISM)
+    hash_len :
+         (Default value = DEFAULT_HASH_LENGTH)
+    type :
+         (Default value = Type.I)
+
+    Returns
+    -------
+
     """
     if salt is None:
         salt = os.urandom(DEFAULT_RANDOM_SALT_LENGTH)
@@ -61,10 +101,22 @@
 
 
 def verify_password(hash, password, type=Type.I):
-    """
-    Legacy alias for :func:`verify_secret` with default parameters.
-
+    """Legacy alias for :func:`verify_secret` with default parameters.
+    
     .. deprecated:: 16.0.0
         Use :class:`argon2.PasswordHasher` for passwords.
+
+    Parameters
+    ----------
+    hash :
+        
+    password :
+        
+    type :
+         (Default value = Type.I)
+
+    Returns
+    -------
+
     """
     return verify_secret(hash, password, type)
