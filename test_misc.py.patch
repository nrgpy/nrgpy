# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/indexes/datetimes/test_misc.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/indexes/datetimes/test_misc.py
@@ -12,7 +12,9 @@
 
 
 class TestTimeSeries:
+    """ """
     def test_range_edges(self):
+        """ """
         # GH#13672
         idx = pd.date_range(
             start=Timestamp("1970-01-01 00:00:00.000000001"),
@@ -136,7 +138,9 @@
 
 
 class TestDatetime64:
+    """ """
     def test_datetimeindex_accessors(self):
+        """ """
         dti_naive = pd.date_range(freq="D", start=datetime(1998, 1, 1), periods=365)
         # GH#13303
         dti_tz = pd.date_range(
@@ -296,6 +300,17 @@
         "time_locale", [None] if tm.get_locales() is None else [None] + tm.get_locales()
     )
     def test_datetime_name_accessors(self, time_locale):
+        """
+
+        Parameters
+        ----------
+        time_locale :
+            
+
+        Returns
+        -------
+
+        """
         # Test Monday -> Sunday and January -> December, in that sequence
         if time_locale is None:
             # If the time_locale is None, day-name and month_name should
@@ -373,12 +388,14 @@
         assert np.isnan(dti.month_name(locale=time_locale)[-1])
 
     def test_nanosecond_field(self):
+        """ """
         dti = DatetimeIndex(np.arange(10))
 
         tm.assert_index_equal(dti.nanosecond, pd.Index(np.arange(10, dtype=np.int64)))
 
 
 def test_iter_readonly():
+    """ """
     # GH#28055 ints_to_pydatetime with readonly array
     arr = np.array([np.datetime64("2012-02-15T12:00:00.000000000")])
     arr.setflags(write=False)
@@ -387,6 +404,7 @@
 
 
 def test_week_and_weekofyear_are_deprecated():
+    """ """
     # GH#33595 Deprecate week and weekofyear
     idx = pd.date_range(start="2019-12-29", freq="D", periods=4)
     with tm.assert_produces_warning(FutureWarning):
@@ -396,6 +414,7 @@
 
 
 def test_isocalendar_returns_correct_values_close_to_new_year_with_tz():
+    """ """
     # GH 6538: Check that DatetimeIndex and its TimeStamp elements
     # return the same weekofyear accessor close to new year w/ tz
     dates = ["2013/12/29", "2013/12/30", "2013/12/31"]
