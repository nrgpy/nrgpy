# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/tornado/platform/caresresolver.py
+++ b/..//venv/lib/python3.8/site-packages/tornado/platform/caresresolver.py
@@ -14,26 +14,49 @@
 
 class CaresResolver(Resolver):
     """Name resolver based on the c-ares library.
-
+    
     This is a non-blocking and non-threaded resolver.  It may not produce
     the same results as the system resolver, but can be used for non-blocking
     resolution when threads cannot be used.
-
+    
     c-ares fails to resolve some names when ``family`` is ``AF_UNSPEC``,
     so it is only recommended for use in ``AF_INET`` (i.e. IPv4).  This is
     the default for ``tornado.simple_httpclient``, but other libraries
     may default to ``AF_UNSPEC``.
-
+    
     .. versionchanged:: 5.0
        The ``io_loop`` argument (deprecated since version 4.1) has been removed.
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
 
     def initialize(self) -> None:
+        """ """
         self.io_loop = IOLoop.current()
         self.channel = pycares.Channel(sock_state_cb=self._sock_state_cb)
         self.fds = {}  # type: Dict[int, int]
 
     def _sock_state_cb(self, fd: int, readable: bool, writable: bool) -> None:
+        """
+
+        Parameters
+        ----------
+        fd: int :
+            
+        readable: bool :
+            
+        writable: bool :
+            
+
+        Returns
+        -------
+
+        """
         state = (IOLoop.READ if readable else 0) | (IOLoop.WRITE if writable else 0)
         if not state:
             self.io_loop.remove_handler(fd)
@@ -46,6 +69,19 @@
             self.fds[fd] = state
 
     def _handle_events(self, fd: int, events: int) -> None:
+        """
+
+        Parameters
+        ----------
+        fd: int :
+            
+        events: int :
+            
+
+        Returns
+        -------
+
+        """
         read_fd = pycares.ARES_SOCKET_BAD
         write_fd = pycares.ARES_SOCKET_BAD
         if events & IOLoop.READ:
@@ -58,6 +94,21 @@
     def resolve(
         self, host: str, port: int, family: int = 0
     ) -> "Generator[Any, Any, List[Tuple[int, Any]]]":
+        """
+
+        Parameters
+        ----------
+        host: str :
+            
+        port: int :
+            
+        family: int :
+             (Default value = 0)
+
+        Returns
+        -------
+
+        """
         if is_valid_ip(host):
             addresses = [host]
         else:
