# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/IPython/core/pylabtools.py
+++ b/..//venv/lib/python3.8/site-packages/IPython/core/pylabtools.py
@@ -58,15 +58,20 @@
 
 def getfigs(*fig_nums):
     """Get a list of matplotlib figures by figure numbers.
-
+    
     If no arguments are given, all available figures are returned.  If the
     argument list contains references to invalid figures, a warning is printed
     but the function continues pasting further figures.
 
     Parameters
     ----------
-    figs : tuple
-        A tuple of ints giving the figure numbers of the figures to return.
+    *fig_nums :
+        
+
+    Returns
+    -------
+
+    
     """
     from matplotlib._pylab_helpers import Gcf
     if not fig_nums:
@@ -85,10 +90,21 @@
 
 def figsize(sizex, sizey):
     """Set the default figure size to be [sizex, sizey].
-
+    
     This is just an easy to remember, convenience wrapper that sets::
-
+    
       matplotlib.rcParams['figure.figsize'] = [sizex, sizey]
+
+    Parameters
+    ----------
+    sizex :
+        
+    sizey :
+        
+
+    Returns
+    -------
+
     """
     import matplotlib
     matplotlib.rcParams['figure.figsize'] = [sizex, sizey]
@@ -96,12 +112,26 @@
 
 def print_figure(fig, fmt='png', bbox_inches='tight', **kwargs):
     """Print a figure to an image, and return the resulting file data
-    
-    Returned data will be bytes unless ``fmt='svg'``,
-    in which case it will be unicode.
-    
-    Any keyword args are passed to fig.canvas.print_figure,
-    such as ``quality`` or ``bbox_inches``.
+
+    Parameters
+    ----------
+    fig :
+        
+    fmt :
+         (Default value = 'png')
+    bbox_inches :
+         (Default value = 'tight')
+    **kwargs :
+        
+
+    Returns
+    -------
+    type
+        in which case it will be unicode.
+        
+        Any keyword args are passed to fig.canvas.print_figure,
+        such as ``quality`` or ``bbox_inches``.
+
     """
     # When there's an empty figure, we shouldn't return anything, otherwise we
     # get big blank areas in the qt console.
@@ -136,7 +166,19 @@
     return data
 
 def retina_figure(fig, **kwargs):
-    """format a figure as a pixel-doubled (retina) PNG"""
+    """format a figure as a pixel-doubled (retina) PNG
+
+    Parameters
+    ----------
+    fig :
+        
+    **kwargs :
+        
+
+    Returns
+    -------
+
+    """
     pngdata = print_figure(fig, fmt='retina', **kwargs)
     # Make sure that retina_figure acts just like print_figure and returns
     # None when the figure is empty.
@@ -154,22 +196,36 @@
     Parameters
     ----------
     safe_execfile : function
-      This must be a function with the same interface as the
-      :meth:`safe_execfile` method of IPython.
-
-    Returns
-    -------
-    A function suitable for use as the ``runner`` argument of the %run magic
-    function.
+        This must be a function with the same interface as the
+        :meth:`safe_execfile` method of IPython.
+
+    Returns
+    -------
+
+    
     """
     
     def mpl_execfile(fname,*where,**kw):
         """matplotlib-aware wrapper around safe_execfile.
-
+        
         Its interface is identical to that of the :func:`execfile` builtin.
-
+        
         This is ultimately a call to execfile(), but wrapped in safeties to
-        properly handle interactive rendering."""
+        properly handle interactive rendering.
+
+        Parameters
+        ----------
+        fname :
+            
+        *where :
+            
+        **kw :
+            
+
+        Returns
+        -------
+
+        """
 
         import matplotlib
         import matplotlib.pyplot as plt
@@ -197,7 +253,17 @@
 
 
 def _reshow_nbagg_figure(fig):
-    """reshow an nbagg figure"""
+    """reshow an nbagg figure
+
+    Parameters
+    ----------
+    fig :
+        
+
+    Returns
+    -------
+
+    """
     try:
         reshow = fig.canvas.manager.reshow
     except AttributeError:
@@ -210,13 +276,25 @@
     """Select figure formats for the inline backend.
 
     Parameters
-    ==========
-    shell : InteractiveShell
-        The main IPython instance.
-    formats : str or set
-        One or a set of figure formats to enable: 'png', 'retina', 'jpeg', 'svg', 'pdf'.
-    **kwargs : any
-        Extra keyword arguments to be passed to fig.canvas.print_figure.
+    ----------
+    shell :
+        InteractiveShell
+    The :
+        main IPython instance
+    formats :
+        str or set
+    One :
+        or a set of figure formats to enable
+    kwargs :
+        any
+    Extra :
+        keyword arguments to be passed to fig
+    **kwargs :
+        
+
+    Returns
+    -------
+
     """
     import matplotlib
     from matplotlib.figure import Figure
@@ -266,15 +344,15 @@
     Parameters
     ----------
     gui : str
-        Can be one of ('tk','gtk','wx','qt','qt4','inline','agg').
+        Can be one of ('tk','gtk','wx','qt','qt4','inline','agg'). (Default value = None)
     gui_select : str
         Can be one of ('tk','gtk','wx','qt','qt4','inline').
-        This is any gui already selected by the shell.
-
-    Returns
-    -------
-    A tuple of (gui, backend) where backend is one of ('TkAgg','GTKAgg',
-    'WXAgg','Qt4Agg','module://ipykernel.pylab.backend_inline','agg').
+        This is any gui already selected by the shell. (Default value = None)
+
+    Returns
+    -------
+
+    
     """
 
     import matplotlib
@@ -304,7 +382,17 @@
 
 
 def activate_matplotlib(backend):
-    """Activate the given backend and set interactive to True."""
+    """Activate the given backend and set interactive to True.
+
+    Parameters
+    ----------
+    backend :
+        
+
+    Returns
+    -------
+
+    """
 
     import matplotlib
     matplotlib.interactive(True)
@@ -333,7 +421,17 @@
     Imports matplotlib, pylab, numpy, and everything from pylab and numpy.
     
     Also imports a few names from IPython (figsize, display, getfigs)
-    
+
+    Parameters
+    ----------
+    user_ns :
+        
+    import_all :
+         (Default value = True)
+
+    Returns
+    -------
+
     """
 
     # Import numpy as np/pyplot as plt are conventions we're trying to
@@ -365,9 +463,15 @@
 
     Parameters
     ----------
-    shell : InteractiveShell instance
-
-    backend : matplotlib backend
+    shell :
+        
+    backend :
+        
+
+    Returns
+    -------
+
+    
     """
     # If using our svg payload backend, register the post-execution
     # function that will pick up the results for display.  This can only be
