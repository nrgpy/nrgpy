# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pygments/formatters/rtf.py
+++ b/..//venv/lib/python3.8/site-packages/pygments/formatters/rtf.py
@@ -17,32 +17,38 @@
 
 
 class RtfFormatter(Formatter):
-    """
-    Format tokens as RTF markup. This formatter automatically outputs full RTF
+    """Format tokens as RTF markup. This formatter automatically outputs full RTF
     documents with color information and other useful stuff. Perfect for Copy and
     Paste into Microsoft(R) Word(R) documents.
-
+    
     Please note that ``encoding`` and ``outencoding`` options are ignored.
     The RTF format is ASCII natively, but handles unicode characters correctly
     thanks to escape sequences.
-
+    
     .. versionadded:: 0.6
-
+    
     Additional options accepted:
-
+    
     `style`
         The style to use, can be a string or a Style subclass (default:
         ``'default'``).
-
+    
     `fontface`
         The used font family, for example ``Bitstream Vera Sans``. Defaults to
         some generic font which is supposed to have fixed width.
-
+    
     `fontsize`
         Size of the font used. Size is specified in half points. The
         default is 24 half-points, giving a size 12 font.
+    
+        .. versionadded:: 2.0
 
-        .. versionadded:: 2.0
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
     name = 'RTF'
     aliases = ['rtf']
@@ -65,11 +71,33 @@
         self.fontsize = get_int_opt(options, 'fontsize', 0)
 
     def _escape(self, text):
+        """
+
+        Parameters
+        ----------
+        text :
+            
+
+        Returns
+        -------
+
+        """
         return text.replace('\\', '\\\\') \
                    .replace('{', '\\{') \
                    .replace('}', '\\}')
 
     def _escape_text(self, text):
+        """
+
+        Parameters
+        ----------
+        text :
+            
+
+        Returns
+        -------
+
+        """
         # empty strings, should give a small performance improvement
         if not text:
             return ''
@@ -94,6 +122,19 @@
         return ''.join(buf).replace('\n', '\\par\n')
 
     def format_unencoded(self, tokensource, outfile):
+        """
+
+        Parameters
+        ----------
+        tokensource :
+            
+        outfile :
+            
+
+        Returns
+        -------
+
+        """
         # rtf 1.8 header
         outfile.write('{\\rtf1\\ansi\\uc0\\deff0'
                       '{\\fonttbl{\\f0\\fmodern\\fprq1\\fcharset0%s;}}'
