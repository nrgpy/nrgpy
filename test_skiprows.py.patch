# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/io/parser/test_skiprows.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/io/parser/test_skiprows.py
@@ -17,6 +17,19 @@
 
 @pytest.mark.parametrize("skiprows", [list(range(6)), 6])
 def test_skip_rows_bug(all_parsers, skiprows):
+    """
+
+    Parameters
+    ----------
+    all_parsers :
+        
+    skiprows :
+        
+
+    Returns
+    -------
+
+    """
     # see gh-505
     parser = all_parsers
     text = """#foo,a,b,c
@@ -43,6 +56,17 @@
 
 
 def test_deep_skip_rows(all_parsers):
+    """
+
+    Parameters
+    ----------
+    all_parsers :
+        
+
+    Returns
+    -------
+
+    """
     # see gh-4382
     parser = all_parsers
     data = "a,b,c\n" + "\n".join(
@@ -58,6 +82,17 @@
 
 
 def test_skip_rows_blank(all_parsers):
+    """
+
+    Parameters
+    ----------
+    all_parsers :
+        
+
+    Returns
+    -------
+
+    """
     # see gh-9832
     parser = all_parsers
     text = """#foo,a,b,c
@@ -117,6 +152,23 @@
     ],
 )
 def test_skip_row_with_newline(all_parsers, data, kwargs, expected):
+    """
+
+    Parameters
+    ----------
+    all_parsers :
+        
+    data :
+        
+    kwargs :
+        
+    expected :
+        
+
+    Returns
+    -------
+
+    """
     # see gh-12775 and gh-10911
     parser = all_parsers
     result = parser.read_csv(StringIO(data), **kwargs)
@@ -124,6 +176,17 @@
 
 
 def test_skip_row_with_quote(all_parsers):
+    """
+
+    Parameters
+    ----------
+    all_parsers :
+        
+
+    Returns
+    -------
+
+    """
     # see gh-12775 and gh-10911
     parser = all_parsers
     data = """id,text,num_lines
@@ -165,6 +228,21 @@
     ],
 )
 def test_skip_row_with_newline_and_quote(all_parsers, data, exp_data):
+    """
+
+    Parameters
+    ----------
+    all_parsers :
+        
+    data :
+        
+    exp_data :
+        
+
+    Returns
+    -------
+
+    """
     # see gh-12775 and gh-10911
     parser = all_parsers
     result = parser.read_csv(StringIO(data), skiprows=[1])
@@ -177,6 +255,19 @@
     "line_terminator", ["\n", "\r\n", "\r"]  # "LF"  # "CRLF"  # "CR"
 )
 def test_skiprows_lineterminator(all_parsers, line_terminator):
+    """
+
+    Parameters
+    ----------
+    all_parsers :
+        
+    line_terminator :
+        
+
+    Returns
+    -------
+
+    """
     # see gh-9079
     parser = all_parsers
     data = "\n".join(
@@ -210,6 +301,17 @@
 
 
 def test_skiprows_infield_quote(all_parsers):
+    """
+
+    Parameters
+    ----------
+    all_parsers :
+        
+
+    Returns
+    -------
+
+    """
     # see gh-14459
     parser = all_parsers
     data = 'a"\nb"\na\n1'
@@ -227,6 +329,21 @@
     ],
 )
 def test_skip_rows_callable(all_parsers, kwargs, expected):
+    """
+
+    Parameters
+    ----------
+    all_parsers :
+        
+    kwargs :
+        
+    expected :
+        
+
+    Returns
+    -------
+
+    """
     parser = all_parsers
     data = "a\n1\n2\n3\n4\n5"
 
@@ -235,6 +352,17 @@
 
 
 def test_skip_rows_skip_all(all_parsers):
+    """
+
+    Parameters
+    ----------
+    all_parsers :
+        
+
+    Returns
+    -------
+
+    """
     parser = all_parsers
     data = "a\n1\n2\n3\n4\n5"
     msg = "No columns to parse from file"
@@ -244,6 +372,17 @@
 
 
 def test_skip_rows_bad_callable(all_parsers):
+    """
+
+    Parameters
+    ----------
+    all_parsers :
+        
+
+    Returns
+    -------
+
+    """
     msg = "by zero"
     parser = all_parsers
     data = "a\n1\n2\n3\n4\n5"
