# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/tseries/holiday/test_observance.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/tseries/holiday/test_observance.py
@@ -26,6 +26,17 @@
 
 @pytest.mark.parametrize("day", [_SATURDAY, _SUNDAY])
 def test_next_monday(day):
+    """
+
+    Parameters
+    ----------
+    day :
+        
+
+    Returns
+    -------
+
+    """
     assert next_monday(day) == _MONDAY
 
 
@@ -33,15 +44,40 @@
     "day,expected", [(_SATURDAY, _MONDAY), (_SUNDAY, _TUESDAY), (_MONDAY, _TUESDAY)]
 )
 def test_next_monday_or_tuesday(day, expected):
+    """
+
+    Parameters
+    ----------
+    day :
+        
+    expected :
+        
+
+    Returns
+    -------
+
+    """
     assert next_monday_or_tuesday(day) == expected
 
 
 @pytest.mark.parametrize("day", [_SATURDAY, _SUNDAY])
 def test_previous_friday(day):
+    """
+
+    Parameters
+    ----------
+    day :
+        
+
+    Returns
+    -------
+
+    """
     assert previous_friday(day) == _FRIDAY
 
 
 def test_sunday_to_monday():
+    """ """
     assert sunday_to_monday(_SUNDAY) == _MONDAY
 
 
@@ -49,6 +85,19 @@
     "day,expected", [(_SATURDAY, _FRIDAY), (_SUNDAY, _MONDAY), (_MONDAY, _MONDAY)]
 )
 def test_nearest_workday(day, expected):
+    """
+
+    Parameters
+    ----------
+    day :
+        
+    expected :
+        
+
+    Returns
+    -------
+
+    """
     assert nearest_workday(day) == expected
 
 
@@ -56,6 +105,19 @@
     "day,expected", [(_SATURDAY, _MONDAY), (_SUNDAY, _MONDAY), (_MONDAY, _MONDAY)]
 )
 def test_weekend_to_monday(day, expected):
+    """
+
+    Parameters
+    ----------
+    day :
+        
+    expected :
+        
+
+    Returns
+    -------
+
+    """
     assert weekend_to_monday(day) == expected
 
 
@@ -63,6 +125,19 @@
     "day,expected", [(_SATURDAY, _MONDAY), (_SUNDAY, _MONDAY), (_MONDAY, _TUESDAY)]
 )
 def test_next_workday(day, expected):
+    """
+
+    Parameters
+    ----------
+    day :
+        
+    expected :
+        
+
+    Returns
+    -------
+
+    """
     assert next_workday(day) == expected
 
 
@@ -70,6 +145,19 @@
     "day,expected", [(_SATURDAY, _FRIDAY), (_SUNDAY, _FRIDAY), (_TUESDAY, _MONDAY)]
 )
 def test_previous_workday(day, expected):
+    """
+
+    Parameters
+    ----------
+    day :
+        
+    expected :
+        
+
+    Returns
+    -------
+
+    """
     assert previous_workday(day) == expected
 
 
@@ -77,6 +165,19 @@
     "day,expected", [(_SATURDAY, _THURSDAY), (_SUNDAY, _FRIDAY), (_TUESDAY, _MONDAY)]
 )
 def test_before_nearest_workday(day, expected):
+    """
+
+    Parameters
+    ----------
+    day :
+        
+    expected :
+        
+
+    Returns
+    -------
+
+    """
     assert before_nearest_workday(day) == expected
 
 
@@ -84,4 +185,17 @@
     "day,expected", [(_SATURDAY, _MONDAY), (_SUNDAY, _TUESDAY), (_FRIDAY, _MONDAY)]
 )
 def test_after_nearest_workday(day, expected):
+    """
+
+    Parameters
+    ----------
+    day :
+        
+    expected :
+        
+
+    Returns
+    -------
+
+    """
     assert after_nearest_workday(day) == expected
