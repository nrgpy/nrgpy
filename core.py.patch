# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/certifi/core.py
+++ b/..//venv/lib/python3.8/site-packages/certifi/core.py
@@ -15,6 +15,7 @@
     _CACERT_PATH = None
 
     def where():
+        """ """
         # This is slightly terrible, but we want to delay extracting the file
         # in cases where we're inside of a zipimport situation until someone
         # actually calls where(), but we don't want to re-extract the file
@@ -45,16 +46,33 @@
     # so won't address issues with environments like PyOxidizer that don't set
     # __file__ on modules.
     def read_text(_module, _path, encoding="ascii"):
+        """
+
+        Parameters
+        ----------
+        _module :
+            
+        _path :
+            
+        encoding :
+             (Default value = "ascii")
+
+        Returns
+        -------
+
+        """
         with open(where(), "r", encoding=encoding) as data:
             return data.read()
 
     # If we don't have importlib.resources, then we will just do the old logic
     # of assuming we're on the filesystem and munge the path directly.
     def where():
+        """ """
         f = os.path.dirname(__file__)
 
         return os.path.join(f, "cacert.pem")
 
 
 def contents():
+    """ """
     return read_text("certifi", "cacert.pem", encoding="ascii")
