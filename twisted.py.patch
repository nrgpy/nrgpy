# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/tornado/platform/twisted.py
+++ b/..//venv/lib/python3.8/site-packages/tornado/platform/twisted.py
@@ -38,7 +38,7 @@
 
 class TwistedResolver(Resolver):
     """Twisted-based asynchronous resolver.
-
+    
     This is a non-blocking and non-threaded resolver.  It is
     recommended only when threads cannot be used, since it has
     limitations compared to the standard ``getaddrinfo``-based
@@ -47,14 +47,22 @@
     most one result, and arguments other than ``host`` and ``family``
     are ignored.  It may fail to resolve when ``family`` is not
     ``socket.AF_UNSPEC``.
-
+    
     Requires Twisted 12.1 or newer.
-
+    
     .. versionchanged:: 5.0
        The ``io_loop`` argument (deprecated since version 4.1) has been removed.
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
 
     def initialize(self) -> None:
+        """ """
         # partial copy of twisted.names.client.createResolver, which doesn't
         # allow for a reactor to be passed in.
         self.reactor = twisted.internet.asyncioreactor.AsyncioSelectorReactor()
@@ -72,6 +80,21 @@
     def resolve(
         self, host: str, port: int, family: int = 0
     ) -> "Generator[Any, Any, List[Tuple[int, Any]]]":
+        """
+
+        Parameters
+        ----------
+        host: str :
+            
+        port: int :
+            
+        family: int :
+             (Default value = 0)
+
+        Returns
+        -------
+
+        """
         # getHostByName doesn't accept IP addresses, so if the input
         # looks like an IP address just return it immediately.
         if twisted.internet.abstract.isIPAddress(host):
@@ -106,21 +129,27 @@
 
 def install() -> None:
     """Install ``AsyncioSelectorReactor`` as the default Twisted reactor.
-
+    
     .. deprecated:: 5.1
-
+    
        This function is provided for backwards compatibility; code
        that does not require compatibility with older versions of
        Tornado should use
        ``twisted.internet.asyncioreactor.install()`` directly.
-
+    
     .. versionchanged:: 6.0.3
-
+    
        In Tornado 5.x and before, this function installed a reactor
        based on the Tornado ``IOLoop``. When that reactor
        implementation was removed in Tornado 6.0.0, this function was
        removed as well. It was restored in Tornado 6.0.3 using the
        ``asyncio`` reactor instead.
+
+    Parameters
+    ----------
+
+    Returns
+    -------
 
     """
     from twisted.internet.asyncioreactor import install
@@ -132,9 +161,31 @@
 
     @gen.convert_yielded.register(Deferred)  # type: ignore
     def _(d: Deferred) -> Future:
+        """
+
+        Parameters
+        ----------
+        d: Deferred :
+            
+
+        Returns
+        -------
+
+        """
         f = Future()  # type: Future[Any]
 
         def errback(failure: failure.Failure) -> None:
+            """
+
+            Parameters
+            ----------
+            failure: failure.Failure :
+                
+
+            Returns
+            -------
+
+            """
             try:
                 failure.raiseException()
                 # Should never happen, but just in case
