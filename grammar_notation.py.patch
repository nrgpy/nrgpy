# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pygments/lexers/grammar_notation.py
+++ b/..//venv/lib/python3.8/site-packages/pygments/lexers/grammar_notation.py
@@ -19,31 +19,37 @@
 
 
 class BnfLexer(RegexLexer):
-    """
-    This lexer is for grammar notations which are similar to
+    """This lexer is for grammar notations which are similar to
     original BNF.
-
+    
     In order to maximize a number of targets of this lexer,
     let's decide some designs:
-
+    
     * We don't distinguish `Terminal Symbol`.
-
+    
     * We do assume that `NonTerminal Symbol` are always enclosed
       with arrow brackets.
-
+    
     * We do assume that `NonTerminal Symbol` may include
       any printable characters except arrow brackets and ASCII 0x20.
       This assumption is for `RBNF <http://www.rfc-base.org/txt/rfc-5511.txt>`_.
-
+    
     * We do assume that target notation doesn't support comment.
-
+    
     * We don't distinguish any operators and punctuation except
       `::=`.
-
+    
     Though these desision making might cause too minimal highlighting
     and you might be disappointed, but it is reasonable for us.
-
+    
     .. versionadded:: 2.1
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
 
     name = 'BNF'
@@ -67,13 +73,19 @@
 
 
 class AbnfLexer(RegexLexer):
-    """
-    Lexer for `IETF 7405 ABNF
+    """Lexer for `IETF 7405 ABNF
     <http://www.ietf.org/rfc/rfc7405.txt>`_
     (Updates `5234 <http://www.ietf.org/rfc/rfc5234.txt>`_)
     grammars.
-
+    
     .. versionadded:: 2.1
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
 
     name = 'ABNF'
@@ -134,11 +146,17 @@
 
 
 class JsgfLexer(RegexLexer):
-    """
-    For `JSpeech Grammar Format <https://www.w3.org/TR/jsgf/>`_
+    """For `JSpeech Grammar Format <https://www.w3.org/TR/jsgf/>`_
     grammars.
-
+    
     .. versionadded:: 2.2
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
     name = 'JSGF'
     aliases = ['jsgf']
@@ -214,24 +232,30 @@
 
 
 class PegLexer(RegexLexer):
-    """
-    This lexer is for `Parsing Expression Grammars
+    """This lexer is for `Parsing Expression Grammars
     <https://bford.info/pub/lang/peg.pdf>`_ (PEG).
-
+    
     Various implementations of PEG have made different decisions
     regarding the syntax, so let's try to be accommodating:
-
+    
     * `<-`, `←`, `:`, and `=` are all accepted as rule operators.
-
+    
     * Both `|` and `/` are choice operators.
-
+    
     * `^`, `↑`, and `~` are cut operators.
-
+    
     * A single `a-z` character immediately before a string, or
       multiple `a-z` characters following a string, are part of the
       string (e.g., `r"..."` or `"..."ilmsuxa`).
-
+    
     .. versionadded:: 2.6
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
 
     name = 'PEG'
