# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/jupyter_client/win_interrupt.py
+++ b/..//venv/lib/python3.8/site-packages/jupyter_client/win_interrupt.py
@@ -8,16 +8,24 @@
 
 def create_interrupt_event():
     """Create an interrupt event handle.
-
+    
     The parent process should call this to create the
     interrupt event that is passed to the child process. It should store
     this handle and use it with ``send_interrupt`` to interrupt the child
     process.
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
     # Create a security attributes struct that permits inheritance of the
     # handle by new processes.
     # FIXME: We can clean up this mess by requiring pywin32 for IPython.
     class SECURITY_ATTRIBUTES(ctypes.Structure):
+        """ """
         _fields_ = [ ("nLength", ctypes.c_int),
                      ("lpSecurityDescriptor", ctypes.c_void_p),
                      ("bInheritHandle", ctypes.c_int) ]
@@ -34,6 +42,15 @@
         '')    # lpName
 
 def send_interrupt(interrupt_handle):
-    """ Sends an interrupt event using the specified handle.
+    """Sends an interrupt event using the specified handle.
+
+    Parameters
+    ----------
+    interrupt_handle :
+        
+
+    Returns
+    -------
+
     """
     ctypes.windll.kernel32.SetEvent(interrupt_handle)
