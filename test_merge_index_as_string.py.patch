# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/reshape/merge/test_merge_index_as_string.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/reshape/merge/test_merge_index_as_string.py
@@ -7,6 +7,7 @@
 
 @pytest.fixture
 def df1():
+    """ """
     return DataFrame(
         dict(
             outer=[1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4],
@@ -18,6 +19,7 @@
 
 @pytest.fixture
 def df2():
+    """ """
     return DataFrame(
         dict(
             outer=[1, 1, 1, 1, 1, 1, 2, 2, 3, 3, 3, 3],
@@ -29,8 +31,19 @@
 
 @pytest.fixture(params=[[], ["outer"], ["outer", "inner"]])
 def left_df(request, df1):
-    """ Construct left test DataFrame with specified levels
+    """Construct left test DataFrame with specified levels
     (any of 'outer', 'inner', and 'v1')
+
+    Parameters
+    ----------
+    request :
+        
+    df1 :
+        
+
+    Returns
+    -------
+
     """
     levels = request.param
     if levels:
@@ -41,8 +54,19 @@
 
 @pytest.fixture(params=[[], ["outer"], ["outer", "inner"]])
 def right_df(request, df2):
-    """ Construct right test DataFrame with specified levels
+    """Construct right test DataFrame with specified levels
     (any of 'outer', 'inner', and 'v2')
+
+    Parameters
+    ----------
+    request :
+        
+    df2 :
+        
+
+    Returns
+    -------
+
     """
     levels = request.param
 
@@ -53,9 +77,8 @@
 
 
 def compute_expected(df_left, df_right, on=None, left_on=None, right_on=None, how=None):
-    """
-    Compute the expected merge result for the test case.
-
+    """Compute the expected merge result for the test case.
+    
     This method computes the expected result of merging two DataFrames on
     a combination of their columns and index levels. It does so by
     explicitly dropping/resetting their named index levels, performing a
@@ -69,18 +92,18 @@
     df_right : DataFrame
         The right DataFrame (may have zero or more named index levels)
     on : list of str
-        The on parameter to the merge operation
+        The on parameter to the merge operation (Default value = None)
     left_on : list of str
-        The left_on parameter to the merge operation
+        The left_on parameter to the merge operation (Default value = None)
     right_on : list of str
-        The right_on parameter to the merge operation
+        The right_on parameter to the merge operation (Default value = None)
     how : str
-        The how parameter to the merge operation
-
-    Returns
-    -------
-    DataFrame
-        The expected merge result
+        The how parameter to the merge operation (Default value = None)
+
+    Returns
+    -------
+
+    
     """
     # Handle on param if specified
     if on is not None:
@@ -131,6 +154,23 @@
     ],
 )
 def test_merge_indexes_and_columns_on(left_df, right_df, on, how):
+    """
+
+    Parameters
+    ----------
+    left_df :
+        
+    right_df :
+        
+    on :
+        
+    how :
+        
+
+    Returns
+    -------
+
+    """
 
     # Construct expected result
     expected = compute_expected(left_df, right_df, on=on, how=how)
@@ -152,6 +192,25 @@
 def test_merge_indexes_and_columns_lefton_righton(
     left_df, right_df, left_on, right_on, how
 ):
+    """
+
+    Parameters
+    ----------
+    left_df :
+        
+    right_df :
+        
+    left_on :
+        
+    right_on :
+        
+    how :
+        
+
+    Returns
+    -------
+
+    """
 
     # Construct expected result
     expected = compute_expected(
@@ -165,6 +224,23 @@
 
 @pytest.mark.parametrize("left_index", ["inner", ["inner", "outer"]])
 def test_join_indexes_and_columns_on(df1, df2, left_index, join_type):
+    """
+
+    Parameters
+    ----------
+    df1 :
+        
+    df2 :
+        
+    left_index :
+        
+    join_type :
+        
+
+    Returns
+    -------
+
+    """
 
     # Construct left_df
     left_df = df1.set_index(left_index)
