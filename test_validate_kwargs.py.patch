# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/util/test_validate_kwargs.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/util/test_validate_kwargs.py
@@ -6,6 +6,7 @@
 
 
 def test_bad_kwarg():
+    """ """
     good_arg = "f"
     bad_arg = good_arg + "o"
 
@@ -20,6 +21,17 @@
 
 @pytest.mark.parametrize("i", range(1, 3))
 def test_not_all_none(i):
+    """
+
+    Parameters
+    ----------
+    i :
+        
+
+    Returns
+    -------
+
+    """
     bad_arg = "foo"
     msg = (
         fr"the '{bad_arg}' parameter is not supported "
@@ -38,6 +50,7 @@
 
 
 def test_validation():
+    """ """
     # No exceptions should be raised.
     compat_args = {"f": None, "b": 1, "ba": "s"}
 
@@ -48,6 +61,19 @@
 @pytest.mark.parametrize("name", ["inplace", "copy"])
 @pytest.mark.parametrize("value", [1, "True", [1, 2, 3], 5.0])
 def test_validate_bool_kwarg_fail(name, value):
+    """
+
+    Parameters
+    ----------
+    name :
+        
+    value :
+        
+
+    Returns
+    -------
+
+    """
     msg = (
         f'For argument "{name}" expected type bool, '
         f"received type {type(value).__name__}"
@@ -60,4 +86,17 @@
 @pytest.mark.parametrize("name", ["inplace", "copy"])
 @pytest.mark.parametrize("value", [True, False, None])
 def test_validate_bool_kwarg(name, value):
+    """
+
+    Parameters
+    ----------
+    name :
+        
+    value :
+        
+
+    Returns
+    -------
+
+    """
     assert validate_bool_kwarg(value, name) == value
