# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/numpy/distutils/tests/test_system_info.py
+++ b/..//venv/lib/python3.8/site-packages/numpy/distutils/tests/test_system_info.py
@@ -14,11 +14,21 @@
 
 
 def get_class(name, notfound_action=1):
-    """
-    notfound_action:
+    """notfound_action:
       0 - do nothing
       1 - display warning message
       2 - raise error
+
+    Parameters
+    ----------
+    name :
+        
+    notfound_action :
+         (Default value = 1)
+
+    Returns
+    -------
+
     """
     cl = {'temp1': Temp1Info,
           'temp2': Temp2Info,
@@ -62,8 +72,7 @@
 """
 
 def have_compiler():
-    """ Return True if there appears to be an executable compiler
-    """
+    """ """
     compiler = customized_ccompiler()
     try:
         cmd = compiler.compiler  # Unix compilers
@@ -88,6 +97,7 @@
 
 
 class _system_info(system_info):
+    """ """
 
     def __init__(self,
                  default_lib_dirs=default_lib_dirs,
@@ -109,7 +119,23 @@
         # to have a consistent temporary filepath
 
     def _check_libs(self, lib_dirs, libs, opt_libs, exts):
-        """Override _check_libs to return with all dirs """
+        """Override _check_libs to return with all dirs
+
+        Parameters
+        ----------
+        lib_dirs :
+            
+        libs :
+            
+        opt_libs :
+            
+        exts :
+            
+
+        Returns
+        -------
+
+        """
         info = {'libraries': libs, 'library_dirs': lib_dirs}
         return info
 
@@ -129,9 +155,10 @@
 
 
 class TestSystemInfoReading:
+    """ """
 
     def setup(self):
-        """ Create the libraries """
+        """Create the libraries"""
         # Create 2 sources and 2 libraries
         self._dir1 = mkdtemp()
         self._src1 = os.path.join(self._dir1, 'foo.c')
@@ -162,6 +189,19 @@
         # We create all class-instances
 
         def site_and_parse(c, site_cfg):
+            """
+
+            Parameters
+            ----------
+            c :
+                
+            site_cfg :
+                
+
+            Returns
+            -------
+
+            """
             c.files = [site_cfg]
             c.parse_config_files()
             return c
@@ -173,6 +213,7 @@
 
 
     def teardown(self):
+        """ """
         # Do each removal separately
         try:
             shutil.rmtree(self._dir1)
@@ -188,6 +229,7 @@
             pass
 
     def test_all(self):
+        """ """
         # Read in all information in the ALL block
         tsi = self.c_default
         assert_equal(tsi.get_lib_dirs(), [self._dir1, self._dir2])
@@ -197,6 +239,7 @@
         assert_equal(extra['extra_compile_args'], ['-I/fake/directory', '-I/path with/spaces', '-Os'])
 
     def test_temp1(self):
+        """ """
         # Read in all information in the temp1 block
         tsi = self.c_temp1
         assert_equal(tsi.get_lib_dirs(), [self._dir1])
@@ -204,6 +247,7 @@
         assert_equal(tsi.get_runtime_lib_dirs(), [self._dir1])
 
     def test_temp2(self):
+        """ """
         # Read in all information in the temp2 block
         tsi = self.c_temp2
         assert_equal(tsi.get_lib_dirs(), [self._dir2])
@@ -214,6 +258,7 @@
         assert_equal(extra['extra_link_args'], ['-Wl,-rpath=' + self._lib2])
 
     def test_duplicate_options(self):
+        """ """
         # Ensure that duplicates are raising an AliasedOptionError
         tsi = self.c_dup_options
         assert_raises(AliasedOptionError, tsi.get_option_single, "mylib_libs", "libraries")
@@ -222,6 +267,7 @@
 
     @pytest.mark.skipif(not HAVE_COMPILER, reason="Missing compiler")
     def test_compile1(self):
+        """ """
         # Compile source and link the first source
         c = customized_ccompiler()
         previousDir = os.getcwd()
@@ -239,6 +285,7 @@
     @pytest.mark.skipif('msvc' in repr(ccompiler.new_compiler()),
                          reason="Fails with MSVC compiler ")
     def test_compile2(self):
+        """ """
         # Compile source and link the second source
         tsi = self.c_temp2
         c = customized_ccompiler()
@@ -255,6 +302,7 @@
             os.chdir(previousDir)
 
     def test_overrides(self):
+        """ """
         previousDir = os.getcwd()
         cfg = os.path.join(self._dir1, 'site.cfg')
         shutil.copy(self._sitecfg, cfg)
