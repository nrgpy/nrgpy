# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/IPython/extensions/storemagic.py
+++ b/..//venv/lib/python3.8/site-packages/IPython/extensions/storemagic.py
@@ -21,6 +21,19 @@
 
 
 def restore_aliases(ip, alias=None):
+    """
+
+    Parameters
+    ----------
+    ip :
+        
+    alias :
+         (Default value = None)
+
+    Returns
+    -------
+
+    """
     staliases = ip.db.get('stored_aliases', {})
     if alias is None:
         for k,v in staliases.items():
@@ -32,6 +45,17 @@
 
 
 def refresh_variables(ip):
+    """
+
+    Parameters
+    ----------
+    ip :
+        
+
+    Returns
+    -------
+
+    """
     db = ip.db
     for key in db.keys('autorestore/*'):
         # strip autorestore
@@ -47,10 +71,32 @@
 
 
 def restore_dhist(ip):
+    """
+
+    Parameters
+    ----------
+    ip :
+        
+
+    Returns
+    -------
+
+    """
     ip.user_ns['_dh'] = ip.db.get('dhist',[])
 
 
 def restore_data(ip):
+    """
+
+    Parameters
+    ----------
+    ip :
+        
+
+    Returns
+    -------
+
+    """
     refresh_variables(ip)
     restore_aliases(ip)
     restore_dhist(ip)
@@ -59,8 +105,16 @@
 @magics_class
 class StoreMagics(Magics):
     """Lightweight persistence for python variables.
-
-    Provides the %store magic."""
+    
+    Provides the %store magic.
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
+    """
 
     autorestore = Bool(False, help=
         """If True, any %store-d variables will be automatically restored
@@ -77,24 +131,24 @@
     @line_magic
     def store(self, parameter_s=''):
         """Lightweight persistence for python variables.
-
+        
         Example::
-
+        
           In [1]: l = ['hello',10,'world']
           In [2]: %store l
           In [3]: exit
-
+        
           (IPython session is closed and started again...)
-
+        
           ville@badger:~$ ipython
           In [1]: l
           NameError: name 'l' is not defined
           In [2]: %store -r
           In [3]: l
           Out[3]: ['hello', 10, 'world']
-
+        
         Usage:
-
+        
         * ``%store``          - Show list of all variables and their current
                                 values
         * ``%store spam bar`` - Store the *current* value of the variables spam
@@ -107,15 +161,24 @@
                                    (delete current val)
         * ``%store foo >a.txt``  - Store value of foo to new file a.txt
         * ``%store foo >>a.txt`` - Append value of foo to file a.txt
-
+        
         It should be noted that if you change the value of a variable, you
         need to %store it again if you want to persist the new value.
-
+        
         Note also that the variables will need to be pickleable; most basic
         python types can be safely %store'd.
-
+        
         Also aliases can be %store'd across sessions.
         To remove an alias from the storage, use the %unalias magic.
+
+        Parameters
+        ----------
+        parameter_s :
+             (Default value = '')
+
+        Returns
+        -------
+
         """
 
         opts,argsl = self.parse_options(parameter_s,'drz',mode='string')
@@ -228,6 +291,16 @@
 
 
 def load_ipython_extension(ip):
-    """Load the extension in IPython."""
+    """Load the extension in IPython.
+
+    Parameters
+    ----------
+    ip :
+        
+
+    Returns
+    -------
+
+    """
     ip.register_magics(StoreMagics)
 
