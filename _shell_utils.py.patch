# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/numpy/distutils/_shell_utils.py
+++ b/..//venv/lib/python3.8/site-packages/numpy/distutils/_shell_utils.py
@@ -14,38 +14,92 @@
 
 
 class CommandLineParser:
-    """
-    An object that knows how to split and join command-line arguments.
-
+    """An object that knows how to split and join command-line arguments.
+    
     It must be true that ``argv == split(join(argv))`` for all ``argv``.
     The reverse neednt be true - `join(split(cmd))` may result in the addition
     or removal of unnecessary escaping.
+
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
     @staticmethod
     def join(argv):
-        """ Join a list of arguments into a command line string """
+        """Join a list of arguments into a command line string
+
+        Parameters
+        ----------
+        argv :
+            
+
+        Returns
+        -------
+
+        """
         raise NotImplementedError
 
     @staticmethod
     def split(cmd):
-        """ Split a command line string into a list of arguments """
+        """Split a command line string into a list of arguments
+
+        Parameters
+        ----------
+        cmd :
+            
+
+        Returns
+        -------
+
+        """
         raise NotImplementedError
 
 
 class WindowsParser:
-    """
-    The parsing behavior used by `subprocess.call("string")` on Windows, which
+    """The parsing behavior used by `subprocess.call("string")` on Windows, which
     matches the Microsoft C/C++ runtime.
+    
+    Note that this is _not_ the behavior of cmd.
 
-    Note that this is _not_ the behavior of cmd.
+    Parameters
+    ----------
+
+    Returns
+    -------
+
     """
     @staticmethod
     def join(argv):
+        """
+
+        Parameters
+        ----------
+        argv :
+            
+
+        Returns
+        -------
+
+        """
         # note that list2cmdline is specific to the windows syntax
         return subprocess.list2cmdline(argv)
 
     @staticmethod
     def split(cmd):
+        """
+
+        Parameters
+        ----------
+        cmd :
+            
+
+        Returns
+        -------
+
+        """
         import ctypes  # guarded import for systems without ctypes
         try:
             ctypes.windll
@@ -73,15 +127,35 @@
 
 
 class PosixParser:
-    """
-    The parsing behavior used by `subprocess.call("string", shell=True)` on Posix.
-    """
+    """The parsing behavior used by `subprocess.call("string", shell=True)` on Posix."""
     @staticmethod
     def join(argv):
+        """
+
+        Parameters
+        ----------
+        argv :
+            
+
+        Returns
+        -------
+
+        """
         return ' '.join(quote(arg) for arg in argv)
 
     @staticmethod
     def split(cmd):
+        """
+
+        Parameters
+        ----------
+        cmd :
+            
+
+        Returns
+        -------
+
+        """
         return shlex.split(cmd, posix=True)
 
 
