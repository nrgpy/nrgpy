# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/groupby/test_quantile.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/groupby/test_quantile.py
@@ -32,6 +32,23 @@
 )
 @pytest.mark.parametrize("q", [0, 0.25, 0.5, 0.75, 1])
 def test_quantile(interpolation, a_vals, b_vals, q):
+    """
+
+    Parameters
+    ----------
+    interpolation :
+        
+    a_vals :
+        
+    b_vals :
+        
+    q :
+        
+
+    Returns
+    -------
+
+    """
     if interpolation == "nearest" and q == 0.5 and b_vals == [4, 3, 2, 1]:
         pytest.skip(
             "Unclear numpy expectation for nearest result with equidistant data"
@@ -53,6 +70,7 @@
 
 
 def test_quantile_array():
+    """ """
     # https://github.com/pandas-dev/pandas/issues/27526
     df = pd.DataFrame({"A": [0, 1, 2, 3, 4]})
     result = df.groupby([0, 0, 1, 1, 1]).quantile([0.25])
@@ -72,6 +90,7 @@
 
 
 def test_quantile_array2():
+    """ """
     # https://github.com/pandas-dev/pandas/pull/28085#issuecomment-524066959
     df = pd.DataFrame(
         np.random.RandomState(0).randint(0, 5, size=(10, 3)), columns=list("ABC")
@@ -90,6 +109,7 @@
 
 
 def test_quantile_array_no_sort():
+    """ """
     df = pd.DataFrame({"A": [0, 1, 2], "B": [3, 4, 5]})
     result = df.groupby([1, 0, 1], sort=False).quantile([0.25, 0.5, 0.75])
     expected = pd.DataFrame(
@@ -107,6 +127,7 @@
 
 
 def test_quantile_array_multiple_levels():
+    """ """
     df = pd.DataFrame(
         {"A": [0, 1, 2], "B": [3, 4, 5], "c": ["a", "a", "a"], "d": ["a", "a", "b"]}
     )
@@ -125,6 +146,21 @@
 @pytest.mark.parametrize("groupby", [[0], [0, 1]])
 @pytest.mark.parametrize("q", [[0.5, 0.6]])
 def test_groupby_quantile_with_arraylike_q_and_int_columns(frame_size, groupby, q):
+    """
+
+    Parameters
+    ----------
+    frame_size :
+        
+    groupby :
+        
+    q :
+        
+
+    Returns
+    -------
+
+    """
     # GH30289
     nrow, ncol = frame_size
     df = pd.DataFrame(
@@ -151,6 +187,7 @@
 
 
 def test_quantile_raises():
+    """ """
     df = pd.DataFrame(
         [["foo", "a"], ["foo", "b"], ["foo", "c"]], columns=["key", "val"]
     )
@@ -160,6 +197,7 @@
 
 
 def test_quantile_out_of_bounds_q_raises():
+    """ """
     # https://github.com/pandas-dev/pandas/issues/27470
     df = pd.DataFrame(dict(a=[0, 0, 0, 1, 1, 1], b=range(6)))
     g = df.groupby([0, 0, 0, 1, 1, 1])
@@ -171,6 +209,7 @@
 
 
 def test_quantile_missing_group_values_no_segfaults():
+    """ """
     # GH 28662
     data = np.array([1.0, np.nan, 1.0])
     df = pd.DataFrame(dict(key=data, val=range(3)))
@@ -194,6 +233,23 @@
 def test_quantile_missing_group_values_correct_results(
     key, val, expected_key, expected_val
 ):
+    """
+
+    Parameters
+    ----------
+    key :
+        
+    val :
+        
+    expected_key :
+        
+    expected_val :
+        
+
+    Returns
+    -------
+
+    """
     # GH 28662, GH 33200, GH 33569
     df = pd.DataFrame({"key": key, "val": val})
 
@@ -219,6 +275,19 @@
 )
 @pytest.mark.parametrize("q", [0.5, [0.0, 0.5, 1.0]])
 def test_groupby_quantile_nullable_array(values, q):
+    """
+
+    Parameters
+    ----------
+    values :
+        
+    q :
+        
+
+    Returns
+    -------
+
+    """
     # https://github.com/pandas-dev/pandas/issues/33136
     df = pd.DataFrame({"a": ["x"] * 3 + ["y"] * 3, "b": values})
     result = df.groupby("a")["b"].quantile(q)
@@ -236,6 +305,17 @@
 
 @pytest.mark.parametrize("q", [0.5, [0.0, 0.5, 1.0]])
 def test_groupby_quantile_skips_invalid_dtype(q):
+    """
+
+    Parameters
+    ----------
+    q :
+        
+
+    Returns
+    -------
+
+    """
     df = pd.DataFrame({"a": [1], "b": [2.0], "c": ["x"]})
     result = df.groupby("a").quantile(q)
     expected = df.groupby("a")[["b"]].quantile(q)
