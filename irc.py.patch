# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pygments/formatters/irc.py
+++ b/..//venv/lib/python3.8/site-packages/pygments/formatters/irc.py
@@ -77,6 +77,19 @@
 }
 
 def ircformat(color, text):
+    """
+
+    Parameters
+    ----------
+    color :
+        
+    text :
+        
+
+    Returns
+    -------
+
+    """
     if len(color) < 1:
         return text
     add = sub = ''
@@ -98,26 +111,31 @@
 
 
 class IRCFormatter(Formatter):
-    r"""
+    """r"""
     Format tokens with IRC color sequences
-
+    
     The `get_style_defs()` method doesn't do anything special since there is
     no support for common styles.
-
+    
     Options accepted:
-
+    
     `bg`
         Set to ``"light"`` or ``"dark"`` depending on the terminal's background
         (default: ``"light"``).
-
+    
     `colorscheme`
         A dictionary mapping token types to (lightbg, darkbg) color names or
         ``None`` (default: ``None`` = use builtin colorscheme).
-
+    
     `linenos`
         Set to ``True`` to have line numbers in the output as well
         (default: ``False`` = no line numbers).
-    """
+
+    Parameters
+    ----------
+
+    Returns
+    -------
     name = 'IRC'
     aliases = ['irc', 'IRC']
     filenames = []
@@ -131,10 +149,34 @@
         self._lineno = 0
 
     def _write_lineno(self, outfile):
+        """
+
+        Parameters
+        ----------
+        outfile :
+            
+
+        Returns
+        -------
+
+        """
         self._lineno += 1
         outfile.write("\n%04d: " % self._lineno)
 
     def _format_unencoded_with_lineno(self, tokensource, outfile):
+        """
+
+        Parameters
+        ----------
+        tokensource :
+            
+        outfile :
+            
+
+        Returns
+        -------
+
+        """
         self._write_lineno(outfile)
 
         for ttype, value in tokensource:
@@ -160,6 +202,19 @@
         outfile.write("\n")
 
     def format_unencoded(self, tokensource, outfile):
+        """
+
+        Parameters
+        ----------
+        tokensource :
+            
+        outfile :
+            
+
+        Returns
+        -------
+
+        """
         if self.linenos:
             self._format_unencoded_with_lineno(tokensource, outfile)
             return
