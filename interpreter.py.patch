# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/jedi/api/interpreter.py
+++ b/..//venv/lib/python3.8/site-packages/jedi/api/interpreter.py
@@ -12,22 +12,43 @@
 
 
 def _create(inference_state, obj):
+    """
+
+    Parameters
+    ----------
+    inference_state :
+        
+    obj :
+        
+
+    Returns
+    -------
+
+    """
     return compiled.create_from_access_path(
         inference_state, create_access_path(inference_state, obj)
     )
 
 
 class NamespaceObject(object):
+    """ """
     def __init__(self, dct):
         self.__dict__ = dct
 
 
 class MixedTreeName(TreeNameDefinition):
+    """ """
     def infer(self):
-        """
-        In IPython notebook it is typical that some parts of the code that is
+        """In IPython notebook it is typical that some parts of the code that is
         provided was already executed. In that case if something is not properly
         inferred, it should still infer from the variables it already knows.
+
+        Parameters
+        ----------
+
+        Returns
+        -------
+
         """
         inferred = super(MixedTreeName, self).infer()
         if not inferred:
@@ -42,10 +63,12 @@
 
 
 class MixedParserTreeFilter(ParserTreeFilter):
+    """ """
     name_class = MixedTreeName
 
 
 class MixedModuleContext(ModuleContext):
+    """ """
     def __init__(self, tree_module_value, namespaces):
         super(MixedModuleContext, self).__init__(tree_module_value)
         self.mixed_values = [
@@ -55,12 +78,36 @@
         ]
 
     def _get_mixed_object(self, compiled_value):
+        """
+
+        Parameters
+        ----------
+        compiled_value :
+            
+
+        Returns
+        -------
+
+        """
         return mixed.MixedObject(
             compiled_value=compiled_value,
             tree_value=self._value
         )
 
     def get_filters(self, until_position=None, origin_scope=None):
+        """
+
+        Parameters
+        ----------
+        until_position :
+             (Default value = None)
+        origin_scope :
+             (Default value = None)
+
+        Returns
+        -------
+
+        """
         yield MergedFilter(
             MixedParserTreeFilter(
                 parent_context=self,
