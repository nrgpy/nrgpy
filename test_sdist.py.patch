# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pkginfo/tests/test_sdist.py
+++ b/..//venv/lib/python3.8/site-packages/pkginfo/tests/test_sdist.py
@@ -3,17 +3,45 @@
 import unittest
 
 class SDistTests(unittest.TestCase):
+    """ """
 
     def _getTargetClass(self):
+        """ """
         from pkginfo.sdist import SDist
         return SDist
 
     def _makeOne(self, filename=None, metadata_version=None):
+        """
+
+        Parameters
+        ----------
+        filename :
+             (Default value = None)
+        metadata_version :
+             (Default value = None)
+
+        Returns
+        -------
+
+        """
         if metadata_version is not None:
             return self._getTargetClass()(filename, metadata_version)
         return self._getTargetClass()(filename)
 
     def _checkSample(self, sdist, filename):
+        """
+
+        Parameters
+        ----------
+        sdist :
+            
+        filename :
+            
+
+        Returns
+        -------
+
+        """
         self.assertEqual(sdist.filename, filename)
         self.assertEqual(sdist.name, 'mypackage')
         self.assertEqual(sdist.version, '0.1')
@@ -21,24 +49,38 @@
         self.assertEqual(list(sdist.supported_platforms), [])
 
     def _checkClassifiers(self, sdist):
+        """
+
+        Parameters
+        ----------
+        sdist :
+            
+
+        Returns
+        -------
+
+        """
         self.assertEqual(list(sdist.classifiers),
                          ['Development Status :: 4 - Beta',
                           'Environment :: Console (Text Based)',
                          ])
 
     def test_ctor_w_invalid_filename(self):
+        """ """
         import os
         d, _ = os.path.split(__file__)
         filename = '%s/../../docs/examples/nonesuch-0.1.tar.gz' % d
         self.assertRaises(ValueError, self._makeOne, filename)
 
     def test_ctor_wo_PKG_INFO(self):
+        """ """
         import os
         d, _ = os.path.split(__file__)
         filename = '%s/../../docs/examples/nopkginfo-0.1.zip' % d
         self.assertRaises(ValueError, self._makeOne, filename)
 
     def test_ctor_w_gztar(self):
+        """ """
         import os
         d, _ = os.path.split(__file__)
         filename = '%s/../../docs/examples/mypackage-0.1.tar.gz' % d
@@ -47,6 +89,7 @@
         self._checkSample(sdist, filename)
 
     def test_ctor_w_gztar_and_metadata_version(self):
+        """ """
         import os
         d, _ = os.path.split(__file__)
         filename = '%s/../../docs/examples/mypackage-0.1.tar.gz' % d
@@ -56,6 +99,7 @@
         self._checkClassifiers(sdist)
 
     def test_ctor_w_bztar(self):
+        """ """
         import os
         d, _ = os.path.split(__file__)
         filename = '%s/../../docs/examples/mypackage-0.1.tar.bz2' % d
@@ -64,6 +108,7 @@
         self._checkSample(sdist, filename)
 
     def test_ctor_w_bztar_and_metadata_version(self):
+        """ """
         import os
         d, _ = os.path.split(__file__)
         filename = '%s/../../docs/examples/mypackage-0.1.tar.bz2' % d
@@ -73,6 +118,7 @@
         self._checkClassifiers(sdist)
 
     def test_ctor_w_zip(self):
+        """ """
         import os
         d, _ = os.path.split(__file__)
         filename = '%s/../../docs/examples/mypackage-0.1.zip' % d
@@ -81,6 +127,7 @@
         self._checkSample(sdist, filename)
 
     def test_ctor_w_zip_and_metadata_version(self):
+        """ """
         import os
         d, _ = os.path.split(__file__)
         filename = '%s/../../docs/examples/mypackage-0.1.zip' % d
@@ -91,19 +138,24 @@
 
 
 class UnpackedMixin(object):
+    """ """
     def setUp(self):
+        """ """
         super(UnpackedMixin, self).setUp()
         self.__tmpdir = tempfile.mkdtemp()
 
     def tearDown(self):
+        """ """
         shutil.rmtree(self.__tmpdir)
         super(UnpackedMixin, self).tearDown()
 
     def _getTargetClass(self):
+        """ """
         from pkginfo.sdist import UnpackedSDist
         return UnpackedSDist
 
     def _getTopDirectory(self):
+        """ """
         import os
         topnames = os.listdir(self.__tmpdir)
         if len(topnames) == 1:
@@ -112,9 +164,23 @@
             return self.__tmpdir
 
     def _getLoadFilename(self):
+        """ """
         return self._getTopDirectory()
 
     def _makeOne(self, filename=None, metadata_version=None):
+        """
+
+        Parameters
+        ----------
+        filename :
+             (Default value = None)
+        metadata_version :
+             (Default value = None)
+
+        Returns
+        -------
+
+        """
 
         archive, _, _ = self._getTargetClass()._get_archive(filename)
         try:
@@ -129,14 +195,30 @@
         return self._getTargetClass()(load_filename)
 
     def _checkSample(self, sdist, filename):
+        """
+
+        Parameters
+        ----------
+        sdist :
+            
+        filename :
+            
+
+        Returns
+        -------
+
+        """
         filename = self._getTopDirectory()
         super(UnpackedMixin, self)._checkSample(sdist, filename)
 
 
 class UnpackedSDistGivenDirectoryTests(UnpackedMixin, SDistTests):
+    """ """
     pass
 
 class UnpackedSDistGivenFileSDistTests(UnpackedMixin, SDistTests):
+    """ """
     def _getLoadFilename(self):
+        """ """
         import os
         return os.path.join(self._getTopDirectory(), 'setup.py')
