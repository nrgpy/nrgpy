# Patch generated by Pyment v0.3.3

--- a/..//venv/lib/python3.8/site-packages/pandas/tests/dtypes/cast/test_downcast.py
+++ b/..//venv/lib/python3.8/site-packages/pandas/tests/dtypes/cast/test_downcast.py
@@ -37,11 +37,27 @@
     ],
 )
 def test_downcast(arr, expected, dtype):
+    """
+
+    Parameters
+    ----------
+    arr :
+        
+    expected :
+        
+    dtype :
+        
+
+    Returns
+    -------
+
+    """
     result = maybe_downcast_to_dtype(arr, dtype)
     tm.assert_numpy_array_equal(result, expected)
 
 
 def test_downcast_booleans():
+    """ """
     # see gh-16875: coercing of booleans.
     ser = Series([True, True, False])
     result = maybe_downcast_to_dtype(ser, np.dtype(np.float64))
@@ -51,6 +67,17 @@
 
 
 def test_downcast_conversion_no_nan(any_real_dtype):
+    """
+
+    Parameters
+    ----------
+    any_real_dtype :
+        
+
+    Returns
+    -------
+
+    """
     dtype = any_real_dtype
     expected = np.array([1, 2])
     arr = np.array([1.0, 2.0], dtype=dtype)
@@ -60,6 +87,17 @@
 
 
 def test_downcast_conversion_nan(float_dtype):
+    """
+
+    Parameters
+    ----------
+    float_dtype :
+        
+
+    Returns
+    -------
+
+    """
     dtype = float_dtype
     data = [1.0, 2.0, np.nan]
 
@@ -71,6 +109,17 @@
 
 
 def test_downcast_conversion_empty(any_real_dtype):
+    """
+
+    Parameters
+    ----------
+    any_real_dtype :
+        
+
+    Returns
+    -------
+
+    """
     dtype = any_real_dtype
     arr = np.array([], dtype=dtype)
     result = maybe_downcast_to_dtype(arr, "int64")
@@ -79,6 +128,17 @@
 
 @pytest.mark.parametrize("klass", [np.datetime64, np.timedelta64])
 def test_datetime_likes_nan(klass):
+    """
+
+    Parameters
+    ----------
+    klass :
+        
+
+    Returns
+    -------
+
+    """
     dtype = klass.__name__ + "[ns]"
     arr = np.array([1, 2, np.nan])
 
@@ -89,6 +149,17 @@
 
 @pytest.mark.parametrize("as_asi", [True, False])
 def test_datetime_with_timezone(as_asi):
+    """
+
+    Parameters
+    ----------
+    as_asi :
+        
+
+    Returns
+    -------
+
+    """
     # see gh-15426
     ts = Timestamp("2016-01-01 12:00:00", tz="US/Pacific")
     exp = DatetimeIndex([ts, ts])
